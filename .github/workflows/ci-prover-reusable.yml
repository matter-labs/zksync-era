name: Workflow template for CI jobs for Prover Components
on:
  workflow_call:

jobs:
  lint:
    runs-on: [matterlabs-ci-runner]
    env:
      RUNNER_COMPOSE_FILE: "docker-compose-runner-nightly.yml"

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          submodules: "recursive"

      - name: Setup environment
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo IN_DOCKER=1 >> .env

      - name: Start services
        run: |
          run_retried docker-compose -f ${RUNNER_COMPOSE_FILE} pull
          mkdir -p ./volumes/postgres
          docker-compose -f ${RUNNER_COMPOSE_FILE} up --build -d zk postgres
          ci_run sccache --start-server

      - name: Init
        run: |
          ci_run zk
          ci_run zk db setup

      - name: Formatting
        run: ci_run bash -c "cd prover && cargo fmt --check"

  unit-tests:
    runs-on: [matterlabs-ci-runner]
    env:
      RUNNER_COMPOSE_FILE: "docker-compose-runner-nightly.yml"

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          submodules: "recursive"

      - name: Setup environment
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo IN_DOCKER=1 >> .env

      - name: Start services
        run: |
          run_retried docker-compose -f ${RUNNER_COMPOSE_FILE} pull
          mkdir -p ./volumes/postgres
          docker-compose -f ${RUNNER_COMPOSE_FILE} up --build -d zk postgres
          ci_run sccache --start-server

      - name: Init
        run: |
          ci_run zk
          ci_run zk db setup

      - name: Prover unit tests
        run: |
          # Not all tests are enabled, since prover and setup_key_generator_and_server requires bellman-cuda to be present
          ci_run zk test prover
