name: Test Docker Images

on:
  pull_request:
  workflow_dispatch:

jobs:

  # Selectively clean up untagged ghcr.io core images cache
#  clean-up-untagged-cache:
#    name: Clean up untagged ghcr.io cache
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#    matrix:
#      component:
#        - server-v2
#        - external-node
#        - snapshots-creator
#    env:
#      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      API_URL: '/orgs/matter-labs/packages/container/${{ matrix.component }}/versions'
#    steps:
#      - name: Clean up cache
#        run: |
#          for ID in $(gh api ${API_URL} --jq '.[] | select(.metadata.container.tags == []) | .id'); do
#            gh api --method DELETE "${API_URL}/${ID}"
#          done

  build-images:
    name: Core docker images
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        component:
          - server-v2
          - external-node
          - snapshots-creator
    uses: matter-labs/zksync-era/.github/workflows/build-docker-common.yaml@aba-ci-optimize
    with:
      image: ${{ matrix.component }}
      dockerfile: docker/${{ matrix.component }}/Dockerfile


#  build-images:
#    name: Build and Push Docker Images
#    env:
#      IMAGE_TAG_SUFFIX: ${{ inputs.image_tag_suffix }}${{ (inputs.en_alpha_release && matrix.components == 'external-node') && '-alpha' || '' }}
#    runs-on: ${{ fromJSON('["matterlabs-ci-runner-high-performance", "matterlabs-ci-runner-arm"]')[contains(matrix.platforms, 'arm')] }}
#    permissions:
#      packages: write
#      contents: read
#    strategy:
#      matrix:
#        components:
#          - server-v2
#          - external-node
#          - snapshots-creator
#        platforms:
#          - linux/amd64
#        include:
#          - components: external-node
#            platforms: linux/arm64
#
#    steps:
#      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
#        with:
#          submodules: "recursive"
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
#
#      - name: Setup env
#        shell: bash
#        run: |
#          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
#          echo CI=1 >> $GITHUB_ENV
#          echo $(pwd)/bin >> $GITHUB_PATH
#          echo CI=1 >> .env
#          echo IN_DOCKER=1 >> .env
#
#      - name: Download setup key
#        shell: bash
#        run: |
#          if [ -f "/setup_2^26.key" ]; then
#            cp '/setup_2^26.key' './setup_2^26.key'
#          else
#            run_retried curl -LO https://storage.googleapis.com/matterlabs-setup-keys-us/setup-keys/setup_2\^26.key
#          fi
#
#      - name: Set env vars
#        shell: bash
#        run: |
#          echo PLATFORM=$(echo ${{ matrix.platforms }} | tr '/' '-') >> $GITHUB_ENV
#          if [ -n "${{ inputs.image_tag_suffix }}" ]; then
#            echo IMAGE_TAG_SHA_TS="${{ env.IMAGE_TAG_SUFFIX }}" >> $GITHUB_ENV
#          else
#            echo IMAGE_TAG_SHA_TS=$(git rev-parse --short HEAD)-$(date +%s) >> $GITHUB_ENV
#          fi
#
#      - name: Download contracts
#        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
#        with:
#          name: contacts
#          path: |
#            ./contracts
#
#      - name: login to Docker registries
#        if: ${{ inputs.action == 'push' }}
#        shell: bash
#        run: |
#          docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}
#          gcloud auth configure-docker us-docker.pkg.dev -q
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
#        if: ${{ inputs.action == 'push' }}
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build docker image
#        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0
#        with:
#          context: .
#          load: true
#          platforms: ${{ matrix.platforms }}
#          file: docker/${{ matrix.components }}/Dockerfile
#          build-args: |
#            SCCACHE_GCS_BUCKET=matterlabs-infra-sccache-storage
#            SCCACHE_GCS_SERVICE_ACCOUNT=gha-ci-runners@matterlabs-infra.iam.gserviceaccount.com
#            SCCACHE_GCS_RW_MODE=READ_WRITE
#            RUSTC_WRAPPER=sccache
#          tags: |
#            us-docker.pkg.dev/matterlabs-infra/matterlabs-docker/${{ matrix.components }}:${{ env.IMAGE_TAG_SHA_TS }}-${{ env.PLATFORM }}
#            ghcr.io/${{ github.repository_owner }}/${{ matrix.components }}:${{ env.IMAGE_TAG_SHA_TS }}-${{ env.PLATFORM }}
#            matterlabs/${{ matrix.components }}:${{ env.IMAGE_TAG_SHA_TS }}-${{ env.PLATFORM }}
#
#      - name: Push docker image
#        if: ${{ inputs.action == 'push' }}
#        run: |
#          docker push us-docker.pkg.dev/matterlabs-infra/matterlabs-docker/${{ matrix.components }}:${{ env.IMAGE_TAG_SHA_TS }}-${{ env.PLATFORM }}
#          docker push matterlabs/${{ matrix.components }}:${{ env.IMAGE_TAG_SHA_TS }}-${{ env.PLATFORM }}
#          docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.components }}:${{ env.IMAGE_TAG_SHA_TS }}-${{ env.PLATFORM }}

#  create_manifest:
#    name: Create release manifest
#    runs-on: matterlabs-ci-runner
#    needs: build-images
#    if: ${{ inputs.action == 'push' }}
#    strategy:
#      matrix:
#        component:
#          - name: server-v2
#            platform: linux/amd64
#          - name: external-node
#            platform: linux/amd64,linux/arm64
#          - name: snapshots-creator
#            platform: linux/amd64
#
#    env:
#      IMAGE_TAG_SUFFIX: ${{ inputs.image_tag_suffix }}${{ (inputs.en_alpha_release && matrix.component.name == 'external-node') && '-alpha' || '' }}
#    steps:
#      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
#
#      - name: login to Docker registries
#        run: |
#          docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}
#          gcloud auth configure-docker us-docker.pkg.dev -q
#
#      - name: Create Docker manifest
#        run: |
#          docker_repositories=("matterlabs/${{ matrix.component.name }}" "us-docker.pkg.dev/matterlabs-infra/matterlabs-docker/${{ matrix.component.name }}")
#          platforms=${{ matrix.component.platform }}
#          for repo in "${docker_repositories[@]}"; do
#            platform_tags=""
#            for platform in ${platforms//,/ }; do
#              platform=$(echo $platform | tr '/' '-')
#              platform_tags+=" --amend ${repo}:${IMAGE_TAG_SUFFIX}-${platform}"
#            done
#            for manifest in "${repo}:${IMAGE_TAG_SUFFIX}" "${repo}:2.0-${IMAGE_TAG_SUFFIX}" "${repo}:latest" "${repo}:latest2.0"; do
#              docker manifest create ${manifest} ${platform_tags}
#              docker manifest push ${manifest}
#            done
#          done
