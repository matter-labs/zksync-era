name: Workflow for testing prover component end-to-end
on:
  workflow_call:

jobs:
  e2e-test:
    runs-on: [ matterlabs-ci-gpu-runner ]
    env:
      RUNNER_COMPOSE_FILE: "docker-compose-gpu-runner-cuda-12-0.yml"

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Setup environment
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo IN_DOCKER=1 >> .env
          echo "SCCACHE_GCS_BUCKET=matterlabs-infra-sccache-storage" >> .env
          echo "SCCACHE_GCS_SERVICE_ACCOUNT=gha-ci-runners@matterlabs-infra.iam.gserviceaccount.com" >> .env
          echo "SCCACHE_GCS_RW_MODE=READ_WRITE" >> .env
          echo "RUSTC_WRAPPER=sccache" >> .env

      - name: Start services
        run: |
          run_retried docker-compose -f ${RUNNER_COMPOSE_FILE} pull
          mkdir -p ./volumes/postgres ./volumes/reth/data
          docker-compose -f ${RUNNER_COMPOSE_FILE} --profile runner up -d --wait
          ci_run sccache --start-server

      - name: Init
        run: |
          ci_run git config --global --add safe.directory /usr/src/zksync
          ci_run git config --global --add safe.directory /usr/src/zksync/sdk/binaryen
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/system-contracts
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/forge-std
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/murky
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/murky/lib/forge-std
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/murky/lib/openzeppelin-contracts
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/murky/lib/openzeppelin-contracts/lib/erc4626-tests
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/murky/lib/openzeppelin-contracts/lib/forge-std
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/murky/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/openzeppelin-contracts
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/openzeppelin-contracts/lib/forge-std
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/openzeppelin-contracts/lib/erc4626-tests
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/openzeppelin-contracts-upgradeable
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/openzeppelin-contracts-upgradeable/lib/forge-std
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/l1-contracts/lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test
          
          ci_run ./bin/zkt
          ci_run zk_inception chain create \
            --chain-name provers \
            --chain-id sequential \
            --prover-mode gpu \
            --wallet-creation localhost \
            --l1-batch-commit-data-generator-mode rollup \
            --base-token-address 0x0000000000000000000000000000000000000001 \
            --base-token-price-nominator 1 \
            --base-token-price-denominator 1 \
            --set-as-default true \
            --ignore-prerequisites 

          ci_run zk_inception ecosystem init --dev --verbose
          ci_run zk_inception prover init --dev --verbose
      - name: Build prover binaries
        run: |
          ci_run cargo build --release --workspace --manifest-path=prover/Cargo.toml
          ci_run cargo install --path prover/crates/bin/prover_cli --force
      - name: Prepare prover subsystem
        run: |
          ci_run zk_inception prover init-bellman-cuda --clone --verbose
          ci_run zk_inception prover setup-keys --mode=download --region=us --verbose
          ci_run zk_supervisor prover insert-version --default --verbose
          ci_run zk_supervisor prover insert-batch --number=1 --default --verbose
      - name: Run server
        run: |
          ci_run zk_inception server --uring --chain=provers --components=api,tree,eth,state_keeper,housekeeper,commitment_generator,da_dispatcher,proof_data_handler,vm_runner_protective_reads,vm_runner_bwip &
          ci_run sleep 180
      - name: Run Gateway
        run: |
          ci_run zk_inception prover run --component=gateway --docker=false &
          ci_run sleep 60
      - name: Run Prover Job Monitor
        run: |
          ci_run zk_inception prover run --component=prover-job-monitor --docker=false &
          ci_run sleep 15
      - name: Run Witness Generator
        run: |
          ci_run zk_inception prover run --component=witness-generator --round=all-rounds --docker=false &
          ci_run sleep 15
      - name: Run Witness Vector Generator
        run: |
          ci_run zk_inception prover run --component=witness-vector-generator --threads=8 --docker=false &
          ci_run sleep 15
      - name: Run Prover
        run: |
          ci_run zk_inception prover run --component=prover --docker=false &
          
          # Capture the PID of the prover run process
          PROVER_PID=$!
          echo "Prover started with PID: $PROVER_PID"
          
          # Store the PID in a file to reference later if needed
          echo $PROVER_PID > prover_pid.txt
          
          ci_run sleep 15

      - name: Wait for prover jobs to finish
        run: |
          echo "DATABASE_URL=postgres://postgres:notsecurepassword@localhost:5432/zksync_prover_localhost_provers" >> .env
          echo "BATCH_NUMBER=1" >> .env
          echo "INTERVAL=30" >> .env
          # 15 minutes
          echo "TIMEOUT=900" >> .env
          
          PASSED_ENV_VARS="DATABASE_URL,BATCH_NUMBER,INTERVAL,TIMEOUT" \
          ci_run ./bin/prover_jobs_status_checker

      - name: Kill prover & start compressor
        run: |
          # Read the PID from the file
          PROVER_PID=$(cat prover_pid.txt)
          echo "Killing prover with PID: $PROVER_PID"
          kill $PROVER_PID
          
          ci_run zk_inception prover run --component=compressor --docker=false &
          ci_run sleep 60
      - name: Wait for batch to be executed on L1
        run: |
          echo "URL=http://127.0.0.1:3052/" >> .env
          echo "INTERVAL=30" >> .env
          # 5 minutes
          echo "TIMEOUT=300" >> .env
          
          PASSED_ENV_VARS="URL,INTERVAL,TIMEOUT" \
          batch_l1_status_checker
