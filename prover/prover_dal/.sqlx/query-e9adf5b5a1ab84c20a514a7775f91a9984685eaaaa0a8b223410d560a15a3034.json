{
  "db_name": "PostgreSQL",
  "query": "\n            UPDATE prover_jobs_fri\n            SET\n                status = 'in_progress',\n                attempts = attempts + 1,\n                processing_started_at = NOW(),\n                updated_at = NOW(),\n                picked_by = $4\n            WHERE\n                id = (\n                    SELECT\n                        pj.id\n                    FROM\n                        (\n                            SELECT\n                                *\n                            FROM\n                                UNNEST($1::SMALLINT[], $2::SMALLINT[])\n                        ) AS tuple (circuit_id, ROUND)\n                        JOIN LATERAL (\n                            SELECT\n                                *\n                            FROM\n                                prover_jobs_fri AS pj\n                            WHERE\n                                pj.status = 'queued'\n                                AND pj.protocol_version = ANY ($3)\n                                AND pj.circuit_id = tuple.circuit_id\n                                AND pj.aggregation_round = tuple.round\n                            ORDER BY\n                                pj.l1_batch_number ASC,\n                                pj.id ASC\n                            LIMIT\n                                1\n                        ) AS pj ON TRUE\n                    ORDER BY\n                        pj.l1_batch_number ASC,\n                        pj.aggregation_round DESC,\n                        pj.id ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                prover_jobs_fri.id,\n                prover_jobs_fri.l1_batch_number,\n                prover_jobs_fri.circuit_id,\n                prover_jobs_fri.aggregation_round,\n                prover_jobs_fri.sequence_number,\n                prover_jobs_fri.depth,\n                prover_jobs_fri.is_node_final_proof\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "l1_batch_number",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "circuit_id",
        "type_info": "Int2"
      },
      {
        "ordinal": 3,
        "name": "aggregation_round",
        "type_info": "Int2"
      },
      {
        "ordinal": 4,
        "name": "sequence_number",
        "type_info": "Int4"
      },
      {
        "ordinal": 5,
        "name": "depth",
        "type_info": "Int4"
      },
      {
        "ordinal": 6,
        "name": "is_node_final_proof",
        "type_info": "Bool"
      }
    ],
    "parameters": {
      "Left": [
        "Int2Array",
        "Int2Array",
        "Int4Array",
        "Text"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ]
  },
  "hash": "e9adf5b5a1ab84c20a514a7775f91a9984685eaaaa0a8b223410d560a15a3034"
}
