name: Check JSON RPC for External Node Snapshot Recovery
on:
  pull_request:


jobs:
  external-node:
    name: External node (consensus=${{ matrix.consensus }})
    strategy:
      fail-fast: false
      matrix:
        consensus: [ false, true ]
    runs-on: [ matterlabs-ci-runner ]

    env:
      SERVER_COMPONENTS: "api,tree,eth,state_keeper,housekeeper,basic_witness_input_producer,commitment_generator${{ matrix.consensus && ',consensus' || '' }}"
      EXT_NODE_FLAGS: "${{ matrix.consensus && '-- --enable-consensus' || '' }}"

    steps:
      - name: Checkout code # Checks out the repository under $GITHUB_WORKSPACE, so the job can access it.
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        with:
          submodules: "recursive"

      - name: Setup environment
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo IN_DOCKER=1 >> .env
          echo RUN_CONTRACT_VERIFICATION_TEST=true >> .env
          echo ZKSYNC_DEBUG_LOGS=true >> .env

      - name: Start services
        run: |
          ci_localnet_up
          ci_run sccache --start-server

      - name: Init
        run: |
          ci_run git config --global --add safe.directory /usr/src/zksync
          ci_run git config --global --add safe.directory /usr/src/zksync/sdk/binaryen
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/system-contracts
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts
          ci_run zk
          ci_run zk init

      # `sleep 30` because we need to wait until server started properly
      - name: Run server
        run: |
          ci_run zk server --components=$SERVER_COMPONENTS &>>server.log &
          ci_run sleep 30

      - name: Run external node
        run: |
          ci_run zk env ext-node-docker
          ci_run zk db setup
          ci_run zk external-node $EXT_NODE_FLAGS &>>ext-node.log &
          ci_run sleep 30

      - name: Integration tests
        run: ci_run zk test i server --testPathIgnorePatterns 'contract-verification|snapshots-creator'

      # - name: Run revert test
      #   run: |
      #     ENABLE_CONSENSUS=${{ matrix.consensus }} PASSED_ENV_VARS=ENABLE_CONSENSUS ci_run zk test i revert-en
      #     # test terminates the nodes, so we restart them.
      #     ZKSYNC_ENV=docker ci_run zk server --components=$SERVER_COMPONENTS &>>server.log &
      #     ZKSYNC_ENV=ext-node-docker ci_run zk external-node $EXT_NODE_FLAGS &>>ext-node.log &
      #     ci_run sleep 30

      - name: Run upgrade test
        run: |
          ci_run zk env docker
          CHECK_EN_URL="http://0.0.0.0:3060" ci_run zk test i upgrade

      - name: Show server.log logs
        if: always()
        run: ci_run cat server.log || true

      - name: Show ext-node.log logs
        if: always()
        run: ci_run cat ext-node.log || true

      - name: Show contract_verifier.log logs
        if: always()
        run: ci_run cat ext-node.log || true

      # - name: Show revert_main.log logs
      #   if: always()
      #   run: ci_run cat core/tests/revert-test/revert_main.log || true

      # - name: Show revert_ext.log logs
      #   if: always()
      #   run: ci_run cat core/tests/revert-test/revert_ext.log || true

      - name: Show upgrade.log logs
        if: always()
        run: ci_run cat core/tests/upgrade-test/upgrade.log || true

      - name: Show sccache logs
        if: always()
        run: |
          ci_run sccache --show-stats
          ci_run cat /tmp/sccache_log.txt
      

      - name: Step - Stub - Try a curl request
        if: always()
        run: |
          ci_run curl -X POST -H "Content-Type: application/json" --data '{"jsonrpc": "2.0", "id": 1, "method": "zks_getBlockDetails", "params": [ 1 ]}'  "http://0.0.0.0:3060"
