name: Build TEE Prover images
on:
  workflow_call:
    secrets:
      ATTIC_TOKEN:
        description: "ATTIC_TOKEN"
        required: false
    inputs:
      image_tag_suffix:
        description: "Optional suffix to override tag name generation"
        type: string
        required: false
      action:
        description: "Action with docker image"
        type: string
        default: "push"
        required: false
jobs:
  build-images:
    name: Build and Push Docker Images
    env:
      IMAGE_TAG_SUFFIX: ${{ inputs.image_tag_suffix }}
    runs-on: [matterlabs-ci-runner-high-performance]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.config.nixcontainer }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        config:
          - { nixcontainer: 'container-tee-prover-azure' }
          - { nixcontainer: 'container-tee-prover-tdx' }
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ github.event_name == 'workflow_dispatch' }}
        with:
          ref: ${{ github.event.inputs.target_branch }}

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ github.event_name != 'workflow_dispatch' }}

      - uses: cachix/install-nix-action@ba0dd844c9180cbf77aa72a116d6fbc515d0e87b # v27
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ github.token }}
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= tee-pot:SS6HcrpG87S1M6HZGPsfo7d1xJccCGev7/tXc5+I4jg=
            substituters = https://cache.nixos.org/ https://attic.teepot.org/tee-pot
            sandbox = true

      - name: Setup Attic cache
        uses: ryanccn/attic-action@f6b7e98e9ba10c6db4841e4996cd3fe4bdb3f3ed # v0.3.2
        with:
          endpoint: https://attic.teepot.org/
          cache: tee-pot
          token: ${{ secrets.ATTIC_TOKEN }}

      - name: Build Docker images
        id: build
        run: |
          nix build -L .#${{ matrix.config.nixcontainer }}
          export IMAGE_TAG=$(docker load -i result | grep -Po 'Loaded image.*: \K.*')
          echo "IMAGE_TAG=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
          echo "IMAGE_NAME=${IMAGE_TAG%:*}" >> "$GITHUB_OUTPUT"

      - name: Login to Docker registries
        if: ${{ inputs.action == 'push' }}
        run: gcloud auth configure-docker us-docker.pkg.dev -q

      - name: Login to GitHub Container Registry
        if: ${{ inputs.action == 'push' }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker images
        if: ${{ inputs.action == 'push' }}
        run: |
          export IMAGE_TAG="${{ steps.build.outputs.IMAGE_TAG }}"
          export IMAGE_NAME="${{ steps.build.outputs.IMAGE_NAME }}"
          for repo in "ghcr.io/${{ github.repository_owner }}" "us-docker.pkg.dev/matterlabs-infra/matterlabs-docker"; do
            for name_tag in "${IMAGE_TAG}" "${IMAGE_NAME}:latest" "${IMAGE_NAME}:${IMAGE_TAG_SUFFIX}"; do
              docker tag "${IMAGE_TAG}" "${repo}/${name_tag}"
              docker push "${repo}/${name_tag}"
            done
          done
