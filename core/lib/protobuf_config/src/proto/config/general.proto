syntax = "proto3";

package zksync.config.general;

import "zksync/config/prover.proto";
import "zksync/config/api.proto";
import "zksync/config/chain.proto";
import "zksync/config/contract_verifier.proto";
import "zksync/config/database.proto";
import "zksync/config/circuit_breaker.proto";
import "zksync/config/eth_sender.proto";
import "zksync/config/experimental.proto";
import "zksync/config/house_keeper.proto";
import "zksync/config/observability.proto";
import "zksync/config/snapshots_creator.proto";
import "zksync/config/utils.proto";
import "zksync/config/da_dispatcher.proto";
import "zksync/config/vm_runner.proto";
import "zksync/config/commitment_generator.proto";
import "zksync/config/snapshot_recovery.proto";
import "zksync/config/pruning.proto";
import "zksync/config/object_store.proto";
import "zksync/config/base_token_adjuster.proto";
import "zksync/config/external_price_api_client.proto";
import "zksync/config/external_proof_integration_api.proto";
import "zksync/core/consensus.proto";
import "zksync/config/prover_job_monitor.proto";
import "zksync/config/da_client.proto";

message GeneralConfig {
    optional database.Postgres postgres = 1;
    optional api.Api api = 2;
    optional contract_verifier.ContractVerifier contract_verifier = 3;
    optional circuit_breaker.CircuitBreaker circuit_breaker = 5;
    optional chain.Mempool mempool = 6;
    optional chain.OperationsManager operations_manager = 8;
    optional chain.StateKeeper state_keeper = 9;
    optional house_keeper.HouseKeeper house_keeper = 10;
    optional prover.Prover prover = 12;
    optional utils.Prometheus prometheus = 15;
    optional database.DB db = 20;
    optional eth.ETH eth = 22;
    optional prover.WitnessGenerator witness_generator = 24;
    optional prover.WitnessVectorGenerator witness_vector_generator = 25;
    optional prover.ProofCompressor proof_compressor = 27;
    optional prover.ProofDataHandler data_handler = 28;
    optional prover.ProverGroup prover_group = 29;
    optional prover.ProverGateway prover_gateway = 30;
    optional snapshot_creator.SnapshotsCreator snapshot_creator = 31;
    optional observability.Observability observability = 32;
    optional vm_runner.ProtectiveReadsWriter protective_reads_writer = 33;
    optional object_store.ObjectStore core_object_store = 34;
    optional snapshot_recovery.SnapshotRecovery snapshot_recovery = 35;
    optional pruning.Pruning pruning = 36;
    optional commitment_generator.CommitmentGenerator commitment_generator = 37;
    optional da_dispatcher.DataAvailabilityDispatcher da_dispatcher = 38;
    optional base_token_adjuster.BaseTokenAdjuster base_token_adjuster = 39;
    optional vm_runner.BasicWitnessInputProducer basic_witness_input_producer = 40;
    optional external_price_api_client.ExternalPriceApiClient external_price_api_client = 41;
    optional core.consensus.Config consensus = 42;
    optional external_proof_integration_api.ExternalProofIntegrationApi external_proof_integration_api = 43;
    optional experimental.Vm experimental_vm = 44;
    optional prover_job_monitor.ProverJobMonitor prover_job_monitor = 45;
    optional da_client.DataAvailabilityClient da_client = 46;
}
