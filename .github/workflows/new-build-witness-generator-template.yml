name: Build witness generator image with custom compiler flags
on:
  workflow_call:
    secrets:
      DOCKERHUB_USER:
        description: "DOCKERHUB_USER"
        required: true
      DOCKERHUB_TOKEN:
        description: "DOCKERHUB_TOKEN"
        required: true
    inputs:
      image_tag_suffix:
        description: "Optional suffix to override tag name generation"
        type: string
        required: false
      action:
        type: string
        default: non-push
        required: false
      CUDA_ARCH:
        description: "CUDA Arch to build"
        type: string
        default: "89"
        required: false
      WITNESS_GENERATOR_RUST_FLAGS:
        description: "Rust flags for witness_generator compilation"
        type: string
        default: ""
        required: false
    outputs:
      protocol_version:
        description: "Protocol version of the binary"
        value: ${{ jobs.get-protocol-version.outputs.protocol_version }}

jobs:
  get-protocol-version:
    name: Get protocol version
    runs-on: [ matterlabs-ci-runner-high-performance ]
    outputs:
      protocol_version: ${{ steps.protocolversion.outputs.protocol_version }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: "recursive"

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo CI=1 >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo CI=1 >> .env
          echo IN_DOCKER=1 >> .env

      - name: setup rust
        uses: actions-rust-lang/setup-rust-toolchain@11df97af8e8102fd60b60a77dfbf58d40cd843b8 # v1.10.1
        with:
          toolchain: nightly-2024-08-01

      - name: Prepare sccache-cache env vars
        shell: bash
        run: |
          echo SCCACHE_GCS_BUCKET=matterlabs-infra-sccache-storage >> $GITHUB_ENV
          echo SCCACHE_GCS_SERVICE_ACCOUNT=gha-ci-runners@matterlabs-infra.iam.gserviceaccount.com >> $GITHUB_ENV
          echo SCCACHE_ERROR_LOG=/tmp/sccache_log.txt >> $GITHUB_ENV
          echo SCCACHE_GCS_RW_MODE=READ_WRITE >> $GITHUB_ENV
          echo RUSTC_WRAPPER=sccache >> $GITHUB_ENV

      - name: protocol-version
        id: protocolversion
        # TODO: use -C flag, when it will become stable.
        shell: bash
        run: |
          cd prover
          cargo build --release --bin prover_version
          PPV=$(target/release/prover_version)
          echo Protocol version is ${PPV}
          echo "protocol_version=${PPV}" >> $GITHUB_OUTPUT

  build-images:
    name: Build and Push Docker Images
    needs: get-protocol-version
    env:
      PROTOCOL_VERSION: ${{ needs.get-protocol-version.outputs.protocol_version }}
    runs-on: [ matterlabs-ci-runner-c3d ]
    strategy:
      matrix:
        components:
          - witness-generator
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: "recursive"

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo CI=1 >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo CI=1 >> .env
          echo IN_DOCKER=1 >> .env

      - name: Set env vars
        shell: bash
        run: |
          # Support for custom tag suffix
          if [ -n "${{ inputs.image_tag_suffix }}" ]; then
            echo IMAGE_TAG_SHA_TS="${{ inputs.image_tag_suffix }}" >> $GITHUB_ENV
          else
            echo IMAGE_TAG_SHA_TS=$(git rev-parse --short HEAD)-$(date +%s) >> $GITHUB_ENV
          fi

      - name: login to Docker registries
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        shell: bash
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          gcloud auth configure-docker us-docker.pkg.dev -q

      - name: Build and push
        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0
        with:
          context: .
          push: ${{ inputs.action == 'push' }}
          build-args: |
            CUDA_ARCH=${{ inputs.CUDA_ARCH }}
            SCCACHE_GCS_BUCKET=matterlabs-infra-sccache-storage
            SCCACHE_GCS_SERVICE_ACCOUNT=gha-ci-runners@matterlabs-infra.iam.gserviceaccount.com
            SCCACHE_GCS_RW_MODE=READ_WRITE
            RUSTC_WRAPPER=sccache
          file: docker/${{ matrix.components }}/Dockerfile
          tags: |
            us-docker.pkg.dev/matterlabs-infra/matterlabs-docker/${{ matrix.components }}:2.0-${{ env.PROTOCOL_VERSION }}-${{ env.IMAGE_TAG_SHA_TS }}
            matterlabs/${{ matrix.components }}:2.0-${{ env.PROTOCOL_VERSION }}-${{ env.IMAGE_TAG_SHA_TS }}
