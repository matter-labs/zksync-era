name: Release zkstack bins

on:
  workflow_call:
    inputs:
      tag:
        type: string
        description: 'The tag to use for the Docker image.'
        required: true
  workflow_dispatch:
    inputs:
      prerelease_name:
        description: "Suffix to use for manual pre-release."
        required: false
        type: string
        default: "prerelease-test"

defaults:
  run:
    shell: 'bash -ex {0}'
    working-directory: zkstack_cli

jobs:

  build:
    name: Build binaries
    strategy:
      matrix:
        include:
          - arch: x86_64-unknown-linux-gnu
            platform: matterlabs-ci-runner-highmem-long
          - arch: aarch64-unknown-linux-gnu
            platform: matterlabs-ci-runner-arm
          - arch: x86_64-apple-darwin
            platform: macos-latest-large
          - arch: aarch64-apple-darwin
            platform: macos-latest-xlarge

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag || '' }}

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2024-08-01
          rustflags: ""

      - name: Install target
        run: rustup target add ${{ matrix.arch }}

      - name: Build zkstack
        run: |
          if [[ "${{ matrix.arch }}" == *"linux"* ]]; then
            export RUSTFLAGS='-C target-feature=+crt-static'
            export OPENSSL_STATIC=1
          fi
          cargo build --bin zkstack --target ${{ matrix.arch }} --release

      - name: Pack zkstack
        run: |
          tar -C ./target/${{ matrix.arch }}/release -czf \
            zkstack-${{ inputs.tag || inputs.prerelease_name }}-${{ matrix.arch }}.tar.gz \
            zkstack

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: zkstack-${{ matrix.arch }}
          path: |
            ./zkstack_cli/zkstack-${{ inputs.tag || inputs.prerelease_name }}-${{ matrix.arch }}.tar.gz
            ./zkstack_cli/target/${{ matrix.arch }}/release/zkstack


  upload-binaries:
    name: Upload binaries
    permissions:
      contents: write
      id-token: write
      attestations: write
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag || '' }}

      - name: Define release name
        id: release_tag
        shell: 'bash -ex {0}'
        run: |
          [ ! -z "${{ inputs.tag }}" ] && TAG="${{ inputs.tag }}" \
            || TAG="$(git rev-parse --short HEAD)"
          echo "tag=${TAG}" >> "${GITHUB_OUTPUT}"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "zkstack-*"
          path: artifacts

      - name: Binaries attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'artifacts/**/zkstack'

      - name: Update release artifacts
        if: ${{ inputs.tag != '' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          files: 'artifacts/**/zkstack*.tar.gz'

      - name: Create release
        if: ${{ inputs.prerelease_name != '' }}
        uses: softprops/action-gh-release@v2
        with:
          name: 'zkstack ${{ inputs.prerelease_name }} ${{ steps.release_tag.outputs.tag }}'
          tag_name: ${{ steps.release_tag.outputs.tag }}
          prerelease: true
          files: 'artifacts/**/zkstack*.tar.gz'
