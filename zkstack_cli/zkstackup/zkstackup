#!/usr/bin/env bash
set -eo pipefail

BASE_DIR=${XDG_CONFIG_HOME:-$HOME}
ZKT_DIR=${ZKT_DIR:-"$BASE_DIR/.zkt"}
ZKT_BIN_DIR="$ZKT_DIR/bin"

BINS=()

main() {
  parse_args "$@"

  zkstack_banner

  check_prerequisites
  mkdir -p "$ZKT_BIN_DIR"

  BINS+=(zkstack)

  if [ -n "$ZKSTACKUP_PATH" ]; then
    install_local
  else
    install_from_repo
  fi

  zkstack_banner

  for bin in "${BINS[@]}"; do
    success "Installed $bin to $ZKT_BIN_DIR/$bin"
  done
}

PREREQUISITES=(cargo git)

check_prerequisites() {
  say "Checking prerequisites"

  failed_prerequisites=()
  for prerequisite in "${PREREQUISITES[@]}"; do
    if ! check_prerequisite "$prerequisite"; then
      failed_prerequisites+=("$prerequisite")
    fi
  done
  if [ ${#failed_prerequisites[@]} -gt 0 ]; then
    err "The following prerequisites are missing: ${failed_prerequisites[*]}"
    exit 1
  fi
}

check_prerequisite() {
  command -v "$1" &>/dev/null
}

parse_args() {
  while [[ $# -gt 0 ]]; do
    case $1 in
    --)
      shift
      break
      ;;

    -p | --path)
      shift
      ZKSTACKUP_PATH=$1
      ;;
    -r | --repo)
      shift
      ZKSTACKUP_REPO=$1
      ;;
    -b | --branch)
      shift
      ZKSTACKUP_BRANCH=$1
      ;;
    -c | --commit)
      shift
      ZKSTACKUP_COMMIT=$1
      ;;
    -v | --version)
      shift
      ZKSTACKUP_VERSION=$1
      ;;
    -h | --help)
      usage
      exit 0
      ;;
    *)
      err "Unknown argument: $1"
      usage
      exit 1
      ;;
    esac
    shift
  done
}

usage() {
  cat <<EOF
zkstackup - A tool for managing ZK Stack CLI installation.

Usage: $(basename "$0") [OPTIONS]

Options:
  -p, --path <path>         Specify a local path to install ZK Stack CLI from. Ignored if --repo is provided.
  -r, --repo <repo>         GitHub repository to install from (e.g., "matter-labs/zksync-era"). Defaults to "matter-labs/zksync-era".
  -b, --branch <branch>     Git branch to use when installing from a repository. Ignored if --commit or --version is provided.
  -c, --commit <commit>     Git commit hash to use when installing from a repository. Ignored if --branch or --version is provided.
  -v, --version <version>   Git tag to use when installing from a repository. Ignored if --branch or --commit is provided.
  -h, --help                Show this help message and exit.

Examples:
  $(basename "$0") --repo matter-labs/zksync-era --version 0.1.1
EOF
}

install_local() {
  if [ ! -d "$ZKSTACKUP_PATH/zkstack_cli" ]; then
    err "Path $ZKSTACKUP_PATH does not contain zkstack_cli"
    exit 1
  fi

  if [ -n "$ZKSTACKUP_BRANCH" ] || [ -n "$ZKSTACKUP_COMMIT" ] || [ -n "$ZKSTACKUP_VERSION" ] || [ -n "$ZKSTACKUP_REPO" ]; then
    warn "Ignoring --repo, --branch, --commit and --version arguments when installing from local path"
  fi

  say "Installing ZK Stack CLI from $ZKSTACKUP_PATH"
  ensure cd "$ZKSTACKUP_PATH"/zkstack_cli

  for bin in "${BINS[@]}"; do
    say "Installing $bin"
    ensure cargo install --root $ZKT_DIR --path ./crates/$bin --force
  done
}

install_from_repo() {
  if [ -n "$ZKSTACKUP_PATH" ]; then
    warn "Ignoring --path argument when installing from repository"
  fi

  ZKSTACKUP_REPO=${ZKSTACKUP_REPO:-"matter-labs/zksync-era"}

  say "Installing ZK Stack CLI from $ZKSTACKUP_REPO"

  if [ -n "$ZKSTACKUP_VERSION" ]; then
    if [ -n "$ZKSTACKUP_COMMIT" ] || [ -n "$ZKSTACKUP_BRANCH" ]; then
      warn "Ignoring --commit and --branch arguments when installing by version"
    fi
    ensure cargo install --root $ZKT_DIR --git "https://github.com/$ZKSTACKUP_REPO" --tag "zkstack_cli-v$ZKSTACKUP_VERSION" --locked "${BINS[@]}" --force
  elif [ -n "$ZKSTACKUP_COMMIT" ]; then
    if [ -n "$ZKSTACKUP_BRANCH" ]; then
      warn "Ignoring --branch argument when installing by commit"
    fi
    ensure cargo install --root $ZKT_DIR --git "https://github.com/$ZKSTACKUP_REPO" --rev "$ZKSTACKUP_COMMIT" --locked "${BINS[@]}" --force
  elif [ -n "$ZKSTACKUP_BRANCH" ]; then
    ensure cargo install --root $ZKT_DIR --git "https://github.com/$ZKSTACKUP_REPO" --branch "$ZKSTACKUP_BRANCH" --locked "${BINS[@]}" --force
  else
    ensure cargo install --root $ZKT_DIR --git "https://github.com/$ZKSTACKUP_REPO" --locked "${BINS[@]}" --force
  fi
}

ensure() {
  if ! "$@"; then
    err "command failed: $*"
    exit 1
  fi
}

say() {
  local action="${1%% *}"
  local rest="${1#"$action" }"

  echo -e "\033[1;32m$action\033[0m $rest"
}

success() {
  echo -e "\033[1;32m$1\033[0m"
}

warn() {
  echo -e "\033[1;33mWARNING: $1\033[0m"
}

err() {
  echo -e "\033[1;31mERROR: $1\033[0m" >&2
}

zkstack_banner() {
  printf '

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

         ███████╗██╗  ██╗    ███████╗████████╗ █████╗  ██████╗██╗  ██╗
         ╚══███╔╝██║ ██╔╝    ██╔════╝╚══██╔══╝██╔══██╗██╔════╝██║ ██╔╝
           ███╔╝ █████╔╝     ███████╗   ██║   ███████║██║     █████╔╝ 
          ███╔╝  ██╔═██╗     ╚════██║   ██║   ██╔══██║██║     ██╔═██╗ 
         ███████╗██║  ██╗    ███████║   ██║   ██║  ██║╚██████╗██║  ██╗
         ╚══════╝╚═╝  ╚═╝    ╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝
                                                             

    A Comprehensive Toolkit for Creating and Managing ZK Stack Chains

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Repo       : https://github.com/matter-labs/zksync-era/
Docs       : https://docs.zksync.io/
Contribute : https://github.com/matter-labs/zksync-era/pulls

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

'
}

main "$@"
