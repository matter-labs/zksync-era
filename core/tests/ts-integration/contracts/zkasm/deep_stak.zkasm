.text
    .file   "loop.yul"
    .globl  __entry
__entry:
.func_begin0:
    and!    1, r2, r1
    jump.ne @.BB0_2
__LOOP:
    call    r0, @__LOOP, @__LOOP
.BB0_1:
    add 1, r0, r2
    ret
.BB0_2:
    add 32, r0, r1
    stm.ah  256, r1
    stm.ah  288, r0
    add code[@CPI0_0], r0, r1
    retl    r1, @DEFAULT_FAR_RETURN
.func_end0:
;; landing pad for returns
DEFAULT_FAR_RETURN:
    retl @DEFAULT_FAR_RETURN
    .rodata
CPI0_0:
    .cell 53919893334301279589334030174039261352344891250716429051063678533632
