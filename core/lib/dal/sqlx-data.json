{
  "db": "PostgreSQL",
  "0002e8b596794ae9396de8ac621b30dcf0befdff28c5bc23d713185f7a410df4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "UPDATE proof_generation_details SET status=$1, updated_at = now() WHERE l1_batch_number = $2"
  },
  "00bd80fd83aff559d8d9232c2e98a12a1dd2c8f31792cd915e2cf11f28e583b7": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "depth",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 5,
          "type_info": "Int2"
        },
        {
          "name": "aggregations_url",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 8,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "number_of_dependent_jobs",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "protocol_version",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "picked_by",
          "ordinal": 14,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs_fri\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now(),\n                    picked_by = $2\n                WHERE id = (\n                    SELECT id\n                    FROM node_aggregation_witness_jobs_fri\n                    WHERE status = 'queued'\n                    AND protocol_version = ANY($1)\n                    ORDER BY l1_batch_number ASC, depth ASC, id ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING node_aggregation_witness_jobs_fri.*\n                "
  },
  "0141169c8375ae975598aca5351ea162948f72b2c325619f57c756db028bed74": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "priority_fee_per_gas",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "signed_raw_tx",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 6,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT eth_txs_history.id, eth_txs_history.eth_tx_id, eth_txs_history.tx_hash, eth_txs_history.base_fee_per_gas, eth_txs_history.priority_fee_per_gas, eth_txs_history.signed_raw_tx, eth_txs.nonce FROM eth_txs_history JOIN eth_txs ON eth_txs.id = eth_txs_history.eth_tx_id WHERE eth_txs_history.sent_at_block IS NULL AND eth_txs.confirmed_eth_tx_history_id IS NULL ORDER BY eth_txs_history.id DESC"
  },
  "01a21fe42c5c0ec0f848739235b8175b62b0ffe503b823c128dd620fec047784": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Text"
        ]
      }
    },
    "query": "UPDATE gpu_prover_queue_fri SET instance_status = 'available', updated_at = now() WHERE instance_host = $1::text::inet AND instance_port = $2 AND instance_status = 'full' AND zone = $3\n                "
  },
  "01ebdc5b524e85033fb06d9166475f365643f744492e59ff12f10b419dd6d485": {
    "describe": {
      "columns": [
        {
          "name": "bytecode_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT bytecode_hash FROM factory_deps WHERE miniblock_number > $1"
  },
  "03a34f0fd82bed22f14c5b36554bb958d407e9724fa5ea5123edc3c6607e545c": {
    "describe": {
      "columns": [
        {
          "name": "block_hash?",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "address!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic1!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "topic2!",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "topic3!",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "topic4!",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "miniblock_number!",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "tx_hash!",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "tx_index_in_block!",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_block!",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_tx!",
          "ordinal": 12,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                WITH events_select AS (\n                    SELECT\n                        address, topic1, topic2, topic3, topic4, value,\n                        miniblock_number, tx_hash, tx_index_in_block,\n                        event_index_in_block, event_index_in_tx\n                    FROM events\n                    WHERE miniblock_number > $1\n                    ORDER BY miniblock_number ASC, event_index_in_block ASC\n                )\n                SELECT miniblocks.hash as \"block_hash?\",\n                    address as \"address!\", topic1 as \"topic1!\", topic2 as \"topic2!\", topic3 as \"topic3!\", topic4 as \"topic4!\", value as \"value!\",\n                    miniblock_number as \"miniblock_number!\", miniblocks.l1_batch_number as \"l1_batch_number?\", tx_hash as \"tx_hash!\",\n                    tx_index_in_block as \"tx_index_in_block!\", event_index_in_block as \"event_index_in_block!\", event_index_in_tx as \"event_index_in_tx!\"\n                FROM events_select\n                INNER JOIN miniblocks ON events_select.miniblock_number = miniblocks.number\n                ORDER BY miniblock_number ASC, event_index_in_block ASC\n                "
  },
  "07310d96fc7e258154ad510684e33d196907ebd599e926d305e5ef9f26afa2fa": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Text",
          "Timestamp"
        ]
      }
    },
    "query": "INSERT INTO eth_txs_history (eth_tx_id, base_fee_per_gas, priority_fee_per_gas, tx_hash, signed_raw_tx, created_at, updated_at, confirmed_at) VALUES ($1, 0, 0, $2, '\\x00', now(), now(), $3) RETURNING id"
  },
  "0c212f47b9a0e719f947a419be8284837b1b01aa23994ba6401b420790b802b8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO node_aggregation_witness_jobs\n                        (l1_batch_number, protocol_version, status, created_at, updated_at)\n                    VALUES ($1, $2, 'waiting_for_artifacts', now(), now())\n                    "
  },
  "0cbbcd30fde109c4c44162f94b6ed9bab4e9db9948d03e584c2cab543449d298": {
    "describe": {
      "columns": [
        {
          "name": "status",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "compilation_errors",
          "ordinal": 2,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT status, error, compilation_errors FROM contract_verification_requests WHERE id = $1"
  },
  "0d1bed183c38304ff1a6c8c78dca03964e2e188a6d01f98eaf0c6b24f19b8b6f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "UPDATE transactions SET in_mempool = FALSE FROM UNNEST ($1::bytea[]) AS s(address) WHERE transactions.in_mempool = TRUE AND transactions.initiator_address = s.address"
  },
  "0d99b4015b29905862991e4f1a44a1021d48f50e99cb1701e7496ce6c3e15dc6": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(number) as \"number\" FROM l1_batches WHERE is_finished = TRUE"
  },
  "0e001ef507253b4fd3a87e379c8f2e63fa41250b1a396d81697de2b7ea71215e": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM l1_batches WHERE number = $1 AND hash = $2 AND merkle_root_hash = $3 AND parent_hash = $4 AND l2_l1_merkle_root = $5"
  },
  "0ee31e6e2ec60f427d8dec719ec0ba03ef75bc610e878ae32b0bf61c4c2c1366": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "instance_host",
          "ordinal": 1,
          "type_info": "Inet"
        },
        {
          "name": "instance_port",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "instance_status",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "specialized_prover_group_id",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "zone",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "processing_started_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2",
          "Text"
        ]
      }
    },
    "query": "UPDATE gpu_prover_queue_fri SET instance_status = 'reserved', updated_at = now(), processing_started_at = now() WHERE id in ( SELECT id FROM gpu_prover_queue_fri WHERE specialized_prover_group_id=$2 AND zone=$3 AND ( instance_status = 'available' OR (instance_status = 'reserved' AND  processing_started_at < now() - $1::interval) ) ORDER BY updated_at ASC LIMIT 1 FOR UPDATE SKIP LOCKED ) RETURNING gpu_prover_queue_fri.*\n                "
  },
  "0f5897b5e0109535caa3d49f899c65e5080511d49305558b59b185c34227aa18": {
    "describe": {
      "columns": [
        {
          "name": "nonce!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "SELECT nonce as \"nonce!\" FROM transactions WHERE initiator_address = $1 AND nonce >= $2 AND is_priority = FALSE AND (miniblock_number IS NOT NULL OR error IS NULL) ORDER BY nonce"
  },
  "0f8a603899280c015b033c4160bc064865103e9d6d63a369f07a8e5d859a7b14": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT timestamp FROM miniblocks WHERE number = $1"
  },
  "0fd885074c624bea478ec0a24a499cf1278773cdba92550439da5d3b70cbf38c": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status!",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT COUNT(*) as \"count!\", status as \"status!\"\n                FROM prover_jobs\n                GROUP BY status\n                "
  },
  "100ede607d40d8d07000fcdc40705c806e8229323e0e6dfb7507691838963ccf": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "basic_circuits",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "basic_circuits_inputs",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "number_of_basic_circuits",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 6,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "attempts",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "basic_circuits_blob_url",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "basic_circuits_inputs_blob_url",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 14,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4",
          "Int8",
          "Int4Array"
        ]
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE l1_batch_number = (\n                    SELECT l1_batch_number\n                    FROM leaf_aggregation_witness_jobs\n                    WHERE l1_batch_number <= $3\n                    AND\n                    (   status = 'queued'\n                        OR (status = 'in_progress' AND processing_started_at < now() - $1::interval)\n                        OR (status = 'failed' AND attempts < $2)\n                    )\n                    AND protocol_version = ANY($4)\n                    ORDER BY l1_batch_number ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING leaf_aggregation_witness_jobs.*\n                "
  },
  "13e5f6a2a73eaa979229611ffdbed86d6e5e1bad0c645d39b56fdc47f5c17971": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT DISTINCT hashed_key FROM storage_logs WHERE miniblock_number BETWEEN $1 and $2"
  },
  "14815f61d37d274f9aea1125ca4d368fd8c45098b0017710c0ee18d23d994c15": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number FROM l1_batches LEFT JOIN eth_txs_history AS prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id) WHERE prove_tx.confirmed_at IS NOT NULL ORDER BY number DESC LIMIT 1"
  },
  "15135331e56e3e4e3eeae3aac609d8e8c7146d190dfe26c1a24f92d21cd34858": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT number from miniblocks where timestamp > $1 ORDER BY number ASC LIMIT 1"
  },
  "157fc4ef4f5fd831399219850bc59ec0bd32d938ec8685dacaf913efdccfe7fe": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Numeric"
        ]
      }
    },
    "query": "SELECT l1_address FROM tokens WHERE market_volume > $1"
  },
  "16bca6f4258ff3db90a26a8550c5fc35e666fb698960486528fceba3e452fd62": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "SELECT number, l1_batches.timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, l1_batches.bootloader_code_hash, l1_batches.default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, protocol_version, compressed_state_diffs, system_logs, events_queue_commitment, bootloader_initial_content_commitment FROM l1_batches LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number JOIN protocol_versions ON protocol_versions.id = l1_batches.protocol_version WHERE eth_commit_tx_id IS NULL AND number != 0 AND protocol_versions.bootloader_code_hash = $1 AND protocol_versions.default_account_code_hash = $2 AND commitment IS NOT NULL AND (protocol_versions.id = $3 OR protocol_versions.upgrade_tx_hash IS NULL) AND events_queue_commitment IS NOT NULL AND bootloader_initial_content_commitment IS NOT NULL ORDER BY number LIMIT $4"
  },
  "173da19a30bde9f034de97c1427f3166d9615d46cdaa30f1645a36f42926fa63": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8",
          "Text",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "INSERT INTO eth_txs (raw_tx, nonce, tx_type, contract_address, predicted_gas_cost, created_at, updated_at) VALUES ($1, $2, $3, $4, $5, now(), now()) RETURNING *"
  },
  "17a42a97e87a675bd465103ebedc63d6d091e5bb093c7905de70aed3dc71d823": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM storage_logs WHERE miniblock_number > $1"
  },
  "191fb8c0549267b515aaa7acc199675be1ea113e9137195468bb8ce64a099ae8": {
    "describe": {
      "columns": [
        {
          "name": "serialized_events_queue",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT serialized_events_queue FROM events_queue WHERE l1_batch_number = $1"
  },
  "1948ab14bafbb3ba0098563f22d958c9383877788980fe51bd217987898b1c92": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key!",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "value?",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "SELECT u.hashed_key as \"hashed_key!\", (SELECT value FROM storage_logs WHERE hashed_key = u.hashed_key AND miniblock_number <= $2 ORDER BY miniblock_number DESC, operation_number DESC LIMIT 1) as \"value?\" FROM UNNEST($1::bytea[]) AS u(hashed_key)"
  },
  "19b89495be8aa735db039ccc8a262786c58e54f132588c48f07d9537cf21d3ed": {
    "describe": {
      "columns": [
        {
          "name": "sent_at_block",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT sent_at_block FROM eth_txs_history WHERE eth_tx_id = $1 AND sent_at_block IS NOT NULL ORDER BY created_at ASC LIMIT 1"
  },
  "19c8d9e449034ce7fd501541e5e71e2d5957bf2329e52166f4981955a847e175": {
    "describe": {
      "columns": [
        {
          "name": "value!",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l1_address!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "symbol!",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "name!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "usd_price?",
          "ordinal": 6,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT storage.value as \"value!\",\n                    tokens.l1_address as \"l1_address!\", tokens.l2_address as \"l2_address!\",\n                    tokens.symbol as \"symbol!\", tokens.name as \"name!\", tokens.decimals as \"decimals!\", tokens.usd_price as \"usd_price?\"\n                    FROM storage\n                INNER JOIN tokens ON\n                    storage.address = tokens.l2_address OR (storage.address = $2 AND tokens.l2_address = $3)\n                WHERE storage.hashed_key = ANY($1) AND storage.value != $4\n            "
  },
  "1a91acea72e56513a2a9e667bd5a2c171baa5fec01c51dcb7c7cf33f736c854d": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "index_in_block",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "block_number",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "error",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "transfer_to?",
          "ordinal": 7,
          "type_info": "Jsonb"
        },
        {
          "name": "execute_contract_address?",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "tx_format?",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "gas_limit",
          "ordinal": 11,
          "type_info": "Numeric"
        },
        {
          "name": "block_hash?",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "contract_address?",
          "ordinal": 14,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        null,
        null,
        true,
        false,
        true,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                WITH sl AS (\n                    SELECT * FROM storage_logs\n                    WHERE storage_logs.address = $1 AND storage_logs.tx_hash = $2\n                    ORDER BY storage_logs.miniblock_number DESC, storage_logs.operation_number DESC\n                    LIMIT 1\n                )\n                SELECT\n                     transactions.hash as tx_hash,\n                     transactions.index_in_block as index_in_block,\n                     transactions.l1_batch_tx_index as l1_batch_tx_index,\n                     transactions.miniblock_number as block_number,\n                     transactions.error as error,\n                     transactions.effective_gas_price as effective_gas_price,\n                     transactions.initiator_address as initiator_address,\n                     transactions.data->'to' as \"transfer_to?\",\n                     transactions.data->'contractAddress' as \"execute_contract_address?\",\n                     transactions.tx_format as \"tx_format?\",\n                     transactions.refunded_gas as refunded_gas,\n                     transactions.gas_limit as gas_limit,\n                     miniblocks.hash as \"block_hash?\",\n                     miniblocks.l1_batch_number as \"l1_batch_number?\",\n                     sl.key as \"contract_address?\"\n                FROM transactions\n                LEFT JOIN miniblocks\n                    ON miniblocks.number = transactions.miniblock_number\n                LEFT JOIN sl\n                    ON sl.value != $3\n                WHERE transactions.hash = $2\n                "
  },
  "1becc0cdf3dbc9160853bb20c9130417cc6e17f576e9d239f889a1932eda9f4f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "UPDATE eth_txs_history SET updated_at = now(), confirmed_at = now() WHERE tx_hash = $1 RETURNING id, eth_tx_id"
  },
  "1c1a4cdf476de4f4cc83a31151fc4c407b93b53e2cd995f8bb5222d0a3c38c47": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "root_hash?",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "commit_tx_hash?",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "committed_at?",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "prove_tx_hash?",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "proven_at?",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "execute_tx_hash?",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "executed_at?",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 13,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        true,
        false,
        true,
        false,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batches.number,\n                        l1_batches.timestamp,\n                        l1_batches.l1_tx_count,\n                        l1_batches.l2_tx_count,\n                        l1_batches.hash as \"root_hash?\",\n                        commit_tx.tx_hash as \"commit_tx_hash?\",\n                        commit_tx.confirmed_at as \"committed_at?\",\n                        prove_tx.tx_hash as \"prove_tx_hash?\",\n                        prove_tx.confirmed_at as \"proven_at?\",\n                        execute_tx.tx_hash as \"execute_tx_hash?\",\n                        execute_tx.confirmed_at as \"executed_at?\",\n                        l1_batches.l1_gas_price,\n                        l1_batches.l2_fair_gas_price,\n                        l1_batches.bootloader_code_hash,\n                        l1_batches.default_aa_code_hash\n                    FROM l1_batches\n                    LEFT JOIN eth_txs_history as commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id AND commit_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id AND prove_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id AND execute_tx.confirmed_at IS NOT NULL)\n                    WHERE l1_batches.number = $1\n                "
  },
  "1c583696808f93ff009ddf5df0ea36fe2621827fbd425c39ed4c9670ebc6431b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE witness_inputs_fri SET status =$1, updated_at = now()\n                WHERE l1_batch_number = $2\n               "
  },
  "1d1f5198cbb0b9cd70019a9b386212de294075c00ebac4dbd39fda5397dbb07c": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT number, timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, bootloader_code_hash, default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, protocol_version, compressed_state_diffs, system_logs, events_queue_commitment, bootloader_initial_content_commitment FROM l1_batches LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number WHERE eth_commit_tx_id IS NOT NULL AND eth_prove_tx_id IS NULL ORDER BY number LIMIT $1"
  },
  "1d3e9cd259fb70a2bc81e8344576c3fb27b47ad6cdb6751d2a9b8c8d342b7a75": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = $1, updated_at = now()\n                WHERE id = $2\n                "
  },
  "1dbe99ed32b361936c2a829a99a92ac792a02c8a304d23b140804844a7b0f857": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "depth",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs_fri\n                SET status='queued'\n                WHERE (l1_batch_number, circuit_id, depth) IN\n                      (SELECT prover_jobs_fri.l1_batch_number, prover_jobs_fri.circuit_id, prover_jobs_fri.depth\n                       FROM prover_jobs_fri\n                                JOIN node_aggregation_witness_jobs_fri nawj ON\n                                prover_jobs_fri.l1_batch_number = nawj.l1_batch_number\n                                AND prover_jobs_fri.circuit_id = nawj.circuit_id\n                                AND prover_jobs_fri.depth = nawj.depth\n                       WHERE nawj.status = 'waiting_for_proofs'\n                         AND prover_jobs_fri.status = 'successful'\n                         AND prover_jobs_fri.aggregation_round = 1\n                         AND prover_jobs_fri.depth = 0\n                       GROUP BY prover_jobs_fri.l1_batch_number, prover_jobs_fri.circuit_id, prover_jobs_fri.depth, nawj.number_of_dependent_jobs\n                       HAVING COUNT(*) = nawj.number_of_dependent_jobs)\n                RETURNING l1_batch_number, circuit_id, depth;\n            "
  },
  "1ed353a16e8d0abaf426e5c235b20a79c727c08bc23fb1708a833a6930131691": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text"
        ]
      }
    },
    "query": "INSERT INTO proof_compression_jobs_fri(l1_batch_number, status, created_at, updated_at) VALUES ($1, $2, now(), now()) ON CONFLICT (l1_batch_number) DO NOTHING"
  },
  "1eede5c2169aee5a767b3b6b829f53721c0c353956ccec31a75226a65325ae46": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "UPDATE transactions SET in_mempool = FALSE WHERE in_mempool = TRUE"
  },
  "1faf6552c221c75b7232b55210c0c37be76a57ec9dc94584b6ccb562e8b182f2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prover_input",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 9,
          "type_info": "Time"
        },
        {
          "name": "aggregation_round",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "result",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "sequence_number",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "attempts",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "proccesed_by",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 17,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * from prover_jobs where id=$1"
  },
  "20b22fd457417e9a72f5941887448f9a11b97b449db4759da0b9d368ce93996b": {
    "describe": {
      "columns": [
        {
          "name": "recursion_scheduler_level_vk_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_node_level_vk_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_leaf_level_vk_hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_circuits_set_vks_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT recursion_scheduler_level_vk_hash, recursion_node_level_vk_hash, recursion_leaf_level_vk_hash, recursion_circuits_set_vks_hash\n                FROM protocol_versions\n                WHERE id = $1\n            "
  },
  "22b57675a726d9cfeb82a60ba50c36cab1548d197ea56a7658d3f005df07c60b": {
    "describe": {
      "columns": [
        {
          "name": "op_id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(priority_op_id) as \"op_id\" from transactions where is_priority = true AND miniblock_number IS NOT NULL"
  },
  "22e50b6def0365ddf979b64c3c943e2a3f8e5a1abcf72e61a00a82780d2d364e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Text"
        ]
      }
    },
    "query": "INSERT INTO proof_compression_jobs_fri(l1_batch_number, fri_proof_blob_url, status, created_at, updated_at) VALUES ($1, $2, $3, now(), now()) ON CONFLICT (l1_batch_number) DO NOTHING"
  },
  "2397c1a050d358b596c9881c379bf823e267c03172f72c42da84cc0c04cc9d93": {
    "describe": {
      "columns": [
        {
          "name": "miniblock_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "index_in_block!",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "l1_batch_tx_index!",
          "ordinal": 3,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT miniblock_number as \"miniblock_number!\",\n                        hash, index_in_block as \"index_in_block!\", l1_batch_tx_index as \"l1_batch_tx_index!\"\n                    FROM transactions\n                    WHERE l1_batch_number = $1\n                    ORDER BY miniblock_number, index_in_block\n                "
  },
  "23c154c243f27912320ea0d68bc7bb372517010fb8c5737621cadd7b408afe8d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "UPDATE proof_compression_jobs_fri SET status =$1, error= $2, updated_at = now() WHERE l1_batch_number = $3"
  },
  "2424f0ab2b156e953841107cfc0ccd76519d13c62fdcd5fd6b39e3503d6ec82c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs_fri\n                SET status ='failed', error= $1, updated_at = now()\n                WHERE l1_batch_number = $2\n               "
  },
  "269f3ac58705d65f775a6c84a62b9c0726beef51eb633937fa2a75b80c6d7fbc": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT hash, number, timestamp FROM miniblocks WHERE number > $1 ORDER BY number ASC"
  },
  "26ac14152ade97892cd78d37884523187a5619093887b5e6564c3a80741b9d94": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "recursion_scheduler_level_vk_hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_node_level_vk_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_leaf_level_vk_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_circuits_set_vks_hash",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "verifier_address",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "created_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM protocol_versions WHERE id = $1"
  },
  "297d6517ec5f050e8d8fe4878e4ff330b4b10af4d60de86e8a25e2cd70e0363b": {
    "describe": {
      "columns": [
        {
          "name": "verification_info",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT verification_info FROM contracts_verification_info WHERE address = $1"
  },
  "2985ea2bf34a94573103654c00a49d2a946afe5d552ac1c2a2d055eb9d6f2cf1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs_fri\n                SET status = 'successful', updated_at = now(), time_taken = $1\n                WHERE id = $2\n               "
  },
  "29c04c63e5df40ef439d467373a848bce74de906548331856222cdb7551ca907": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "UPDATE contract_verification_requests SET status = 'successful', updated_at = now() WHERE id = $1"
  },
  "29f7f469cd58b256237536463f1e9d58438314fd1fe733a6bb53e6523f78bb49": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT attempts FROM prover_jobs_fri WHERE id = $1"
  },
  "2a38561e789af470d6ef1a905143f2d8d102b4ff23cebe97586681da9e4084a9": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "virtual_blocks",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT number, timestamp, hash, l1_tx_count, l2_tx_count, base_fee_per_gas, l1_gas_price, l2_fair_gas_price, bootloader_code_hash, default_aa_code_hash, protocol_version, virtual_blocks\n            FROM miniblocks WHERE number = $1"
  },
  "2a98f1b149045f25d2830c0b4ffaaa400b4c572eb3842add22e8540f44943711": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int2"
        ]
      }
    },
    "query": "SELECT id from prover_jobs_fri WHERE l1_batch_number = $1 AND status = 'successful' AND aggregation_round = $2"
  },
  "2adfdba6fa2b6b967ba03ae6f930e7f3ea851f678d30df699ced27b2dbb01c2a": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number FROM l1_batches LEFT JOIN eth_txs_history as execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id) WHERE execute_tx.confirmed_at IS NOT NULL ORDER BY number DESC LIMIT 1"
  },
  "2af0eddab563f0800a4762031e8703dbcac11450daacf3439289641b9b179b1c": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs_fri\n                SET status = 'queued', updated_at = now(), processing_started_at = now()\n                WHERE (status = 'in_progress' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                OR (status = 'failed' AND attempts < $2)\n                RETURNING id, status, attempts\n                "
  },
  "2b22e7d15adf069c8e68954059b83f71a71350f3325b4280840c4be7e54a319f": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "name",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "symbol",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "decimals",
          "ordinal": 4,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l1_address, l2_address, name, symbol, decimals FROM tokens\n                 WHERE well_known = true\n                 ORDER BY symbol"
  },
  "2b76ca7059810f691a2d7d053e7e62e06de13e7ddb7747e39335bb10c45534e9": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs_fri\n                SET status='queued'\n                WHERE (l1_batch_number, circuit_id) IN\n                      (SELECT prover_jobs_fri.l1_batch_number, prover_jobs_fri.circuit_id\n                       FROM prover_jobs_fri\n                                JOIN leaf_aggregation_witness_jobs_fri lawj ON\n                                prover_jobs_fri.l1_batch_number = lawj.l1_batch_number\n                                AND prover_jobs_fri.circuit_id = lawj.circuit_id\n                       WHERE lawj.status = 'waiting_for_proofs'\n                         AND prover_jobs_fri.status = 'successful'\n                         AND prover_jobs_fri.aggregation_round = 0\n                       GROUP BY prover_jobs_fri.l1_batch_number, prover_jobs_fri.circuit_id, lawj.number_of_basic_circuits\n                       HAVING COUNT(*) = lawj.number_of_basic_circuits)\n                RETURNING l1_batch_number, circuit_id;\n            "
  },
  "2bd9137542076526c245366057f0f3f57c08368f6e0dc86d49293a91875272b8": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT attempts FROM witness_inputs_fri WHERE l1_batch_number = $1"
  },
  "2c136284610f728ddba3e255d7dc573b10e4baf9151de194b7d8e0dc40c40602": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Jsonb"
        ]
      }
    },
    "query": "INSERT INTO transaction_traces (tx_hash, trace, created_at, updated_at) VALUES ($1, $2, now(), now())"
  },
  "2c4178a125ddc46a36f7548c840e481e85738502c56566d1eef84feef2161b2e": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Numeric",
          "Numeric",
          "Int4"
        ]
      }
    },
    "query": "UPDATE transactions\n                SET in_mempool = TRUE\n                FROM (\n                    SELECT hash FROM (\n                        SELECT hash\n                        FROM transactions\n                        WHERE miniblock_number IS NULL AND in_mempool = FALSE AND error IS NULL\n                            AND (is_priority = TRUE OR (max_fee_per_gas >= $2 and gas_per_pubdata_limit >= $3))\n                            AND tx_format != $4\n                        ORDER BY is_priority DESC, priority_op_id, received_at\n                        LIMIT $1\n                    ) as subquery1\n                    ORDER BY hash\n                ) as subquery2\n                WHERE transactions.hash = subquery2.hash\n                RETURNING transactions.*"
  },
  "2e3f116ca05ae70b7c83ac550302194c91f57b69902ff8e42140fde732ae5e6a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4Array"
        ]
      }
    },
    "query": "DELETE FROM storage_logs WHERE miniblock_number = $1 AND operation_number != ALL($2)"
  },
  "2e543dc0013150040bb86e278bbe86765ce1ebad72a32bb931fe02a9c516a11c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET hash = $1 WHERE number = $2"
  },
  "2ff4a13a75537cc30b2c3d52d3ef6237850150e4a4569adeaa4da4a9ac5bc689": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "SELECT bytecode FROM factory_deps WHERE bytecode_hash = $1 AND miniblock_number <= $2"
  },
  "300e5d4fa6d2481a10cb6d857f66a81b6c3760906c6c2ab02f126d52efc0d4d1": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT * FROM transactions WHERE miniblock_number IS NOT NULL AND l1_batch_number IS NULL ORDER BY miniblock_number, index_in_block"
  },
  "3055b9f38a04f26dac9adbba978679e6877f44c758fd03461e940a8f9a4e5af1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int2",
          "Int4",
          "Text",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "INSERT INTO node_aggregation_witness_jobs_fri (l1_batch_number, circuit_id, depth, aggregations_url, number_of_dependent_jobs, protocol_version, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, $4, $5, $6, 'waiting_for_proofs', now(), now())\n                    ON CONFLICT(l1_batch_number, circuit_id, depth)\n                    DO UPDATE SET updated_at=now()"
  },
  "3167c62f6da5171081f6c003e64a3096829d4da94c3af48867d12d2c135f1a29": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "SELECT number, l1_batches.timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, l1_batches.bootloader_code_hash, l1_batches.default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, protocol_version, compressed_state_diffs, system_logs, events_queue_commitment, bootloader_initial_content_commitment FROM l1_batches LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number JOIN protocol_versions ON protocol_versions.id = l1_batches.protocol_version WHERE eth_commit_tx_id IS NULL AND number != 0 AND protocol_versions.bootloader_code_hash = $1 AND protocol_versions.default_account_code_hash = $2 AND commitment IS NOT NULL AND (protocol_versions.id = $3 OR protocol_versions.upgrade_tx_hash IS NULL) ORDER BY number LIMIT $4"
  },
  "334197fef9eeca55790d366ae67bbe95d77181bdfd2ad3208a32bd50585aef2d": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "SELECT hashed_key FROM initial_writes WHERE hashed_key = ANY($1)"
  },
  "335826f54feadf6aa30a4e7668ad3f17a2afc6bd67d4f863e3ad61fefd1bd8d2": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(number) as \"number\" FROM miniblocks"
  },
  "34087096293cd8fc1c5bfcb412291c228afa1ce5dc8889a8535a2b2ecf569e03": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "contract_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "source_code",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "contract_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "zk_compiler_version",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "compiler_version",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "optimization_used",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "optimizer_mode",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "constructor_arguments",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "is_system",
          "ordinal": 9,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT id, contract_address, source_code, contract_name, zk_compiler_version, compiler_version, optimization_used, optimizer_mode, constructor_arguments, is_system FROM contract_verification_requests WHERE status = 'successful' ORDER BY id"
  },
  "357347157ed8ff19d223c54533c3a85bd7e64a37514d657f8d49bd6eb5be1806": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "recursion_scheduler_level_vk_hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_node_level_vk_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_leaf_level_vk_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_circuits_set_vks_hash",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "verifier_address",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "created_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT * FROM protocol_versions ORDER BY id DESC LIMIT 1"
  },
  "37e4a0eea7b72bd3b75c26e003f3fa62039d9b614f0f2fa3d61e8c5e95f002fd": {
    "describe": {
      "columns": [
        {
          "name": "max?",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(index) as \"max?\" FROM initial_writes"
  },
  "394bbd64939d47fda4e1545e2752b208901e872b7234a5c3af456bdf429a6074": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "call_trace",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT * FROM call_traces\n                    WHERE tx_hash = $1\n                "
  },
  "3a18d0d1e236d8f57e8b3b1218a24414639a7c8235ba6a514c3d03b8a1790f17": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "merkle_tree_paths_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "status",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "processing_started_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 8,
          "type_info": "Time"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "picked_by",
          "ordinal": 11,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE witness_inputs_fri\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now(),\n                    picked_by = $3\n                WHERE l1_batch_number = (\n                    SELECT l1_batch_number\n                    FROM witness_inputs_fri\n                    WHERE l1_batch_number <= $1\n                    AND status = 'queued'\n                    AND protocol_version = ANY($2)\n                    ORDER BY l1_batch_number ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING witness_inputs_fri.*\n               "
  },
  "3a6bb31237b29755a0031dbb4a47e51e474fe8d4d12bb1ead6f991905cfbe6a4": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8",
          "Text",
          "Bytea"
        ]
      }
    },
    "query": "INSERT INTO eth_txs_history (eth_tx_id, base_fee_per_gas, priority_fee_per_gas, tx_hash, signed_raw_tx, created_at, updated_at) VALUES ($1, $2, $3, $4, $5, now(), now()) ON CONFLICT (tx_hash) DO NOTHING RETURNING id"
  },
  "3ac1fe562e9664bbf8c02ba3090cf97a37663e228eff48fec326f74b2313daa9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "DELETE FROM call_traces\n                 WHERE tx_hash = ANY($1)"
  },
  "3af5a385c6636afb16e0fa5eda5373d64a76cef695dfa0b3b156e236224d32c8": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "scheduler_witness",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "final_node_aggregations",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 5,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "attempts",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "aggregation_result_coords",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "scheduler_witness_blob_url",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "final_node_aggregations_blob_url",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 14,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4",
          "Int8",
          "Int4Array"
        ]
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE l1_batch_number = (\n                    SELECT l1_batch_number\n                    FROM scheduler_witness_jobs\n                    WHERE l1_batch_number <= $3\n                    AND\n                    (   status = 'queued'\n                        OR (status = 'in_progress' AND processing_started_at < now() - $1::interval)\n                        OR (status = 'failed' AND attempts < $2)\n                    )\n                    AND protocol_version = ANY($4)\n                    ORDER BY l1_batch_number ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING scheduler_witness_jobs.*\n                "
  },
  "3be0d3fd7a1ff997edb1eaff3fac59324a5b33663e7862cfddd4a5db8015f13c": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT attempts FROM leaf_aggregation_witness_jobs_fri WHERE id = $1"
  },
  "3c582aeed32235ef175707de412a9f9129fad6ea5e87ebb85f68e20664b0da46": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE transactions\n                    SET \n                        l1_batch_number = $3,\n                        l1_batch_tx_index = data_table.l1_batch_tx_index,\n                        updated_at = now()\n                    FROM\n                        (SELECT\n                                UNNEST($1::int[]) AS l1_batch_tx_index,\n                                UNNEST($2::bytea[]) AS hash\n                        ) AS data_table\n                    WHERE transactions.hash=data_table.hash \n                "
  },
  "3d41f05e1d5c5a74e0605e66fe08e09f14b8bf0269e5dcde518aa08db92a3ea0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM events WHERE miniblock_number > $1"
  },
  "3e982e4863eef38069e755e3f20602ef9eaae859d23d86c3f230ddea8805aea7": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT index FROM initial_writes WHERE hashed_key = $1"
  },
  "3f6332706376ef4cadda96498872429b6ed28eca5402b03b1aa3b77b8262bccd": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "DELETE FROM compiler_versions WHERE compiler = $1"
  },
  "3f671298a05f3f69a8ffb2e36d5ae79c544145fc1c289dd9e0c060dca3ec6e21": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray"
        ]
      }
    },
    "query": "UPDATE storage SET value = u.value FROM UNNEST($1::bytea[], $2::bytea[]) AS u(key, value) WHERE u.key = hashed_key"
  },
  "400bb5f012b95f5b327a65bf8a55e61a9e41a8040f546d75b9b8aa6be45e78d5": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "SELECT number, hash FROM miniblocks WHERE protocol_version = $1 ORDER BY number DESC LIMIT $2"
  },
  "4029dd84cde963ed8541426a659b10ccdbacbf4392664e34bfc29737aa630b28": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Int4",
          "Int8",
          "Bool",
          "Bytea",
          "ByteaArray",
          "ByteaArray",
          "Bytea",
          "ByteaArray",
          "Int8",
          "Int8",
          "Int8",
          "Jsonb",
          "Jsonb",
          "Numeric",
          "Int8",
          "Int8",
          "Bytea",
          "Bytea",
          "Int4",
          "ByteaArray",
          "Int8Array"
        ]
      }
    },
    "query": "INSERT INTO l1_batches (number, l1_tx_count, l2_tx_count, timestamp, is_finished, fee_account_address, l2_to_l1_logs, l2_to_l1_messages, bloom, priority_ops_onchain_data, predicted_commit_gas_cost, predicted_prove_gas_cost, predicted_execute_gas_cost, initial_bootloader_heap_content, used_contract_hashes, base_fee_per_gas, l1_gas_price, l2_fair_gas_price, bootloader_code_hash, default_aa_code_hash, protocol_version, system_logs, storage_refunds, created_at, updated_at ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, now(), now())"
  },
  "40a86f39a74ab22bdcd8b40446ea063c68bfb3e930e3150212474a657e82b38f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text"
        ]
      }
    },
    "query": "\n                    UPDATE scheduler_witness_jobs\n                        SET final_node_aggregations_blob_url = $2,\n                         status = 'waiting_for_proofs',\n                         updated_at = now()\n                    WHERE l1_batch_number = $1 AND status != 'queued'\n                    "
  },
  "42762c079948860eb59ba807eb9ae5a53b94c93e6b5635471d0018dde1d4c9d9": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "merkel_tree_paths_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT l1_batch_number, merkel_tree_paths_blob_url FROM witness_inputs WHERE status = 'successful' AND merkel_tree_paths_blob_url is NOT NULL AND updated_at < NOW() - INTERVAL '30 days' LIMIT $1"
  },
  "433d5da4d72150cf2c1e1007ee3ff51edfa51924f4b662b8cf382f06e60fd228": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                    UPDATE node_aggregation_witness_jobs\n                        SET number_of_leaf_circuits = $1,\n                            leaf_layer_subqueues_blob_url = $3,\n                            aggregation_outputs_blob_url = $4,\n                            status = 'waiting_for_proofs',\n                            updated_at = now()\n                    WHERE l1_batch_number = $2 AND status != 'queued'\n                    "
  },
  "43b5082ff7673ee3a8e8f3fafa64667fac4f7f5c8bd26a21ead6b4ba0f8fd17b": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT hash FROM miniblocks WHERE number = $1"
  },
  "448d283cab6ae334de9676f69416974656d11563b58e0188d53ca9e0995dd287": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array"
        ]
      }
    },
    "query": "\n                UPDATE scheduler_dependency_tracker_fri\n                SET status='queued'\n                WHERE l1_batch_number = ANY($1)\n                "
  },
  "4588d998b3454d8210190c6b16116b5885f6f3e74606aec8250e6c1e8f55d242": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "VACUUM storage_logs"
  },
  "4ab8a25620b5400d836e1b847320d4e176629a27e1a6cb0666ab02bb55371769": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "DELETE FROM transactions WHERE miniblock_number IS NULL AND received_at < now() - $1::interval AND is_priority=false AND error IS NULL RETURNING hash"
  },
  "4ac212a08324b9d4c3febc585109f19105b4d20aa3e290352e3c63d7ec58c5b2": {
    "describe": {
      "columns": [
        {
          "name": "l2_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l2_address FROM tokens"
  },
  "4ac92a8436108097a32e94e53f7fe99261c7c3a40dbc433c20ccea3a7d06650c": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "SELECT hashed_key, value as \"value!\" FROM storage WHERE hashed_key = ANY($1)"
  },
  "4aef34fb19a07dbfe2be09024d6c7fc2033a8e1570cc7f002a5c78317ff8ff3f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int2",
          "Text",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO leaf_aggregation_witness_jobs_fri\n                        (l1_batch_number, circuit_id, closed_form_inputs_blob_url, number_of_basic_circuits, protocol_version, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, $4, $5, 'waiting_for_proofs', now(), now())\n                    ON CONFLICT(l1_batch_number, circuit_id)\n                    DO UPDATE SET updated_at=now()\n                    "
  },
  "4b8597a47c0724155ad9592dc32134523bcbca11c9d82763d1bebbe17479c7b4": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "recursion_scheduler_level_vk_hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_node_level_vk_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_leaf_level_vk_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_circuits_set_vks_hash",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "verifier_address",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "created_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM protocol_versions\n            WHERE id = $1\n            "
  },
  "4bab972cbbd8b53237a840ba9307079705bd4b5270428d2b41f05ee3d2aa42af": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                    SELECT MIN(l1_batch_number) as \"l1_batch_number!\", circuit_type\n                    FROM prover_jobs\n                    WHERE aggregation_round = 0 AND (status = 'queued' OR status = 'in_progress'\n                    OR status = 'in_gpu_proof'\n                    OR status = 'failed')\n                    GROUP BY circuit_type\n                "
  },
  "4c0d2aa6e08f3b4748b88cad5cf7b3a9eb9c051e8e8e747a3c38c1b37ce3a6b7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM l2_to_l1_logs WHERE miniblock_number > $1"
  },
  "4c83881635e957872a435737392bfed829de58780887c9a0fa7921ea648296fb": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number FROM l1_batches WHERE eth_prove_tx_id IS NOT NULL AND eth_execute_tx_id IS NULL ORDER BY number LIMIT 1"
  },
  "4d2e106c809a48ace74952df2b883a5e747aaa1bc6bee28e986dccee7fa130b6": {
    "describe": {
      "columns": [
        {
          "name": "nonce",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT nonce FROM eth_txs ORDER BY id DESC LIMIT 1"
  },
  "4d36aff2bdeb0b659b8c4cd031f7c3fc204d92bb500a4efe8b6beb9255a232f6": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT timestamp FROM l1_batches WHERE eth_execute_tx_id IS NULL AND number > 0 ORDER BY number LIMIT 1"
  },
  "4d50dabc25d392e6b9d0dbe0e386ea7ef2c1178b1b0394a17442185b79f2d77d": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "SELECT eth_txs.id FROM eth_txs_history JOIN eth_txs ON eth_txs.confirmed_eth_tx_history_id = eth_txs_history.id WHERE eth_txs_history.tx_hash = $1"
  },
  "4e2b733fea9ca7cef542602fcd80acf1a9d2e0f1e22566f1076c4837e3ac7e61": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "instance_host",
          "ordinal": 1,
          "type_info": "Inet"
        },
        {
          "name": "instance_port",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "instance_status",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "queue_free_slots",
          "ordinal": 7,
          "type_info": "Int4"
        },
        {
          "name": "queue_capacity",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "specialized_prover_group_id",
          "ordinal": 9,
          "type_info": "Int2"
        },
        {
          "name": "region",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "zone",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "num_gpu",
          "ordinal": 12,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE gpu_prover_queue\n                SET instance_status = 'reserved',\n                    updated_at = now(),\n                    processing_started_at = now()\n                WHERE id in (\n                    SELECT id\n                    FROM gpu_prover_queue\n                    WHERE specialized_prover_group_id=$2\n                    AND region=$3\n                    AND zone=$4\n                    AND (\n                        instance_status = 'available'\n                        OR (instance_status = 'reserved' AND  processing_started_at < now() - $1::interval)\n                    )\n                    ORDER BY updated_at ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING gpu_prover_queue.*\n                "
  },
  "5089dfb745ff04a9b071b5785e68194a6f6a7a72754d23a65adc7d6838f7f640": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "UPDATE eth_txs SET has_failed = TRUE WHERE id = $1"
  },
  "50cdc4e59990eb75ab12f002b0f41d196196c17194ee68ef5b0f7edb9f0f7f69": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Jsonb",
          "Text"
        ]
      }
    },
    "query": "UPDATE contract_verification_requests SET status = 'failed', updated_at = now(), error = $2, compilation_errors = $3, panic_message = $4 WHERE id = $1"
  },
  "5190fad25f0c476380af4013761d42ae97dbd55f87e38ceec33f8e148c5cbb14": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "last_batch_miniblock?",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "root_hash?",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "virtual_blocks",
          "ordinal": 9,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version!",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address?",
          "ordinal": 12,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        null,
        null,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT miniblocks.number,\n                    COALESCE(miniblocks.l1_batch_number, (SELECT (max(number) + 1) FROM l1_batches)) as \"l1_batch_number!\",\n                    (SELECT max(m2.number) FROM miniblocks m2 WHERE miniblocks.l1_batch_number = m2.l1_batch_number) as \"last_batch_miniblock?\",\n                    miniblocks.timestamp,\n                    miniblocks.hash as \"root_hash?\",\n                    miniblocks.l1_gas_price,\n                    miniblocks.l2_fair_gas_price,\n                    miniblocks.bootloader_code_hash,\n                    miniblocks.default_aa_code_hash,\n                    miniblocks.virtual_blocks,\n                    miniblocks.hash,\n                    miniblocks.protocol_version as \"protocol_version!\",\n                    l1_batches.fee_account_address as \"fee_account_address?\"\n                FROM miniblocks\n                LEFT JOIN l1_batches ON miniblocks.l1_batch_number = l1_batches.number\n                WHERE miniblocks.number = $1\n            "
  },
  "51cb712685991ffd600dce59f5ed8b5a1bfce8feed46ebd02471c43802e6e65a": {
    "describe": {
      "columns": [
        {
          "name": "bootloader_code_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT bootloader_code_hash, default_account_code_hash FROM protocol_versions\n                WHERE id = $1\n            "
  },
  "51d02f2e314ebf78c27949cc10997bd2171755400cc3a13c63994c85e15cb3df": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id!",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round!",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "status!",
          "ordinal": 3,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT COUNT(*) as \"count!\", circuit_id as \"circuit_id!\", aggregation_round as \"aggregation_round!\", status as \"status!\"\n                FROM prover_jobs_fri\n                WHERE status <> 'skipped' and status <> 'successful'\n                GROUP BY circuit_id, aggregation_round, status\n                "
  },
  "52eeb8c529efb796fdefb30a381fcf6c931512f30e55e24c155f6c649e662909": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE scheduler_dependency_tracker_fri\n                SET status='queuing'\n                WHERE l1_batch_number IN\n                      (SELECT l1_batch_number FROM scheduler_dependency_tracker_fri\n                       WHERE status != 'queued'\n                         AND circuit_1_final_prover_job_id IS NOT NULL\n                         AND circuit_2_final_prover_job_id IS NOT NULL\n                         AND circuit_3_final_prover_job_id IS NOT NULL\n                         AND circuit_4_final_prover_job_id IS NOT NULL\n                         AND circuit_5_final_prover_job_id IS NOT NULL\n                         AND circuit_6_final_prover_job_id IS NOT NULL\n                         AND circuit_7_final_prover_job_id IS NOT NULL\n                         AND circuit_8_final_prover_job_id IS NOT NULL\n                         AND circuit_9_final_prover_job_id IS NOT NULL\n                         AND circuit_10_final_prover_job_id IS NOT NULL\n                         AND circuit_11_final_prover_job_id IS NOT NULL\n                         AND circuit_12_final_prover_job_id IS NOT NULL\n                         AND circuit_13_final_prover_job_id IS NOT NULL\n                       )\n                RETURNING l1_batch_number;\n            "
  },
  "5490012051be6faaaa11fad0f196eb53160a9c5c045fe9d66afcef7f33403fe2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "recursion_scheduler_level_vk_hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_node_level_vk_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_leaf_level_vk_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_circuits_set_vks_hash",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "verifier_address",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "created_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM protocol_versions\n                WHERE id < $1\n                ORDER BY id DESC\n                LIMIT 1\n            "
  },
  "5503575d9377785894de6cf6139a8d4768c6a803a1a90889e5a1b8254c315231": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "INSERT INTO eth_txs (raw_tx, nonce, tx_type, contract_address, predicted_gas_cost, created_at, updated_at) VALUES ('\\x00', 0, $1, '', 0, now(), now()) RETURNING id"
  },
  "5563da0d52ca7310ae7bc957caa5d8b3dcbd9386bb2a0be68dcd21ebb044cdbd": {
    "describe": {
      "columns": [
        {
          "name": "bytecode_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "bytecode",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT bytecode_hash, bytecode FROM factory_deps INNER JOIN miniblocks ON miniblocks.number = factory_deps.miniblock_number WHERE miniblocks.l1_batch_number = $1"
  },
  "55debba852ef32f3b5ba6ffcb745f7b59d6888a21cb8792f8f9027e3b164a245": {
    "describe": {
      "columns": [
        {
          "name": "region",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "zone",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "total_gpus",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT region, zone, SUM(num_gpu) AS total_gpus\n                FROM gpu_prover_queue\n                GROUP BY region, zone\n               "
  },
  "565a302151a5a55aa717048e3e21b5d7379ab47c2b80229024f0cb2699136b11": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "UPDATE miniblocks SET protocol_version = $1 WHERE l1_batch_number IS NULL"
  },
  "57742ed088179b89b50920a2ab1a103b745598ee0ba05d1793fc54e63b477319": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET eth_commit_tx_id = $1, updated_at = now() WHERE number BETWEEN $2 AND $3"
  },
  "58489a4e8730646ce20efee849742444740c72f59fad2495647742417ed0ab5a": {
    "describe": {
      "columns": [
        {
          "name": "base_fee_per_gas",
          "ordinal": 0,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT base_fee_per_gas FROM miniblocks WHERE number <= $1 ORDER BY number DESC LIMIT $2"
  },
  "58ae859333cf7fadbb83d9cde66dee2abe18b4883f883e69130024d11a4a5cc6": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Numeric"
        ]
      }
    },
    "query": "SELECT number FROM ( SELECT number, sum(virtual_blocks) OVER(ORDER BY number) AS virtual_block_sum FROM miniblocks WHERE l1_batch_number >= $1 ) AS vts WHERE virtual_block_sum <= $2 ORDER BY number DESC LIMIT 1"
  },
  "5922fdf40632a6ffecfe824a3ba29bcf7b379aff5253db2739cc7be6145524e8": {
    "describe": {
      "columns": [
        {
          "name": "bootloader_code_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "id",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT bootloader_code_hash, default_account_code_hash, id FROM protocol_versions\n                WHERE timestamp <= $1\n                ORDER BY id DESC\n                LIMIT 1\n            "
  },
  "596ede80b21f08fc4dcf3e1fcc40810fe4c8f5123bcc19faebd15bfac86029d7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Jsonb"
        ]
      }
    },
    "query": "INSERT INTO contracts_verification_info (address, verification_info) VALUES ($1, $2) ON CONFLICT (address) DO UPDATE SET verification_info = $2"
  },
  "59a318fc330369353f2570bfef09909d11e22a1c76ba5277839a6866d8e796b6": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "index",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT hashed_key, index FROM initial_writes WHERE l1_batch_number = $1 ORDER BY index"
  },
  "5a27a65fa105897b60a99c1e0015e4b8c93c45e0c448e77b03565db5c36695ed": {
    "describe": {
      "columns": [
        {
          "name": "max",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(l1_batch_number) FROM witness_inputs WHERE merkel_tree_paths_blob_url IS NOT NULL"
  },
  "5a2f35f3b0135ab88451ea141e97b1160ea1b4cf495b6700b5d178a43499e0d8": {
    "describe": {
      "columns": [
        {
          "name": "fee_account_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT fee_account_address FROM l1_batches WHERE number = $1"
  },
  "5a31eab41a980cc82ad3609610d377a185ce38bd654ee93766c119aa6cae1040": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Numeric"
        ]
      }
    },
    "query": "SELECT number FROM ( SELECT number, sum(virtual_blocks) OVER(ORDER BY number) AS virtual_block_sum FROM miniblocks WHERE l1_batch_number >= $1 ) AS vts WHERE virtual_block_sum >= $2 ORDER BY number LIMIT 1"
  },
  "5a5844af61cc685a414fcd3cad70900bdce8f48e905c105f8dd50dc52e0c6f14": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "attempts",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'failed', error = $1, updated_at = now()\n                WHERE id = $2\n                RETURNING l1_batch_number, attempts\n                "
  },
  "5ac872e2c5a00b376cc053324b3776ef6a0bb7f6850e5a24a133dfee052c49e1": {
    "describe": {
      "columns": [
        {
          "name": "value",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT value FROM storage WHERE hashed_key = $1"
  },
  "5b2935b5b7e8c2907f5e221a6b1e6f4b8737b9fc618c5d021a3e1d58a3aed116": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs_fri\n                SET status = 'failed', error = $1, updated_at = now()\n                WHERE id = $2\n                "
  },
  "5bc8a41ae0f255b966df2102f1bd9059d55833e0afaf6e62c7ddcc9c06de8deb": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "aggregation_round",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(l1_batch_number) as \"l1_batch_number!\", aggregation_round FROM prover_jobs \n                 WHERE status='successful'\n                 GROUP BY aggregation_round \n                "
  },
  "5bc8cdc7ed710bb2f9b0035654fd7e9dcc01731ca581c6aa75d55184817bc100": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(number) as \"number\" FROM l1_batches WHERE hash IS NOT NULL"
  },
  "5cc93efebc14dc0b78ed32bf7f167a44bd083f32ab308662c57ce1f726c0f1f9": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT attempts FROM node_aggregation_witness_jobs_fri WHERE id = $1"
  },
  "5df806b33f84893d4ddfacf3b289b0e173e85ad9204cbb7ad314e68a94cdc41e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8",
          "Int2",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs_fri\n                SET aggregations_url = $1, number_of_dependent_jobs = $5, updated_at = now()\n                WHERE l1_batch_number = $2\n                AND circuit_id = $3\n                AND depth = $4\n               "
  },
  "5e09f2359dd69380c1f183f613d82696029a56896e2b985738a2fa25d6cb8a71": {
    "describe": {
      "columns": [
        {
          "name": "op_id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(priority_op_id) as \"op_id\" from transactions where is_priority = true"
  },
  "5eb9f25dacfb02e70a9fcf0a41937d4c63bd786efb2fd0d1180f449a3ae0bbc0": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "leaf_layer_subqueues",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "aggregation_outputs",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "number_of_leaf_circuits",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 6,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "attempts",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "leaf_layer_subqueues_blob_url",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "aggregation_outputs_blob_url",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 13,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 14,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4",
          "Int8",
          "Int4Array"
        ]
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE l1_batch_number = (\n                        SELECT l1_batch_number\n                        FROM node_aggregation_witness_jobs\n                        WHERE l1_batch_number <= $3\n                        AND\n                        (   status = 'queued'\n                            OR (status = 'in_progress' AND processing_started_at < now() - $1::interval)\n                            OR (status = 'failed' AND attempts < $2)\n                        )\n                        AND protocol_version = ANY($4)\n                        ORDER BY l1_batch_number ASC\n                        LIMIT 1\n                        FOR UPDATE\n                        SKIP LOCKED\n                )\n                RETURNING node_aggregation_witness_jobs.*\n            "
  },
  "5f037f6ae8489d5224772d4f9e3e6cfc2075560957fa491d97a95c0e79ff4830": {
    "describe": {
      "columns": [
        {
          "name": "block_batch?",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "max_batch?",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT (SELECT l1_batch_number FROM miniblocks WHERE number = $1) as \"block_batch?\", (SELECT MAX(number) + 1 FROM l1_batches) as \"max_batch?\""
  },
  "5f40849646bb7436e29cda8fb87fece2a4dcb580644f45ecb82388dece04f222": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs_fri\n                SET status = 'queued', updated_at = now(), processing_started_at = now()\n                WHERE id in (\n                    SELECT id\n                    FROM prover_jobs_fri\n                    WHERE (status = 'in_progress' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                    OR (status = 'in_gpu_proof' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                    OR (status = 'failed' AND attempts < $2)\n                    FOR UPDATE SKIP LOCKED\n                )\n                RETURNING id, status, attempts\n                "
  },
  "5f4b1091b74424ffd20c0aede98287418afa2bb37dbc941200c1d6190c96bec5": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT timestamp FROM l1_batches WHERE eth_commit_tx_id IS NULL AND number > 0 ORDER BY number LIMIT 1"
  },
  "601487490349c5eee83d6de19137b1a1079235e46c4a3f07e1eaa9db7760f586": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Jsonb"
        ]
      }
    },
    "query": "INSERT INTO events_queue (l1_batch_number, serialized_events_queue) VALUES ($1, $2)"
  },
  "62aaa047e3da5bd966608fec421ddad1b8afa04aaf35e946219d703bbe6ac9c5": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "sequence_number",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "depth",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "is_node_final_proof",
          "ordinal": 6,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int2Array",
          "Int2Array",
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs_fri\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now(),\n                    picked_by = $4\n                WHERE id = (\n                    SELECT pj.id\n                    FROM prover_jobs_fri AS pj\n                    JOIN (\n                        SELECT * FROM unnest($1::smallint[], $2::smallint[])\n                    )\n                    AS tuple (circuit_id, round)\n                    ON tuple.circuit_id = pj.circuit_id AND tuple.round = pj.aggregation_round\n                    WHERE pj.status = 'queued'\n                    AND pj.protocol_version = ANY($3)\n                    ORDER BY pj.l1_batch_number ASC, pj.aggregation_round DESC, pj.id ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING prover_jobs_fri.id, prover_jobs_fri.l1_batch_number, prover_jobs_fri.circuit_id,\n                prover_jobs_fri.aggregation_round, prover_jobs_fri.sequence_number, prover_jobs_fri.depth,\n                prover_jobs_fri.is_node_final_proof\n                "
  },
  "6317155050a5dae24ea202cfd54d1e58cc7aeb0bfd4d95aa351f85cff04d3bff": {
    "describe": {
      "columns": [
        {
          "name": "version",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "SELECT version FROM compiler_versions WHERE compiler = $1 ORDER by version"
  },
  "65a31949cd7f8890e9448d26a0efee852ddf59bfbbc858b51fba10048d47d27b": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 34,
          "type_info": "ByteaArray"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 36,
          "type_info": "Int4"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT number, timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, bootloader_code_hash, default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, system_logs, compressed_state_diffs, protocol_version, events_queue_commitment, bootloader_initial_content_commitment FROM (SELECT l1_batches.*, row_number() OVER (ORDER BY number ASC) AS row_number FROM l1_batches WHERE eth_commit_tx_id IS NOT NULL AND l1_batches.skip_proof = TRUE AND l1_batches.number > $1 ORDER BY number LIMIT $2) inn LEFT JOIN commitments ON commitments.l1_batch_number = inn.number WHERE number - row_number = $1"
  },
  "65e2cdb70ccef97d886fb53d1bb298875e13b0ffe7b744ac5dd86433f0929eb0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          "Int8",
          "Time",
          "Text"
        ]
      }
    },
    "query": "UPDATE basic_witness_input_producer_jobs SET status = $1, updated_at = now(), time_taken = $3, input_blob_url = $4 WHERE l1_batch_number = $2"
  },
  "665112c83ed7f126f94d1c47408de3495ee6431970e334d94ae75f853496eb48": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs_fri\n                SET status ='failed', error= $1, updated_at = now()\n                WHERE id = $2\n               "
  },
  "67a47f1e7d5f8dafcef94bea3f268b4baec1888c6ef11c92ab66480ecdcb9aef": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Bytea",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'successful', updated_at = now(), time_taken = $1, result = $2, proccesed_by = $3\n                WHERE id = $4\n                "
  },
  "67ecdc69e39e689f1f23f867d31e6b8c47e9c041e18cbd84a2ad6482a9be4e74": {
    "describe": {
      "columns": [
        {
          "name": "l2_to_l1_logs",
          "ordinal": 0,
          "type_info": "ByteaArray"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT l2_to_l1_logs FROM l1_batches WHERE number = $1"
  },
  "67efc7ea5bd3821d8325759ed8357190f6122dd2ae503a57faf15d8b749a4361": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs\n                SET status='queued'\n                WHERE l1_batch_number IN\n                      (SELECT prover_jobs.l1_batch_number\n                       FROM prover_jobs\n                                JOIN leaf_aggregation_witness_jobs lawj ON prover_jobs.l1_batch_number = lawj.l1_batch_number\n                       WHERE lawj.status = 'waiting_for_proofs'\n                         AND prover_jobs.status = 'successful'\n                         AND prover_jobs.aggregation_round = 0\n                       GROUP BY prover_jobs.l1_batch_number, lawj.number_of_basic_circuits\n                       HAVING COUNT(*) = lawj.number_of_basic_circuits)\n                RETURNING l1_batch_number;\n            "
  },
  "68a9ba78f60674bc047e4af6eb2a379725da047f2e6c06bce96a33852565cc95": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "INSERT INTO commitments (l1_batch_number, events_queue_commitment, bootloader_initial_content_commitment) VALUES ($1, $2, $3) ON CONFLICT (l1_batch_number) DO UPDATE SET events_queue_commitment = $2, bootloader_initial_content_commitment = $3"
  },
  "6939e766e122458b2ac618d19b2759c4a7298ef72b81e8c3957e0a5cf35c9552": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n                UPDATE witness_inputs_fri\n                SET status = 'queued', updated_at = now(), processing_started_at = now()\n                WHERE (status = 'in_progress' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                OR (status = 'in_gpu_proof' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                OR (status = 'failed' AND attempts < $2)\n                RETURNING l1_batch_number, status, attempts\n                "
  },
  "694f1d154f3f38b123d8f845fef6e876d35dc3743f1c5b69dce6be694e5e726c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "UPDATE witness_inputs SET status='queued' WHERE l1_batch_number=$1 AND status='waiting_for_artifacts'"
  },
  "697835cdd5be1b99a0f332c4c8f3245e317b0282b46e55f15e728a7642382b25": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "sequence_number",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "depth",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "is_node_final_proof",
          "ordinal": 6,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Time",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs_fri\n                SET status = 'successful', updated_at = now(), time_taken = $1, proof_blob_url=$2\n                WHERE id = $3\n                RETURNING prover_jobs_fri.id, prover_jobs_fri.l1_batch_number, prover_jobs_fri.circuit_id,\n                prover_jobs_fri.aggregation_round, prover_jobs_fri.sequence_number, prover_jobs_fri.depth,\n                prover_jobs_fri.is_node_final_proof\n                "
  },
  "6a282084b02cddd8646e984a729b689bdb758e07096fc8cf60f68c6ec5bd6a9c": {
    "describe": {
      "columns": [
        {
          "name": "max?",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(id) as \"max?\" FROM protocol_versions"
  },
  "6a3af113a71bffa445d4a729e24fbc2be90bfffbdd072c74f9ca58669b7e5f80": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "SELECT id FROM prover_fri_protocol_versions WHERE recursion_circuits_set_vks_hash = $1 AND recursion_leaf_level_vk_hash = $2 AND recursion_node_level_vk_hash = $3 AND recursion_scheduler_level_vk_hash = $4 "
  },
  "6b53e5cb619c9649d28ae33df6a43e6984e2d9320f894f3d04156a2d1235bb60": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT hash FROM miniblocks WHERE number BETWEEN $1 AND $2 ORDER BY number"
  },
  "6c0915ed87e6d0fdf83cb24a51cc277e366bea0ba8821c048092d2a0aadb2771": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int8",
          "Bytea",
          "Int4",
          "Int4",
          "Numeric",
          "Int8",
          "Int8",
          "Int8",
          "Bytea",
          "Bytea",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "INSERT INTO miniblocks ( number, timestamp, hash, l1_tx_count, l2_tx_count, base_fee_per_gas, l1_gas_price, l2_fair_gas_price, gas_per_pubdata_limit, bootloader_code_hash, default_aa_code_hash, protocol_version, virtual_blocks, created_at, updated_at ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, now(), now())"
  },
  "6d142503d0d8682992a0353bae4a6b25ec82e7cadf0b2bbadcfd23c27f646bae": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "TextArray",
          "Text"
        ]
      }
    },
    "query": "INSERT INTO compiler_versions (version, compiler, created_at, updated_at) SELECT u.version, $2, now(), now() FROM UNNEST($1::text[]) AS u(version) ON CONFLICT (version, compiler) DO NOTHING"
  },
  "6ffd22b0590341c38ce3957dccdb5a4edf47fb558bc64e4df08897a0c72dbf23": {
    "describe": {
      "columns": [
        {
          "name": "protocol_version",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT protocol_version\n                FROM witness_inputs\n                WHERE l1_batch_number = $1\n                "
  },
  "715aba794d60ce2faf937eacd9498b203dbb8e620d6d8850b9071cd72902ffbf": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "INSERT INTO factory_deps (bytecode_hash, bytecode, miniblock_number, created_at, updated_at) SELECT u.bytecode_hash, u.bytecode, $3, now(), now() FROM UNNEST($1::bytea[], $2::bytea[]) AS u(bytecode_hash, bytecode) ON CONFLICT (bytecode_hash) DO NOTHING"
  },
  "741b13b0a4769a30186c650a4a1b24855806a27ccd8d5a50594741842dde44ec": {
    "describe": {
      "columns": [
        {
          "name": "min?",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "max?",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT MIN(miniblocks.number) as \"min?\", MAX(miniblocks.number) as \"max?\" FROM miniblocks WHERE l1_batch_number = $1"
  },
  "751c8e5ed1fc211dbb4c7419a316c5f4e49a7f0b4f3a5c74c2abd8daebc457dd": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT l1_batch_number FROM miniblocks WHERE number = $1"
  },
  "769c021b51b9aaafdf27b4019834729047702b17b0684f7271eecd6ffdf96e7c": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs\n                SET status='queued'\n                WHERE l1_batch_number IN\n                      (SELECT prover_jobs.l1_batch_number\n                       FROM prover_jobs\n                                JOIN scheduler_witness_jobs swj ON prover_jobs.l1_batch_number = swj.l1_batch_number\n                       WHERE swj.status = 'waiting_for_proofs'\n                         AND prover_jobs.status = 'successful'\n                         AND prover_jobs.aggregation_round = 2\n                       GROUP BY prover_jobs.l1_batch_number\n                       HAVING COUNT(*) = 1)\n                RETURNING l1_batch_number;\n            "
  },
  "7717652bb4933f87cbeb7baa2e70e8e0b439663c6b15493bd2e406bed2486b42": {
    "describe": {
      "columns": [
        {
          "name": "max",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Numeric"
        ]
      }
    },
    "query": "SELECT max(l1_batches.number) FROM l1_batches JOIN eth_txs ON (l1_batches.eth_commit_tx_id = eth_txs.id) JOIN eth_txs_history AS commit_tx ON (eth_txs.confirmed_eth_tx_history_id = commit_tx.id) WHERE commit_tx.confirmed_at IS NOT NULL AND eth_prove_tx_id IS NOT NULL AND eth_execute_tx_id IS NULL AND EXTRACT(epoch FROM commit_tx.confirmed_at) < $1"
  },
  "77d78689b5c0b631da047f21c89a607213bec507cd9cf2b5cb4ea86e1a084796": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bool",
          "Bytea",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET hash = $1, merkle_root_hash = $2, commitment = $3, default_aa_code_hash = $4, compressed_repeated_writes = $5, compressed_initial_writes = $6, l2_l1_compressed_messages = $7, l2_l1_merkle_root = $8, zkporter_is_available = $9, bootloader_code_hash = $10, rollup_last_leaf_index = $11, aux_data_hash = $12, pass_through_data_hash = $13, meta_parameters_hash = $14, compressed_state_diffs = $15, updated_at = now() WHERE number = $16"
  },
  "780b30e56a3ecfb3daa5310168ac6cd9e94bd5f1d871e1eaf36fbfd463a5e7e0": {
    "describe": {
      "columns": [
        {
          "name": "address_and_key?",
          "ordinal": 0,
          "type_info": "ByteaArray"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "SELECT (SELECT ARRAY[address,key] FROM storage_logs WHERE hashed_key = u.hashed_key ORDER BY miniblock_number, operation_number LIMIT 1) as \"address_and_key?\" FROM UNNEST($1::bytea[]) AS u(hashed_key)"
  },
  "78ba607e97bdf8b7c0b5e3cf87e10dc3b352a8552c2e94532b0f392af7dbe9cd": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "contract_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "source_code",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "contract_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "zk_compiler_version",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "compiler_version",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "optimization_used",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "optimizer_mode",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "constructor_arguments",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "is_system",
          "ordinal": 9,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "UPDATE contract_verification_requests SET status = 'in_progress', attempts = attempts + 1, updated_at = now(), processing_started_at = now() WHERE id = ( SELECT id FROM contract_verification_requests WHERE status = 'queued' OR (status = 'in_progress' AND processing_started_at < now() - $1::interval) ORDER BY created_at LIMIT 1 FOR UPDATE SKIP LOCKED ) RETURNING id, contract_address, source_code, contract_name, zk_compiler_version, compiler_version, optimization_used, optimizer_mode, constructor_arguments, is_system"
  },
  "79420f7676acb3f17aeb538271cdb4067a342fd554adcf7bd0550b6682b4c82b": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "call_trace",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * FROM call_traces WHERE tx_hash IN (SELECT hash FROM transactions WHERE miniblock_number = $1)"
  },
  "79cdb4cdd3c47b3654e6240178985fb4b4420e0634f9482a6ef8169e90200b84": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT attempts FROM scheduler_witness_jobs_fri WHERE l1_batch_number = $1"
  },
  "7a5aba2130fec60318266c8059d3757cd78eb6099d50486b4996fb4090c99622": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea",
          "Text",
          "Text",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO leaf_aggregation_witness_jobs\n                        (l1_batch_number, basic_circuits, basic_circuits_inputs, basic_circuits_blob_url, basic_circuits_inputs_blob_url, number_of_basic_circuits, protocol_version, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, $4, $5, $6, $7, 'waiting_for_proofs', now(), now())\n                    "
  },
  "7b8043a59029a19a3ba2433a438e8a4fe560aba7eda57b7a63b580de2e19aacb": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "INSERT INTO witness_inputs_fri(l1_batch_number, merkle_tree_paths_blob_url, protocol_version, status, created_at, updated_at) VALUES ($1, $2, $3, 'queued', now(), now()) ON CONFLICT (l1_batch_number) DO NOTHING"
  },
  "7c3e55a10c8cf90e60001bca401113fd5335ec6c4b1ffdb6d6ff063d244d23e2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prover_input",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 9,
          "type_info": "Time"
        },
        {
          "name": "aggregation_round",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "result",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "sequence_number",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "attempts",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "proccesed_by",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 17,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "TextArray",
          "Int4Array"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE id = (\n                        SELECT id\n                        FROM prover_jobs\n                        WHERE circuit_type = ANY($1)\n                        AND status = 'queued'\n                        AND protocol_version = ANY($2)\n                        ORDER BY aggregation_round DESC, l1_batch_number ASC, id ASC\n                        LIMIT 1\n                        FOR UPDATE\n                        SKIP LOCKED\n                    )\n                RETURNING prover_jobs.*\n                "
  },
  "7ca78be8b18638857111cdbc6117ed2c204e3eb22682d5e4553ac4f47efab6e2": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "UPDATE transactions\n                    SET l1_batch_number = NULL, miniblock_number = NULL, error = NULL, index_in_block = NULL, execution_info = '{}'\n                    WHERE miniblock_number > $1\n                    RETURNING hash\n                    "
  },
  "7cf855c4869db43b765b92762402596f6b97b3717735b6d87a16a5776f2eca71": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Numeric",
          "Timestamp"
        ]
      }
    },
    "query": "UPDATE tokens SET usd_price = $2, usd_price_updated_at = $3, updated_at = now() WHERE l1_address = $1"
  },
  "7d4210089c5abb84befec962fc769b396ff7ad7da212d079bd4460f9ea4d60dc": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number?",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT MIN(l1_batch_number) as \"l1_batch_number?\" FROM (\n                    SELECT MIN(l1_batch_number) as \"l1_batch_number\"\n                    FROM prover_jobs\n                    WHERE status = 'successful' OR aggregation_round < 3\n                    GROUP BY l1_batch_number\n                    HAVING MAX(aggregation_round) < 3\n                ) as inn\n                "
  },
  "7df997e5a203e8df350b1346863fddf26d32123159213c02e8794c39240e48dc": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "UPDATE miniblocks SET l1_batch_number = $1 WHERE l1_batch_number IS NULL"
  },
  "8045a697a6a1070857b6fdc656f60ee6bab4b3a875ab98099beee227c199f818": {
    "describe": {
      "columns": [
        {
          "name": "miniblock_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "log_index_in_miniblock",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "log_index_in_tx",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "block_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "shard_id",
          "ordinal": 6,
          "type_info": "Int4"
        },
        {
          "name": "is_service",
          "ordinal": 7,
          "type_info": "Bool"
        },
        {
          "name": "tx_index_in_miniblock",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "tx_index_in_l1_batch",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "sender",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 12,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        null,
        null,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT miniblock_number, log_index_in_miniblock, log_index_in_tx, tx_hash, Null::bytea as \"block_hash\", Null::bigint as \"l1_batch_number?\", shard_id, is_service, tx_index_in_miniblock, tx_index_in_l1_batch, sender, key, value FROM l2_to_l1_logs WHERE tx_hash = $1 ORDER BY log_index_in_tx ASC"
  },
  "832105952074e4ff35252d8e7973faa1b24455abc89820307db5e49a834c0718": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 6,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "bloom",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 9,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 10,
          "type_info": "Jsonb"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 11,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 15,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "system_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 18,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT number, l1_tx_count, l2_tx_count, timestamp, is_finished, fee_account_address, l2_to_l1_logs, l2_to_l1_messages, bloom, priority_ops_onchain_data, used_contract_hashes, base_fee_per_gas, l1_gas_price, l2_fair_gas_price, bootloader_code_hash, default_aa_code_hash, protocol_version, system_logs, compressed_state_diffs FROM l1_batches WHERE eth_commit_tx_id = $1 OR eth_prove_tx_id = $1 OR eth_execute_tx_id = $1"
  },
  "84703029e09ab1362aa4b4177b38be594d2daf17e69508cae869647028055efb": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text"
        ]
      }
    },
    "query": "SELECT l1_batch_number, status FROM proof_compression_jobs_fri\n            WHERE l1_batch_number = ( SELECT MIN(l1_batch_number) FROM proof_compression_jobs_fri WHERE status = $1 OR status = $2\n            )"
  },
  "848d82292a4960154449b425e0b10e250a4ced4c27fb324657589859a512d3a4": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT tx_hash FROM eth_txs_history WHERE eth_tx_id = $1 AND confirmed_at IS NOT NULL"
  },
  "85ac7fb2c4175d662c8f466e722d28b0eadcd2f252a788e366dbd05eac547b93": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number, timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, bootloader_code_hash, default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, protocol_version, compressed_state_diffs, system_logs, events_queue_commitment, bootloader_initial_content_commitment\n            FROM l1_batches LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number WHERE number = 0 OR eth_commit_tx_id IS NOT NULL AND commitment IS NOT NULL ORDER BY number DESC LIMIT 1"
  },
  "85c52cb09c73499507144e3a684c3230c2c71eb4f8ddef43e67fbd33de2747c8": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT timestamp, hash FROM l1_batches WHERE number = $1"
  },
  "87e1ae393bf250f834704c940482884c9ed729a24f41d1ec07319fa0cbcc21a7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM l1_batches WHERE number > $1"
  },
  "8996a1794585dfe0f9c16a11e113831a63d5d944bc8061d7caa25ea33f12b19d": {
    "describe": {
      "columns": [
        {
          "name": "is_priority",
          "ordinal": 0,
          "type_info": "Bool"
        },
        {
          "name": "initiator_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "gas_limit",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "received_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "miniblock_number",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "error",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 7,
          "type_info": "Numeric"
        },
        {
          "name": "refunded_gas",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "eth_commit_tx_hash?",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "eth_prove_tx_hash?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "eth_execute_tx_hash?",
          "ordinal": 11,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT transactions.is_priority,\n                        transactions.initiator_address,\n                        transactions.gas_limit,\n                        transactions.gas_per_pubdata_limit,\n                        transactions.received_at,\n                        transactions.miniblock_number,\n                        transactions.error,\n                        transactions.effective_gas_price,\n                        transactions.refunded_gas,\n                        commit_tx.tx_hash as \"eth_commit_tx_hash?\",\n                        prove_tx.tx_hash as \"eth_prove_tx_hash?\",\n                        execute_tx.tx_hash as \"eth_execute_tx_hash?\"\n                    FROM transactions\n                    LEFT JOIN miniblocks ON miniblocks.number = transactions.miniblock_number\n                    LEFT JOIN l1_batches ON l1_batches.number = miniblocks.l1_batch_number\n                    LEFT JOIN eth_txs_history as commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id AND commit_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id AND prove_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id AND execute_tx.confirmed_at IS NOT NULL)\n                    WHERE transactions.hash = $1\n                "
  },
  "89b124c78f4f6e86790af8ec391a2c486ce01b33cfb4492a443187b1731cae1e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET eth_prove_tx_id = $1, updated_at = now() WHERE number BETWEEN $2 AND $3"
  },
  "8a05b6c052ace9b5a383b301f3f441536d90a96bbb791f4711304b22e02193df": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs_fri\n                SET status = 'successful', updated_at = now(), time_taken = $1\n                WHERE id = $2\n               "
  },
  "8cd540b6063f4a0c1bf4ccb3d111a0ecc341ca8b46b83544c515aa4d809ab9f1": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "root_hash?",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "commit_tx_hash?",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "committed_at?",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "prove_tx_hash?",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "proven_at?",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "execute_tx_hash?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "executed_at?",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 15,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address?",
          "ordinal": 17,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        null,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        true,
        false,
        false,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT miniblocks.number,\n                        COALESCE(miniblocks.l1_batch_number, (SELECT (max(number) + 1) FROM l1_batches)) as \"l1_batch_number!\",\n                        miniblocks.timestamp,\n                        miniblocks.l1_tx_count,\n                        miniblocks.l2_tx_count,\n                        miniblocks.hash as \"root_hash?\",\n                        commit_tx.tx_hash as \"commit_tx_hash?\",\n                        commit_tx.confirmed_at as \"committed_at?\",\n                        prove_tx.tx_hash as \"prove_tx_hash?\",\n                        prove_tx.confirmed_at as \"proven_at?\",\n                        execute_tx.tx_hash as \"execute_tx_hash?\",\n                        execute_tx.confirmed_at as \"executed_at?\",\n                        miniblocks.l1_gas_price,\n                        miniblocks.l2_fair_gas_price,\n                        miniblocks.bootloader_code_hash,\n                        miniblocks.default_aa_code_hash,\n                        miniblocks.protocol_version,\n                        l1_batches.fee_account_address as \"fee_account_address?\"\n                    FROM miniblocks\n                    LEFT JOIN l1_batches ON miniblocks.l1_batch_number = l1_batches.number\n                    LEFT JOIN eth_txs_history as commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id AND commit_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id AND prove_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id AND execute_tx.confirmed_at IS NOT NULL)\n                    WHERE miniblocks.number = $1\n                "
  },
  "8d3c9575e3cea3956ba84edc982fcf6e0f7667350e6c2cd6801db8400eabaf9b": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT DISTINCT ON (hashed_key) hashed_key FROM (SELECT * FROM storage_logs WHERE miniblock_number > $1) inn"
  },
  "8dcbaaa6186da52ca8b440b6428826288dc668af5a6fc99ef3078c8bcb38c419": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "depth",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs_fri\n                SET status='queued'\n                WHERE (l1_batch_number, circuit_id, depth) IN\n                      (SELECT prover_jobs_fri.l1_batch_number, prover_jobs_fri.circuit_id, prover_jobs_fri.depth\n                       FROM prover_jobs_fri\n                                JOIN node_aggregation_witness_jobs_fri nawj ON\n                                prover_jobs_fri.l1_batch_number = nawj.l1_batch_number\n                                AND prover_jobs_fri.circuit_id = nawj.circuit_id\n                                AND prover_jobs_fri.depth = nawj.depth\n                       WHERE nawj.status = 'waiting_for_proofs'\n                         AND prover_jobs_fri.status = 'successful'\n                         AND prover_jobs_fri.aggregation_round = 2\n                       GROUP BY prover_jobs_fri.l1_batch_number, prover_jobs_fri.circuit_id, prover_jobs_fri.depth, nawj.number_of_dependent_jobs\n                       HAVING COUNT(*) = nawj.number_of_dependent_jobs)\n                RETURNING l1_batch_number, circuit_id, depth;\n            "
  },
  "8f75c5aa615080fc02b60baccae9c49a81e282a54864ea3eb874ebe10a23eafe": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "UPDATE prover_jobs_fri SET status = 'sent_to_server', updated_at = now() WHERE l1_batch_number = $1"
  },
  "8fa1a390d7b11b60b3352fafc0a8a7fa15bc761b1bb902f5105fd66b2e3087f2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    INSERT INTO scheduler_dependency_tracker_fri\n                        (l1_batch_number, status, created_at, updated_at)\n                    VALUES ($1, 'waiting_for_proofs', now(), now())\n                    ON CONFLICT(l1_batch_number)\n                    DO UPDATE SET updated_at=now()\n                    "
  },
  "8fda20e48c41a9c1e58c8c607222a65e1409f63eba91ac99b2736ca5ebbb5ec6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Numeric",
          "Numeric",
          "Numeric",
          "Jsonb",
          "Int4",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Timestamp"
        ]
      }
    },
    "query": "\n                INSERT INTO transactions\n                (\n                    hash,\n                    is_priority,\n                    initiator_address,\n\n                    gas_limit,\n                    max_fee_per_gas,\n                    gas_per_pubdata_limit,\n\n                    data,\n                    upgrade_id,\n                    contract_address,\n                    l1_block_number,\n                    value,\n\n                    paymaster,\n                    paymaster_input,\n                    tx_format,\n\n                    l1_tx_mint,\n                    l1_tx_refund_recipient,\n\n                    received_at,\n                    created_at,\n                    updated_at\n                )\n                VALUES\n                    (\n                        $1, TRUE, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12,\n                        $13, $14, $15, $16, now(), now()\n                    )\n                ON CONFLICT (hash) DO NOTHING\n                "
  },
  "8fe01036cac5181aabfdc06095da291c4de6b1e0f82f846c37509bb550ef544e": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l1_address FROM tokens WHERE well_known = false"
  },
  "8ff84e800faad1a10eedf537195d37a74a68d8020f286444824d6ccac6727003": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT number, timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, bootloader_code_hash, default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, protocol_version, compressed_state_diffs, system_logs, events_queue_commitment, bootloader_initial_content_commitment FROM l1_batches LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number WHERE eth_prove_tx_id IS NOT NULL AND eth_execute_tx_id IS NULL ORDER BY number LIMIT $1"
  },
  "8ff9d76b4791af1177231661847b6c8879ad625fd11c15de51a16c81d8712129": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "INSERT INTO witness_inputs(l1_batch_number, merkle_tree_paths, merkel_tree_paths_blob_url, status, protocol_version, created_at, updated_at) VALUES ($1, $2, $3, 'waiting_for_artifacts', $4, now(), now()) ON CONFLICT (l1_batch_number) DO NOTHING"
  },
  "9051cc1a715e152afdd0c19739c76666b1a9b134e17601ef9fdf3dec5d2fc561": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT number, timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, bootloader_code_hash, default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, protocol_version, compressed_state_diffs, system_logs, events_queue_commitment, bootloader_initial_content_commitment FROM l1_batches LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number WHERE number BETWEEN $1 AND $2 ORDER BY number LIMIT $3"
  },
  "91db60cc4f98ebcaef1435342607da0a86fe16e20a696cb81a569772d5d5ae88": {
    "describe": {
      "columns": [
        {
          "name": "value",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT value\n                FROM storage_logs\n                WHERE storage_logs.hashed_key = $1 AND storage_logs.miniblock_number <= $2\n                ORDER BY storage_logs.miniblock_number DESC, storage_logs.operation_number DESC\n                LIMIT 1\n                "
  },
  "944c38995043e7b11e6633beb68b5479059ff27b26fd2df171a3d9650f070547": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs_fri\n                SET status = 'queued', updated_at = now(), processing_started_at = now()\n                WHERE (status = 'in_progress' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                OR (status = 'failed' AND attempts < $2)\n                RETURNING id, status, attempts\n                "
  },
  "9554593134830bc197e95f3a7e69844839bfe31bf567934ddbab760017710e39": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "data?",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address?",
          "ordinal": 2,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "SELECT factory_deps.bytecode, transactions.data as \"data?\", transactions.contract_address as \"contract_address?\" FROM ( SELECT * FROM storage_logs WHERE storage_logs.hashed_key = $1 ORDER BY miniblock_number DESC, operation_number DESC LIMIT 1 ) storage_logs JOIN factory_deps ON factory_deps.bytecode_hash = storage_logs.value LEFT JOIN transactions ON transactions.hash = storage_logs.tx_hash WHERE storage_logs.value != $2"
  },
  "957ceda740ffb36740acf1e3fbacf76a2ea7422dd9d76a38d745113359e4b7a6": {
    "describe": {
      "columns": [
        {
          "name": "protocol_version",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT protocol_version FROM l1_batches WHERE number = $1"
  },
  "96623dfb2cb9efa255a54d87d61f748aebaf4e75ee09c05d04535d8c97a95d88": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM contracts_verification_info WHERE address = $1"
  },
  "96b1cd2bb6861064b633d597a4a09d279dbc7bcd7a810a7270da3d7941af0fff": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM (SELECT * FROM storage_logs WHERE storage_logs.hashed_key = $1 ORDER BY storage_logs.miniblock_number DESC, storage_logs.operation_number DESC LIMIT 1) sl WHERE sl.value != $2"
  },
  "96f6d06a49646f93ba1918080ef1efba868d506c6b51ede981e610f1b57bf88b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "DELETE FROM storage WHERE hashed_key = ANY($1)"
  },
  "97d81c27885fda4390ebc9789c6169cb94a449f583f7819ec74286fb0d9f81d5": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "system_logs",
          "ordinal": 35,
          "type_info": "ByteaArray"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 36,
          "type_info": "Bytea"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT number, timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, bootloader_code_hash, default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, protocol_version, system_logs, compressed_state_diffs, events_queue_commitment, bootloader_initial_content_commitment FROM l1_batches LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number WHERE number = $1"
  },
  "987fcbbd716648c7c368462643f13d8001d5c6d197add90613ae21d21fdef79b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "UPDATE prover_jobs_fri SET status = $1, updated_at = now() WHERE id = $2"
  },
  "98c81ee6f73859c6cd6ba54ab438c900dda646b70a700f936e5218d9ba3bd0ec": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        null,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                    SELECT MIN(l1_batch_number) as \"l1_batch_number!\", circuit_id, aggregation_round\n                    FROM prover_jobs_fri\n                    WHERE status IN('queued', 'in_gpu_proof', 'in_progress', 'failed')\n                    GROUP BY circuit_id, aggregation_round\n                "
  },
  "9970bb69f5ca9ab9f103e1547eb40c1d4f5dd3a540ff6f1b9724821350c9501a": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prover_input",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 9,
          "type_info": "Time"
        },
        {
          "name": "aggregation_round",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "result",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "sequence_number",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "attempts",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "proccesed_by",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 17,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int4Array"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE id = (\n                        SELECT id\n                        FROM prover_jobs\n                        WHERE status = 'queued'\n                        AND protocol_version = ANY($1)\n                        ORDER BY aggregation_round DESC, l1_batch_number ASC, id ASC\n                        LIMIT 1\n                        FOR UPDATE\n                        SKIP LOCKED\n                )\n                RETURNING prover_jobs.*\n                "
  },
  "99d331d233d357302ab0cc7e3269ef9e414f0c3111785212660f471e3b4f6a04": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Int4Array",
          "ByteaArray",
          "ByteaArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "NumericArray",
          "JsonbArray",
          "ByteaArray",
          "JsonbArray",
          "Int8Array",
          "NumericArray",
          "ByteaArray",
          "ByteaArray",
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "\n                        UPDATE transactions\n                            SET \n                                hash = data_table.hash,\n                                signature = data_table.signature,\n                                gas_limit = data_table.gas_limit,\n                                max_fee_per_gas = data_table.max_fee_per_gas,\n                                max_priority_fee_per_gas = data_table.max_priority_fee_per_gas,\n                                gas_per_pubdata_limit = data_table.gas_per_pubdata_limit,\n                                input = data_table.input,\n                                data = data_table.data,\n                                tx_format = data_table.tx_format,\n                                miniblock_number = $21,\n                                index_in_block = data_table.index_in_block,\n                                error = NULLIF(data_table.error, ''),\n                                effective_gas_price = data_table.effective_gas_price,\n                                execution_info = data_table.new_execution_info,\n                                refunded_gas = data_table.refunded_gas,\n                                value = data_table.value,\n                                contract_address = data_table.contract_address,\n                                paymaster = data_table.paymaster,\n                                paymaster_input = data_table.paymaster_input,\n                                in_mempool = FALSE,\n                                updated_at = now()\n                        FROM\n                            (\n                                SELECT data_table_temp.* FROM (\n                                    SELECT\n                                        UNNEST($1::bytea[]) AS initiator_address,\n                                        UNNEST($2::int[]) AS nonce,\n                                        UNNEST($3::bytea[]) AS hash,\n                                        UNNEST($4::bytea[]) AS signature,\n                                        UNNEST($5::numeric[]) AS gas_limit,\n                                        UNNEST($6::numeric[]) AS max_fee_per_gas,\n                                        UNNEST($7::numeric[]) AS max_priority_fee_per_gas,\n                                        UNNEST($8::numeric[]) AS gas_per_pubdata_limit,\n                                        UNNEST($9::int[]) AS tx_format,\n                                        UNNEST($10::integer[]) AS index_in_block,\n                                        UNNEST($11::varchar[]) AS error,\n                                        UNNEST($12::numeric[]) AS effective_gas_price,\n                                        UNNEST($13::jsonb[]) AS new_execution_info,\n                                        UNNEST($14::bytea[]) AS input,\n                                        UNNEST($15::jsonb[]) AS data,\n                                        UNNEST($16::bigint[]) as refunded_gas,\n                                        UNNEST($17::numeric[]) as value,\n                                        UNNEST($18::bytea[]) as contract_address,\n                                        UNNEST($19::bytea[]) as paymaster,\n                                        UNNEST($20::bytea[]) as paymaster_input\n                                ) AS data_table_temp\n                                JOIN transactions ON transactions.initiator_address = data_table_temp.initiator_address\n                                    AND transactions.nonce = data_table_temp.nonce\n                                ORDER BY transactions.hash\n                            ) AS data_table\n                        WHERE transactions.initiator_address=data_table.initiator_address\n                        AND transactions.nonce=data_table.nonce\n                    "
  },
  "9a326e8fb44f8ebfdd26d945b73a054fd6802551594b23687d057a3954e24f33": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT attempts FROM basic_witness_input_producer_jobs WHERE l1_batch_number = $1"
  },
  "9aaf98668f384f634860c4acf793ff47be08975e5d09061cc26fd53dea249c55": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO scheduler_witness_jobs\n                        (l1_batch_number, scheduler_witness, scheduler_witness_blob_url, protocol_version, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, $4, 'waiting_for_artifacts', now(), now())\n                    "
  },
  "9b70e9039cdc1a8c8baf9220a9d42a9b1b209ce73f74cccb9e313bcacdc3daf3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Int4",
          "Bytea",
          "Int4",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO prover_jobs (l1_batch_number, circuit_type, sequence_number, prover_input, aggregation_round, circuit_input_blob_url, protocol_version, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, $4, $5, $6, $7, 'queued', now(), now())\n                    ON CONFLICT(l1_batch_number, aggregation_round, sequence_number) DO NOTHING\n                    "
  },
  "9bf32ea710825c1f0560a7eaa89f8f097ad196755ba82d98a729a2b0d34e1aca": {
    "describe": {
      "columns": [
        {
          "name": "successful_limit!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "queued_limit!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "max_block!",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    (SELECT l1_batch_number\n                    FROM prover_jobs\n                    WHERE status NOT IN ('successful', 'skipped')\n                    ORDER BY l1_batch_number\n                    LIMIT 1) as \"successful_limit!\",\n                    \n                    (SELECT l1_batch_number\n                    FROM prover_jobs\n                    WHERE status <> 'queued'\n                    ORDER BY l1_batch_number DESC\n                    LIMIT 1) as \"queued_limit!\",\n\n                    (SELECT MAX(l1_batch_number) as \"max!\" FROM prover_jobs) as \"max_block!\"\n                "
  },
  "9d28c1be3bda0c4fb37567d4a56730e801f48fbb2abad42ea894ebd8ee40412d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int2",
          "Text",
          "Int2",
          "Int4",
          "Int4",
          "Bool",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO prover_jobs_fri (l1_batch_number, circuit_id, circuit_blob_url, aggregation_round, sequence_number, depth, is_node_final_proof, protocol_version, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, $4, $5, $6, $7, $8, 'queued', now(), now())\n                    ON CONFLICT(l1_batch_number, aggregation_round, circuit_id, depth, sequence_number)\n                    DO UPDATE SET updated_at=now()\n                    "
  },
  "a074cd2c23434a8e801c2c0b42e63f1657765aceabd6d8a50ef2d2299bba99ab": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "closed_form_inputs_blob_url",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "status",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "processing_started_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 10,
          "type_info": "Time"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 11,
          "type_info": "Bool"
        },
        {
          "name": "number_of_basic_circuits",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "protocol_version",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "picked_by",
          "ordinal": 14,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs_fri\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now(),\n                    picked_by = $2\n                WHERE id = (\n                    SELECT id\n                    FROM leaf_aggregation_witness_jobs_fri\n                    WHERE status = 'queued'\n                    AND protocol_version = ANY($1)\n                    ORDER BY l1_batch_number ASC, id ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING leaf_aggregation_witness_jobs_fri.*\n                "
  },
  "a0aa877e052e63b1c3df6fc4432eeb44f7f3930f624e66b034baa1c5d0f8bb30": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          }
        ]
      }
    },
    "query": "INSERT INTO basic_witness_input_producer_jobs (l1_batch_number, status, created_at, updated_at) VALUES ($1, $2, now(), now()) ON CONFLICT (l1_batch_number) DO NOTHING"
  },
  "a0b720f4e9a558cb073725ecb62765c27d1635f3099d1850e7269bce8bf0ab36": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "leaf_layer_subqueues_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "aggregation_outputs_blob_url",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batch_number, leaf_layer_subqueues_blob_url, aggregation_outputs_blob_url FROM node_aggregation_witness_jobs\n                    WHERE status='successful'\n                    AND leaf_layer_subqueues_blob_url is NOT NULL\n                    AND aggregation_outputs_blob_url is NOT NULL\n                    AND updated_at < NOW() - INTERVAL '30 days'\n                    LIMIT $1;\n                "
  },
  "a19b7137403c5cdf1be5f5122ce4d297ed661fa8bdb3bc91f8a81fe9da47469e": {
    "describe": {
      "columns": [
        {
          "name": "upgrade_tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n                SELECT upgrade_tx_hash FROM protocol_versions\n                WHERE id = $1\n            "
  },
  "a1a6b52403c1db35c8d83d0a512ac453ecd54b34ec516027d540ee1890b40291": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "INSERT INTO prover_fri_protocol_versions (id, recursion_scheduler_level_vk_hash, recursion_node_level_vk_hash, recursion_leaf_level_vk_hash, recursion_circuits_set_vks_hash, created_at) VALUES ($1, $2, $3, $4, $5, now()) ON CONFLICT(id) DO NOTHING"
  },
  "a39f760d2cd879a78112e57d8611d7099802b03b7cc4933cafb4c47e133ad543": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "topic1",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic2",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "topic3",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "topic4",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "block_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "miniblock_number",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "tx_index_in_block",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_block",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_tx",
          "ordinal": 12,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                        SELECT\n                            address, topic1, topic2, topic3, topic4, value,\n                            Null::bytea as \"block_hash\", Null::bigint as \"l1_batch_number?\",\n                            miniblock_number, tx_hash, tx_index_in_block,\n                            event_index_in_block, event_index_in_tx\n                        FROM events\n                        WHERE tx_hash = $1\n                        ORDER BY miniblock_number ASC, event_index_in_block ASC\n                        "
  },
  "a3d526a5a341618e9784fc81626143a3174709483a527879254ff8e28f210ac3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET eth_execute_tx_id = $1, updated_at = now() WHERE number BETWEEN $2 AND $3"
  },
  "a42626c162a0600b9c7d22dd0d7997fa70cc95296ecc185ff9ae2e03593b07bf": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs_fri\n                SET status='queued'\n                WHERE l1_batch_number = $1\n                AND status != 'successful'\n                AND status != 'in_progress'\n            "
  },
  "a4a14eb42b9acca3f93c67e5760ba700c333b5e9a38c132a3060a94c988e7f13": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "received_at",
          "ordinal": 1,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "SELECT transactions.hash, transactions.received_at FROM transactions LEFT JOIN miniblocks ON miniblocks.number = miniblock_number WHERE received_at > $1 ORDER BY received_at ASC LIMIT $2"
  },
  "a4f240188c1447f5b6dcef33dfcc9d00b105f62a6b4c3949a825bea979954160": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "DELETE FROM basic_witness_input_producer_jobs"
  },
  "a5115658f3a53462a9570fd6676f1931604d1c17a9a2b5f1475519006aaf03ba": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text"
        ]
      }
    },
    "query": "INSERT INTO proof_generation_details (l1_batch_number, status, proof_gen_data_blob_url, created_at, updated_at) VALUES ($1, 'ready_to_be_proven', $2, now(), now()) ON CONFLICT (l1_batch_number) DO NOTHING"
  },
  "a7abde5a53248d6e63aa998acac521194231bbe08140c9c4efa548c4f3ae17fa": {
    "describe": {
      "columns": [
        {
          "name": "max?",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT MAX(operation_number) as \"max?\" FROM storage_logs WHERE miniblock_number = $1"
  },
  "a8b32073a67ad77caab11e73a5cac5aa5b5382648ff95d6787a309eb3f64d434": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "DELETE FROM eth_txs_history WHERE id = $1"
  },
  "a9b1a31def214f8b1441dc3ab720bd270f3991c9f1c7528256276e176d532163": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT l1_batch_number FROM initial_writes WHERE hashed_key = $1"
  },
  "a9d96d6774af2637173d471f02995652cd4c131c05fdcb3d0e1644bcd1aa1809": {
    "describe": {
      "columns": [
        {
          "name": "proof",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "aggregation_result_coords",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT prover_jobs.result as proof, scheduler_witness_jobs.aggregation_result_coords\n                FROM prover_jobs\n                INNER JOIN scheduler_witness_jobs\n                ON prover_jobs.l1_batch_number = scheduler_witness_jobs.l1_batch_number\n                WHERE prover_jobs.l1_batch_number >= $1 AND prover_jobs.l1_batch_number <= $2\n                AND prover_jobs.aggregation_round = 3\n                AND prover_jobs.status = 'successful'\n                "
  },
  "aa279ce3351b30788711be6c65cb99cb14304ac38f8fed6d332237ffafc7c86b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Time",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "UPDATE proof_compression_jobs_fri SET status = $1, updated_at = now(), time_taken = $2, l1_proof_blob_url = $3WHERE l1_batch_number = $4"
  },
  "aa7ae476aed5979227887891e9be995924588aa10ccba7424d6ce58f811eaa02": {
    "describe": {
      "columns": [
        {
          "name": "number!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COALESCE(MAX(number), 0) AS \"number!\" FROM l1_batches WHERE eth_prove_tx_id IS NOT NULL"
  },
  "aacaeff95b9a2988167dde78200d7139ba99edfa30dbcd8a7a57f72efc676477": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number FROM l1_batches LEFT JOIN eth_txs_history AS commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id) WHERE commit_tx.confirmed_at IS NOT NULL ORDER BY number DESC LIMIT 1"
  },
  "ac35fb205c83d82d78983f4c9b47f56d3c91fbb2c95046555c7d60a9a2ebb446": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Int8Array",
          "Int8"
        ]
      }
    },
    "query": "INSERT INTO initial_writes (hashed_key, index, l1_batch_number, created_at, updated_at) SELECT u.hashed_key, u.index, $3, now(), now() FROM UNNEST($1::bytea[], $2::bigint[]) AS u(hashed_key, index)"
  },
  "ad11ec3e628ae6c64ac160d8dd689b2f64033f620e17a31469788b3ce4968ad3": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "priority_fee_per_gas",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "confirmed_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "signed_raw_tx",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "sent_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM eth_txs_history WHERE eth_tx_id = $1 ORDER BY created_at DESC LIMIT 1"
  },
  "ad495160a947cf1bd7343819e723d18c9332bc95cfc2014ed8d04907eff3896e": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs_fri\n                SET status = 'queued', updated_at = now(), processing_started_at = now()\n                WHERE (status = 'in_progress' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                OR (status = 'failed' AND attempts < $2)\n                RETURNING l1_batch_number, status, attempts\n                "
  },
  "ad4f74aa6f131df0243f4fa500ade1b98aa335bd71ed417b02361e2c697e60f8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE scheduler_witness_jobs\n                        SET aggregation_result_coords = $1,\n                            updated_at = now()\n                    WHERE l1_batch_number = $2\n                    "
  },
  "ae072f51b65d0b5212264be9a34027922e5aedef7e4741517ad8104bf5aa79e9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM factory_deps WHERE miniblock_number > $1"
  },
  "aea4e8d1b018836973d252df943a2c1988dd5f3ffc629064b87d25af8cdb8638": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT l1_batch_number, l1_batch_tx_index FROM transactions WHERE hash = $1"
  },
  "af22ad34bde12b8d25eb85da9939d12b7bed6407d732b868eeaf2916568c8646": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs_fri\n                SET status = 'successful', updated_at = now(), time_taken = $1\n                WHERE l1_batch_number = $2\n               "
  },
  "af22b7cc067ac5e9c201514cdf783d61a0802cf788b4d44f8802554afee35bd9": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM contract_verification_requests WHERE status = 'queued'"
  },
  "af75db6b7e42b73ce62b28a7281e1bfa181ee0c80a85d7d8078831db5dcdb699": {
    "describe": {
      "columns": [
        {
          "name": "l1_block_number",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l1_block_number FROM transactions\n                WHERE priority_op_id IS NOT NULL\n                ORDER BY priority_op_id DESC\n                LIMIT 1"
  },
  "b11978a1a31a57fe754d08f7bf547c14e5474786700b5ed7445596568d18543a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "UPDATE eth_txs SET confirmed_eth_tx_history_id = $1 WHERE id = $2"
  },
  "b1478907214ad20dddd4f3846fba4b0ddf1fff63ddb3b95c8999635e77c8b863": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "priority_fee_per_gas",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "confirmed_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "signed_raw_tx",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "sent_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM eth_txs_history WHERE eth_tx_id = $1 ORDER BY created_at DESC"
  },
  "b14997f84d11d7eea89168383195c5579eed1c57bb2b416a749e2863ae6594a5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs_fri\n                SET status ='failed', error= $1, updated_at = now()\n                WHERE id = $2\n               "
  },
  "b14d9a82e6b0a4174dde61642d3abc001cd8cb80d988eb81a685255e3ce920de": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "ByteaArray"
        ]
      }
    },
    "query": "UPDATE miniblocks SET hash = u.hash   FROM UNNEST($1::bigint[], $2::bytea[]) AS u(number, hash) WHERE miniblocks.number = u.number\n        "
  },
  "b250f4cb646081c8c0296a286d3fd921a1aefb310951a1ea25ec0fc533ed32ab": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT * FROM eth_txs WHERE confirmed_eth_tx_history_id IS NULL AND id <= (SELECT COALESCE(MAX(eth_tx_id), 0) FROM eth_txs_history WHERE sent_at_block IS NOT NULL) ORDER BY id"
  },
  "b36acfd014ab3e79b700399cd2663b4e92e14c55278dfd0ba45ee50e7dfffe73": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "DELETE FROM eth_txs WHERE id >= (SELECT MIN(id) FROM eth_txs WHERE has_failed = TRUE)"
  },
  "b3c0070f22ab78bf148aade48f860934c53130e4c88cdb4670d5f57defedd919": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT id, circuit_input_blob_url FROM prover_jobs\n                    WHERE status='successful'\n                    AND circuit_input_blob_url is NOT NULL\n                    AND updated_at < NOW() - INTERVAL '30 days'\n                    LIMIT $1;\n                "
  },
  "b479b7d3334f8d4566c294a44e2adb282fbc66a87be5c248c65211c2a8a07db0": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT number, hash FROM miniblocks WHERE number > $1 ORDER BY number ASC LIMIT $2"
  },
  "b4a3c902646725188f7c79ebac992cdce5896fc6fcc9f485c0cba9d90c4c982c": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * FROM eth_txs WHERE id > (SELECT COALESCE(MAX(eth_tx_id), 0) FROM eth_txs_history) ORDER BY id LIMIT $1"
  },
  "b4c576db7c762103dc6700ded458e996d2e9ef670d7b58b181dbfab02fa426ce": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Numeric",
          "Numeric",
          "Numeric",
          "Jsonb",
          "Int8",
          "Numeric",
          "Numeric",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Timestamp"
        ]
      }
    },
    "query": "\n                INSERT INTO transactions\n                (\n                    hash,\n                    is_priority,\n                    initiator_address,\n\n                    gas_limit,\n                    max_fee_per_gas,\n                    gas_per_pubdata_limit,\n\n                    data,\n                    priority_op_id,\n                    full_fee,\n                    layer_2_tip_fee,\n                    contract_address,\n                    l1_block_number,\n                    value,\n\n                    paymaster,\n                    paymaster_input,\n                    tx_format,\n\n                    l1_tx_mint,\n                    l1_tx_refund_recipient,\n\n                    received_at,\n                    created_at,\n                    updated_at\n                )\n                VALUES\n                    (\n                        $1, TRUE, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12,\n                        $13, $14, $15, $16, $17, $18, now(), now()\n                    )\n                ON CONFLICT (hash) DO NOTHING\n                "
  },
  "b4da918ee3b36b56d95c8834edebe65eb48ebb8270fa1e6ccf73ad354fd71134": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l1_address, l2_address FROM tokens WHERE well_known = true"
  },
  "b6f9874059c57e5e59f3021936437e9ff71a68065dfc19c295d806d7a9aafc93": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "INSERT INTO prover_protocol_versions\n                    (id, timestamp, recursion_scheduler_level_vk_hash, recursion_node_level_vk_hash,\n                        recursion_leaf_level_vk_hash, recursion_circuits_set_vks_hash, verifier_address, created_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, now())\n                "
  },
  "b944df7af612ec911170a43be846eb2f6e27163b0d3983672de2b8d5d60af640": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "UPDATE proof_generation_details SET status = 'picked_by_prover', updated_at = now(), prover_taken_at = now() WHERE l1_batch_number = ( SELECT l1_batch_number FROM proof_generation_details WHERE status = 'ready_to_be_proven' OR (status = 'picked_by_prover' AND prover_taken_at < now() - $1::interval) ORDER BY l1_batch_number ASC LIMIT 1 FOR UPDATE SKIP LOCKED ) RETURNING proof_generation_details.l1_batch_number"
  },
  "bc4433cdfa499830fe6a6a95759c9fbe343ac25b371c7fa980bfd1b0afc86629": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Text"
        ]
      }
    },
    "query": "UPDATE proof_compression_jobs_fri SET status = $1, attempts = attempts + 1, updated_at = now(), processing_started_at = now(), picked_by = $3 WHERE l1_batch_number = ( SELECT l1_batch_number FROM proof_compression_jobs_fri WHERE status = $2 ORDER BY l1_batch_number ASC LIMIT 1 FOR UPDATE SKIP LOCKED ) RETURNING proof_compression_jobs_fri.l1_batch_number"
  },
  "be824de76050461afe29dfd229e524bdf113eab3ca24208782c200531db1c940": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int2",
          "Int2",
          "Int4"
        ]
      }
    },
    "query": "\n                        SELECT id from prover_jobs_fri\n                        WHERE l1_batch_number = $1\n                        AND circuit_id = $2\n                        AND aggregation_round = $3\n                        AND depth = $4\n                        AND status = 'successful'\n                        ORDER BY sequence_number ASC;\n                        "
  },
  "bef58e581dd0b658350dcdc15ebf7cf350cf088b60c916a15889e31ee7534907": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "bytecode_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "SELECT bytecode, bytecode_hash FROM factory_deps WHERE bytecode_hash = ANY($1)"
  },
  "c178e1574d2a16cb90bcc5d5333a4f8dd2a69e0c12b4e7e108a8dcc6000669a5": {
    "describe": {
      "columns": [
        {
          "name": "protocol_version",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT protocol_version FROM miniblocks WHERE number = $1"
  },
  "c1e5f85be88ef0b6ab81daf8dec2011797086a7ec5aeaffe5665ebf9584bf84a": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "scheduler_partial_input_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "status",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 4,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "attempts",
          "ordinal": 8,
          "type_info": "Int2"
        },
        {
          "name": "protocol_version",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "picked_by",
          "ordinal": 10,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs_fri\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now(),\n                    picked_by = $2\n                WHERE l1_batch_number = (\n                    SELECT l1_batch_number\n                    FROM scheduler_witness_jobs_fri\n                    WHERE status = 'queued'\n                    AND protocol_version = ANY($1)\n                    ORDER BY l1_batch_number ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING scheduler_witness_jobs_fri.*\n               "
  },
  "c2cf96a9eb6893c5ba7d9e5418d9f24084ccd87980cb6ee05de1b3bde5c654bd": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray"
        ]
      }
    },
    "query": "\n                        INSERT INTO call_traces (tx_hash, call_trace)\n                        SELECT u.tx_hash, u.call_trace\n                        FROM UNNEST($1::bytea[], $2::bytea[])\n                        AS u(tx_hash, call_trace)\n                        "
  },
  "c3724d96ed4e1c31dd575b911b254ed5a4af4d5b6ad1243c812b37ebde0f6090": {
    "describe": {
      "columns": [
        {
          "name": "storage_refunds",
          "ordinal": 0,
          "type_info": "Int8Array"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT storage_refunds FROM l1_batches WHERE number = $1"
  },
  "c59d052f89ddfc3d2c07be84d6d9837adfbe2cefb10d01e09d31aa5e3364e281": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 6,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "bloom",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 9,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 10,
          "type_info": "Jsonb"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 11,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 15,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 17,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 18,
          "type_info": "ByteaArray"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT number, l1_tx_count, l2_tx_count, timestamp, is_finished, fee_account_address, l2_to_l1_logs, l2_to_l1_messages, bloom, priority_ops_onchain_data, used_contract_hashes, base_fee_per_gas, l1_gas_price, l2_fair_gas_price, bootloader_code_hash, default_aa_code_hash, protocol_version, compressed_state_diffs, system_logs FROM l1_batches WHERE number = $1"
  },
  "c604ee1dd86ac154d67ddb339da5f65ca849887d6a1068623e874f9df00cfdd1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "ByteaArray",
          "Int4Array",
          "VarcharArray",
          "JsonbArray",
          "Int8Array",
          "NumericArray"
        ]
      }
    },
    "query": "\n                        UPDATE transactions\n                            SET\n                                miniblock_number = $1,\n                                index_in_block = data_table.index_in_block,\n                                error = NULLIF(data_table.error, ''),\n                                in_mempool=FALSE,\n                                execution_info = execution_info || data_table.new_execution_info,\n                                refunded_gas = data_table.refunded_gas,\n                                effective_gas_price = data_table.effective_gas_price,\n                                updated_at = now()\n                        FROM\n                            (\n                                SELECT\n                                    UNNEST($2::bytea[]) AS hash,\n                                    UNNEST($3::integer[]) AS index_in_block,\n                                    UNNEST($4::varchar[]) AS error,\n                                    UNNEST($5::jsonb[]) AS new_execution_info,\n                                    UNNEST($6::bigint[]) as refunded_gas,\n                                    UNNEST($7::numeric[]) as effective_gas_price\n                            ) AS data_table\n                        WHERE transactions.hash = data_table.hash\n                    "
  },
  "c6aadc4ec78e30f5775f7a9f866ad02984b78de3e3d1f34c144a4057ff44ea6a": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COUNT(*) FROM eth_txs WHERE has_failed = TRUE"
  },
  "c6cdc9ef18fe20ef530b653c0c24c674dd74aef3701bfb5c6db23d649115f1d4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE witness_inputs_fri\n                SET status = 'successful', updated_at = now(), time_taken = $1\n                WHERE l1_batch_number = $2\n               "
  },
  "c8125b30eb64eebfa4500dc623972bf8771a83b218bd18a51e633d4cf4bf8eb3": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8",
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT bytecode FROM (\n                        SELECT * FROM storage_logs\n                        WHERE\n                            storage_logs.hashed_key = $1 AND\n                            storage_logs.miniblock_number <= $2\n                        ORDER BY\n                            storage_logs.miniblock_number DESC, storage_logs.operation_number DESC\n                        LIMIT 1\n                    ) t\n                    JOIN factory_deps ON value = factory_deps.bytecode_hash\n                    WHERE value != $3\n                "
  },
  "c881cd7018a9f714cdc3388936e363d49bd6ae52467d382d2f2250ab4f11acf9": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT address, key FROM protective_reads WHERE l1_batch_number = $1"
  },
  "c891770305cb3aba4021738e60567d977eac54435c871b5178de7c3c96d2f721": {
    "describe": {
      "columns": [
        {
          "name": "usd_price",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price_updated_at",
          "ordinal": 1,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT usd_price, usd_price_updated_at FROM tokens WHERE l2_address = $1"
  },
  "ca0697232d98066834184318985e6960e180c4f5b98b46ca67ab191b66d343bf": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "UPDATE eth_txs_history SET sent_at_block = $2, sent_at = now() WHERE id = $1 AND sent_at_block IS NULL"
  },
  "ca8fa3521dab5ee985a837572e8625bd5b26bf79f58950698218b28110c29d1f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Int4",
          "Int2",
          "Text",
          "Text",
          "Int2"
        ]
      }
    },
    "query": "\n                    INSERT INTO gpu_prover_queue (instance_host, instance_port, queue_capacity, queue_free_slots, instance_status, specialized_prover_group_id, region, zone, num_gpu, created_at, updated_at)\n                    VALUES (cast($1::text as inet), $2, $3, $3, 'available', $4, $5, $6, $7, now(), now())\n                    ON CONFLICT(instance_host, instance_port, region, zone)\n                    DO UPDATE SET instance_status='available', queue_capacity=$3, queue_free_slots=$3, specialized_prover_group_id=$4, region=$5, zone=$6, num_gpu=$7, updated_at=now()"
  },
  "cc20350af9e837ae6b6160be65f88e6b675f62e207252f91f2ce7dcaaddb12b1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "INSERT INTO protocol_versions (id, timestamp, recursion_scheduler_level_vk_hash, recursion_node_level_vk_hash, recursion_leaf_level_vk_hash, recursion_circuits_set_vks_hash, bootloader_code_hash, default_account_code_hash, verifier_address, upgrade_tx_hash, created_at) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, now())"
  },
  "cd2f668e3febead6b8c5c5dacaf95f0840b9c40f6c8585df93b0541f9b5b1548": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT attempts FROM proof_compression_jobs_fri WHERE l1_batch_number = $1"
  },
  "ce3666b149f7fc62a68139a8efb83ed149c7deace17b8968817941763e45a147": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8",
          "Bytea"
        ]
      }
    },
    "query": "\n                    DELETE FROM tokens \n                    WHERE l2_address IN\n                    (\n                        SELECT substring(key, 12, 20) FROM storage_logs \n                        WHERE storage_logs.address = $1 AND miniblock_number > $2 AND NOT EXISTS (\n                            SELECT 1 FROM storage_logs as s\n                            WHERE\n                                s.hashed_key = storage_logs.hashed_key AND\n                                (s.miniblock_number, s.operation_number) >= (storage_logs.miniblock_number, storage_logs.operation_number) AND\n                                s.value = $3\n                        )\n                    )\n                "
  },
  "cea77fbe02853a7a9b1f7b5ddf2957cb23212ae5ef0f889834d796c35b583542": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM miniblocks WHERE number > $1"
  },
  "cfd2ce8eb6997b7609090b4400e1bc42db577fdd3758248be69d3b5d9d132bf1": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "status!",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT COUNT(*) as \"count!\", circuit_type as \"circuit_type!\", status as \"status!\"\n                FROM prover_jobs\n                WHERE status <> 'skipped' and status <> 'successful' \n                GROUP BY circuit_type, status\n                "
  },
  "d0ff67e7c59684a0e4409726544cf850dbdbb36d038ebbc6a1c5bf0e76b0358c": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM l1_batches"
  },
  "d11ff84327058721c3c36bc3371c3139f41e2a2255f64bbc5108c1876848d8bb": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Int4",
          "Int4",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE gpu_prover_queue\n                SET instance_status = $1, updated_at = now(), queue_free_slots = $4\n                WHERE instance_host = $2::text::inet\n                AND instance_port = $3\n                AND region = $5\n                AND zone = $6\n                "
  },
  "d12724ae2bda6214b68e19dc290281907383926abf5ad471eef89529908b2673": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "sequence_number",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "depth",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "is_node_final_proof",
          "ordinal": 6,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs_fri\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now(),\n                    picked_by = $2\n                WHERE id = (\n                    SELECT id\n                    FROM prover_jobs_fri\n                    WHERE status = 'queued'\n                    AND protocol_version = ANY($1)\n                    ORDER BY aggregation_round DESC, l1_batch_number ASC, id ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING prover_jobs_fri.id, prover_jobs_fri.l1_batch_number, prover_jobs_fri.circuit_id,\n                prover_jobs_fri.aggregation_round, prover_jobs_fri.sequence_number, prover_jobs_fri.depth,\n                prover_jobs_fri.is_node_final_proof\n                "
  },
  "d1c82bd0b3c010569937ad7600760fa0c3aca7c9585bbf9598a5c0515b431b26": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "index",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "SELECT hashed_key, l1_batch_number, index FROM initial_writes WHERE hashed_key = ANY($1::bytea[])"
  },
  "d6709f3ce8f08f988e10a0e0fb5c06db9488834a85066babaf3d56cf212b4ea0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Varchar",
          "Varchar",
          "Int4"
        ]
      }
    },
    "query": "UPDATE tokens SET token_list_name = $2, token_list_symbol = $3,\n                token_list_decimals = $4, well_known = true, updated_at = now()\n                WHERE l1_address = $1\n                "
  },
  "d7060880fe56fd99af7b7ed3f4c7fb9d0858cee30f44c5197821aae83c6c9666": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT id\n                FROM prover_protocol_versions\n                WHERE recursion_circuits_set_vks_hash = $1\n                AND recursion_leaf_level_vk_hash = $2\n                AND recursion_node_level_vk_hash = $3\n                AND recursion_scheduler_level_vk_hash = $4\n               "
  },
  "d8515595d34dca53e50bbd4ed396f6208e33f596195a5ed02fba9e8364ceb33c": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT bytecode FROM factory_deps WHERE bytecode_hash = $1"
  },
  "d8e0bb1a349523077356be101808340eab078979390af7d26c71489b5f303d1b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET skip_proof = TRUE WHERE number = $1"
  },
  "d91a80fdfe140ac71760755a0bb6c29cf4f613dc3fd88df6facd63d7338b8470": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "scheduler_witness_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "final_node_aggregations_blob_url",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batch_number, scheduler_witness_blob_url, final_node_aggregations_blob_url FROM scheduler_witness_jobs\n                    WHERE status='successful'\n                    AND updated_at < NOW() - INTERVAL '30 days'\n                    AND scheduler_witness_blob_url is NOT NULL\n                    AND final_node_aggregations_blob_url is NOT NULL\n                    LIMIT $1;\n                "
  },
  "dba127c0f3023586217bfb214c5d3749e8e7ec3edc0c99cfd970332e31f81cb7": {
    "describe": {
      "columns": [
        {
          "name": "virtual_blocks",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT virtual_blocks FROM miniblocks WHERE number = $1"
  },
  "dc16d0fac093a52480b66dfcb5976fb01e6629e8c982c265f2af1d5000090572": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COUNT(miniblocks.number) FROM miniblocks WHERE l1_batch_number IS NULL"
  },
  "dd330bc075a163974c59ec55ecfddd769d05801963b3e0e840e7f11e7bc6d3e9": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT l1_batch_number FROM witness_inputs WHERE length(merkle_tree_paths) <> 0 ORDER BY l1_batch_number DESC LIMIT $1"
  },
  "dd8aa1c9d4dcea22c9a13cca5ae45e951cf963b0608046b88be40309d7379ec2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Bytea"
        ]
      }
    },
    "query": "UPDATE transactions\n                    SET error = $1, updated_at = now()\n                    WHERE hash = $2"
  },
  "dd8f0bbabcd646457a9174a590c79a45d4f744624a74f79017eacbab6b4f9b0a": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT id FROM protocol_versions"
  },
  "ddb3b38be2b6038b63288961f46ba7d3bb7250caff1146e13c5ee77b6a994ffc": {
    "describe": {
      "columns": [
        {
          "name": "circuit_type",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "result",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int4"
        ]
      }
    },
    "query": "\n                        SELECT circuit_type, result from prover_jobs\n                        WHERE l1_batch_number = $1 AND status = 'successful' AND aggregation_round = $2\n                        ORDER BY sequence_number ASC;\n                        "
  },
  "ddd8b105f5e5cf9db40b14ea47e4ba2b3875f89280019464be34f51605833f1b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Int4",
          "Text"
        ]
      }
    },
    "query": "UPDATE gpu_prover_queue_fri SET instance_status = $1, updated_at = now() WHERE instance_host = $2::text::inet AND instance_port = $3 AND zone = $4\n                "
  },
  "de960625b0fa0b766aacab74473fcd0332a3f7dc356648452a6a63189a8b7cc3": {
    "describe": {
      "columns": [
        {
          "name": "protocol_version",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT protocol_version FROM witness_inputs_fri WHERE l1_batch_number = $1"
  },
  "deaf3789ac968e299fe0e5a7f1c72494af8ecd664da9c901ec9c0c5e7c29bb65": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray",
          "ByteaArray",
          "ByteaArray",
          "ByteaArray"
        ]
      }
    },
    "query": "INSERT INTO storage (hashed_key, address, key, value, tx_hash, created_at, updated_at) SELECT u.hashed_key, u.address, u.key, u.value, u.tx_hash, now(), now() FROM UNNEST ($1::bytea[], $2::bytea[], $3::bytea[], $4::bytea[], $5::bytea[]) AS u(hashed_key, address, key, value, tx_hash) ON CONFLICT (hashed_key) DO UPDATE SET tx_hash = excluded.tx_hash, value = excluded.value, updated_at = now()"
  },
  "df857ee85c600bd90687b2ed91517d91a5dc4de3cd6c15c34119ca52a3321828": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "merkle_tree_paths",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "time_taken",
          "ordinal": 5,
          "type_info": "Time"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "error",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "attempts",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "merkel_tree_paths_blob_url",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 10,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 11,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4",
          "Int8",
          "Int4Array"
        ]
      }
    },
    "query": "\n                UPDATE witness_inputs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE l1_batch_number = (\n                        SELECT l1_batch_number\n                        FROM witness_inputs\n                        WHERE l1_batch_number <= $3\n                        AND\n                        (   status = 'queued'\n                            OR (status = 'in_progress' AND processing_started_at < now() - $1::interval)\n                            OR (status = 'failed' AND attempts < $2)\n                        )\n                        AND protocol_version = ANY($4)\n                        ORDER BY l1_batch_number ASC\n                        LIMIT 1\n                        FOR UPDATE\n                        SKIP LOCKED\n                )\n                RETURNING witness_inputs.*\n               "
  },
  "e03756d19dfdf4cdffa81154e690dc7c36024dad5363e0c5440606a5a50eef53": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bool",
          "Bytea",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET hash = $1, merkle_root_hash = $2, commitment = $3, compressed_repeated_writes = $4, compressed_initial_writes = $5, l2_l1_compressed_messages = $6, l2_l1_merkle_root = $7, zkporter_is_available = $8, parent_hash = $9, rollup_last_leaf_index = $10, aux_data_hash = $11, pass_through_data_hash = $12, meta_parameters_hash = $13, compressed_state_diffs = $14, updated_at = now() WHERE number = $15 AND hash IS NULL"
  },
  "e05a8c74653afc78c892ddfd08e60ab040d2b2f7c4b5ee110988eac2dd0dd90d": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "virtual_blocks",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT timestamp, virtual_blocks FROM miniblocks WHERE number BETWEEN $1 AND $2 ORDER BY number"
  },
  "e3ed9f56d316ac95123df3831ce6e6a1552be8e280ac1f3caf5aa1539275905e": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Text",
          "Text",
          "Text",
          "Text",
          "Bool",
          "Text",
          "Bytea",
          "Bool"
        ]
      }
    },
    "query": "INSERT INTO contract_verification_requests ( contract_address, source_code, contract_name, zk_compiler_version, compiler_version, optimization_used, optimizer_mode, constructor_arguments, is_system, status, created_at, updated_at )\n            VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, 'queued', now(), now()) RETURNING id"
  },
  "e409b39a5e62a3a4ec5d3b6aae4935c13b93129a22ffe6a0b68b5ade1f6082c8": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "SELECT number, hash FROM miniblocks WHERE number >= $1 and protocol_version = $2 ORDER BY number LIMIT $3"
  },
  "e429061bd0f67910ad8676a34f2b89a051a6df3097c8afde81a491c342a10e3a": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "UPDATE basic_witness_input_producer_jobs SET status = $1, attempts = attempts + 1, updated_at = now(), processing_started_at = now() WHERE l1_batch_number = ( SELECT l1_batch_number FROM basic_witness_input_producer_jobs WHERE status = $2 OR (status = $1 AND processing_started_at < now() - $4::interval) OR (status = $3 AND attempts < $5) ORDER BY l1_batch_number ASC LIMIT 1 FOR UPDATE SKIP LOCKED ) RETURNING basic_witness_input_producer_jobs.l1_batch_number"
  },
  "e626aa2efb6ba875a12f2b4e37b0ba8052810e73fa5e2d3280f747f7b89b956f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "UPDATE proof_generation_details SET status='generated', proof_blob_url = $1, updated_at = now() WHERE l1_batch_number = $2"
  },
  "e793a57147bbf31334e9471fa2fd82cc138124c2c34df6d10997556f41ae6bc0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "UPDATE eth_txs SET gas_used = $1, confirmed_eth_tx_history_id = $2 WHERE id = $3"
  },
  "e8988deed66ad9d10be89e89966082aeb920c5dc91eb5fad16bd0d3118708c2e": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'queued', updated_at = now(), processing_started_at = now()\n                WHERE (status = 'in_progress' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                OR (status = 'in_gpu_proof' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                OR (status = 'failed' AND attempts < $2)\n                RETURNING id, status, attempts\n                "
  },
  "e900682a160af90d532da47a1222fc1d7c9962ee8996dbd9b9bb63f13820cf2b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "DELETE FROM transactions WHERE in_mempool = TRUE AND initiator_address = ANY($1)"
  },
  "e9b03a0d79eb40a67eab9bdaac8447fc17922bea89bcc6a89eb8eadf147835fe": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO scheduler_witness_jobs_fri\n                        (l1_batch_number, scheduler_partial_input_blob_url, protocol_version, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, 'waiting_for_proofs', now(), now())\n                    ON CONFLICT(l1_batch_number)\n                    DO UPDATE SET updated_at=now()\n                    "
  },
  "ea17481cab38d370e06e7cf8598daa39faf4414152456aab89695e3133477d3e": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT * FROM transactions\n                WHERE hash = $1\n            "
  },
  "eb95c3daeffd23d35d4e047e3bb8dc44e93492a6d41cf0fd1624d3ea4a2267c9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET predicted_commit_gas_cost = $2, updated_at = now() WHERE number = $1"
  },
  "ed50c609371b4588964e29f8757c41973706710090a80eb025ec263ce3d019b4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Int2",
          "Text"
        ]
      }
    },
    "query": "INSERT INTO gpu_prover_queue_fri (instance_host, instance_port, instance_status, specialized_prover_group_id,  zone, created_at, updated_at) VALUES (cast($1::text as inet), $2, 'available', $3, $4, now(), now()) ON CONFLICT(instance_host, instance_port, zone) DO UPDATE SET instance_status='available', specialized_prover_group_id=$3, zone=$4, updated_at=now()"
  },
  "eda61fd8012aadc27a2952e96d4238bccb21ec47a17e326a7ae9182d5358d733": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT timestamp FROM l1_batches WHERE eth_prove_tx_id IS NULL AND number > 0 ORDER BY number LIMIT 1"
  },
  "ee74b42d1a6a52784124751dae6c7eca3fd36f5a3bb26de56efc2b810da7033a": {
    "describe": {
      "columns": [
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT initial_bootloader_heap_content FROM l1_batches WHERE number = $1"
  },
  "ee7bd820bf35c5c714092494c386eccff25457cff6dc00eb81d9809eaeb95670": {
    "describe": {
      "columns": [
        {
          "name": "is_replaced!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Int8",
          "Bytea",
          "Numeric",
          "Numeric",
          "Numeric",
          "Numeric",
          "Bytea",
          "Jsonb",
          "Int4",
          "Bytea",
          "Numeric",
          "Bytea",
          "Bytea",
          "Int8",
          "Int4",
          "Int4",
          "Timestamp"
        ]
      }
    },
    "query": "\n                INSERT INTO transactions\n                (\n                    hash,\n                    is_priority,\n                    initiator_address,\n                    nonce,\n                    signature,\n                    gas_limit,\n                    max_fee_per_gas,\n                    max_priority_fee_per_gas,\n                    gas_per_pubdata_limit,\n                    input,\n                    data,\n                    tx_format,\n                    contract_address,\n                    value,\n                    paymaster,\n                    paymaster_input,\n                    execution_info,\n                    received_at,\n                    created_at,\n                    updated_at\n                )\n                VALUES\n                    (\n                        $1, FALSE, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15,\n                        jsonb_build_object('gas_used', $16::bigint, 'storage_writes', $17::int, 'contracts_used', $18::int),\n                        $19, now(), now()\n                    )\n                ON CONFLICT\n                    (initiator_address, nonce)\n                DO UPDATE\n                    SET hash=$1,\n                        signature=$4,\n                        gas_limit=$5,\n                        max_fee_per_gas=$6,\n                        max_priority_fee_per_gas=$7,\n                        gas_per_pubdata_limit=$8,\n                        input=$9,\n                        data=$10,\n                        tx_format=$11,\n                        contract_address=$12,\n                        value=$13,\n                        paymaster=$14,\n                        paymaster_input=$15,\n                        execution_info=jsonb_build_object('gas_used', $16::bigint, 'storage_writes', $17::int, 'contracts_used', $18::int),\n                        in_mempool=FALSE,\n                        received_at=$19,\n                        created_at=now(),\n                        updated_at=now(),\n                        error = NULL\n                    WHERE transactions.is_priority = FALSE AND transactions.miniblock_number IS NULL\n                    RETURNING (SELECT hash FROM transactions WHERE transactions.initiator_address = $2 AND transactions.nonce = $3) IS NOT NULL as \"is_replaced!\"\n                "
  },
  "ee87b42383cd6b4f1445e2aa152369fee31a7fea436db8b3b9925a60ac60cd1a": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * FROM transactions WHERE miniblock_number = $1 ORDER BY index_in_block"
  },
  "efc83e42f5d0238b8996a5b311746527289a5a002ff659531a076680127e8eb4": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT hash FROM l1_batches WHERE number = $1"
  },
  "f0c83c517fdf9696a0acf288f061bd00a993e0b2379b667738b6876e2f588043": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs\n                SET status='queued'\n                WHERE l1_batch_number IN\n                      (SELECT prover_jobs.l1_batch_number\n                       FROM prover_jobs\n                                JOIN node_aggregation_witness_jobs nawj ON prover_jobs.l1_batch_number = nawj.l1_batch_number\n                       WHERE nawj.status = 'waiting_for_proofs'\n                         AND prover_jobs.status = 'successful'\n                         AND prover_jobs.aggregation_round = 1\n                       GROUP BY prover_jobs.l1_batch_number, nawj.number_of_leaf_circuits\n                       HAVING COUNT(*) = nawj.number_of_leaf_circuits)\n                RETURNING l1_batch_number;\n            "
  },
  "f1defa140e20b9c250d3212602dc259c0a35598c2e69d1c42746a8fab6dd8d3e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Int4",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE gpu_prover_queue\n                SET instance_status = 'available', updated_at = now(), queue_free_slots = $3\n                WHERE instance_host = $1::text::inet\n                AND instance_port = $2\n                AND instance_status = 'full'\n                AND region = $4\n                AND zone = $5\n                "
  },
  "f365ada84c576a9049551a28f800ca8cb1d0096f3ba1c9edec725e11892a5a6c": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * FROM transactions WHERE l1_batch_number = $1 ORDER BY miniblock_number, index_in_block"
  },
  "f39893caa0ad524eda13ab89539fd61804c9190b3d62f4416de83159c2c189e4": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "UPDATE proof_compression_jobs_fri SET status = 'queued', updated_at = now(), processing_started_at = now() WHERE (status = 'in_progress' AND  processing_started_at <= now() - $1::interval AND attempts < $2) OR (status = 'failed' AND attempts < $2) RETURNING l1_batch_number, status, attempts"
  },
  "f5e3c4b23fa0d0686b400b64c42cf78b2219f0cbcf1c9240b77e4132513e36ef": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 2,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT address, key, value FROM storage_logs WHERE miniblock_number BETWEEN (SELECT MIN(number) FROM miniblocks WHERE l1_batch_number = $1) AND (SELECT MAX(number) FROM miniblocks WHERE l1_batch_number = $1) ORDER BY miniblock_number, operation_number"
  },
  "f69542ca7e27a74d3703f359d9be33cf11c1f066c42754b92fced2af410c4558": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          "Int8",
          "Time",
          "Text",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          }
        ]
      }
    },
    "query": "UPDATE basic_witness_input_producer_jobs SET status = $1, updated_at = now(), time_taken = $3, error = $4 WHERE l1_batch_number = $2 AND status != $5 RETURNING basic_witness_input_producer_jobs.attempts"
  },
  "f78960549e6201527454d060d5b483db032f4df80b4269a624f0309ed9a6a38e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE witness_inputs_fri SET status ='failed', error= $1, updated_at = now()\n                WHERE l1_batch_number = $2\n               "
  },
  "fa006dda8f56abb70afc5ba8b6da631747d17ebd03a37ddb72914c4ed2aeb2f5": {
    "describe": {
      "columns": [
        {
          "name": "trace",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT trace FROM transaction_traces WHERE tx_hash = $1"
  },
  "fa177254ba516ad1588f4f6960be96706d1f43c23ff1d57ba2bc7bc7148bdcac": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "virtual_blocks",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number, timestamp, hash, l1_tx_count, l2_tx_count, base_fee_per_gas, l1_gas_price, l2_fair_gas_price, bootloader_code_hash, default_aa_code_hash, protocol_version, virtual_blocks\n            FROM miniblocks ORDER BY number DESC LIMIT 1"
  },
  "fa2b4316aaef09e96d93b70f96b129ed123951732e01d63f30b4b292d441ea39": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "circuit_1_final_prover_job_id",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "circuit_2_final_prover_job_id",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "circuit_3_final_prover_job_id",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "circuit_4_final_prover_job_id",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "circuit_5_final_prover_job_id",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "circuit_6_final_prover_job_id",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "circuit_7_final_prover_job_id",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "circuit_8_final_prover_job_id",
          "ordinal": 9,
          "type_info": "Int8"
        },
        {
          "name": "circuit_9_final_prover_job_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "circuit_10_final_prover_job_id",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "circuit_11_final_prover_job_id",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "circuit_12_final_prover_job_id",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "circuit_13_final_prover_job_id",
          "ordinal": 14,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 15,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT * FROM scheduler_dependency_tracker_fri\n                WHERE l1_batch_number = $1\n               "
  },
  "fa33d51f8627376832b11bb174354e65e645ee2fb81564a97725518f47ae6f57": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(number) as \"number\" FROM l1_batches"
  },
  "fa6ef06edd04d20ddbdf22a63092222e89bb84d6093b07bda16407811d9c33c0": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM eth_txs WHERE id = $1"
  },
  "ff7ff36b86b0e8d1cd7280aa447baef172cb054ffe7e1d742c59bf09b4f414cb": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM prover_protocol_versions WHERE id = $1"
  },
  "ff9c6a53717f0455089e27018e069809891249555e7ee38393927b2b25555fea": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 6,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "bloom",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 9,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 10,
          "type_info": "Jsonb"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 11,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 15,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 17,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 18,
          "type_info": "ByteaArray"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number, l1_tx_count, l2_tx_count, timestamp, is_finished, fee_account_address, l2_to_l1_logs, l2_to_l1_messages, bloom, priority_ops_onchain_data, used_contract_hashes, base_fee_per_gas, l1_gas_price, l2_fair_gas_price, bootloader_code_hash, default_aa_code_hash, protocol_version, compressed_state_diffs, system_logs FROM l1_batches ORDER BY number DESC LIMIT 1"
  },
  "ffc30c35b713dbde170c0369d5b9f741523778a3f396bd6fa9bfd1705fb4c8ac": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "UPDATE proof_compression_jobs_fri SET status = $1, updated_at = now() WHERE l1_batch_number = $2"
  }
}