{
  "db_name": "PostgreSQL",
  "query": "\n            SELECT\n                miniblocks.number,\n                COALESCE(\n                    miniblocks.l1_batch_number,\n                    (\n                        SELECT\n                            (MAX(number) + 1)\n                        FROM\n                            l1_batches\n                    )\n                ) AS \"l1_batch_number!\",\n                miniblocks.timestamp,\n                miniblocks.l1_tx_count,\n                miniblocks.l2_tx_count,\n                miniblocks.hash AS \"root_hash?\",\n                commit_tx.tx_hash AS \"commit_tx_hash?\",\n                commit_tx.confirmed_at AS \"committed_at?\",\n                commit_tx_data.chain_id AS \"commit_chain_id?\",\n                prove_tx.tx_hash AS \"prove_tx_hash?\",\n                prove_tx.confirmed_at AS \"proven_at?\",\n                prove_tx_data.chain_id AS \"prove_chain_id?\",\n                execute_tx.tx_hash AS \"execute_tx_hash?\",\n                execute_tx.confirmed_at AS \"executed_at?\",\n                execute_tx_data.chain_id AS \"execute_chain_id?\",\n                miniblocks.l1_gas_price,\n                miniblocks.l2_fair_gas_price,\n                miniblocks.fair_pubdata_price,\n                miniblocks.bootloader_code_hash,\n                miniblocks.default_aa_code_hash,\n                miniblocks.protocol_version,\n                miniblocks.fee_account_address\n            FROM\n                miniblocks\n                LEFT JOIN l1_batches ON miniblocks.l1_batch_number = l1_batches.number\n                LEFT JOIN eth_txs_history AS commit_tx ON (\n                    l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id\n                    AND commit_tx.confirmed_at IS NOT NULL\n                )\n                LEFT JOIN eth_txs_history AS prove_tx ON (\n                    l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id\n                    AND prove_tx.confirmed_at IS NOT NULL\n                )\n                LEFT JOIN eth_txs_history AS execute_tx ON (\n                    l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id\n                    AND execute_tx.confirmed_at IS NOT NULL\n                )\n                LEFT JOIN eth_txs AS commit_tx_data ON commit_tx_data.id = commit_tx.eth_tx_id\n                LEFT JOIN eth_txs AS prove_tx_data ON prove_tx_data.id = prove_tx.eth_tx_id\n                LEFT JOIN eth_txs AS execute_tx_data ON execute_tx_data.id = execute_tx.eth_tx_id\n            WHERE\n                miniblocks.number = $1\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "number",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "l1_batch_number!",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "timestamp",
        "type_info": "Int8"
      },
      {
        "ordinal": 3,
        "name": "l1_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 4,
        "name": "l2_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 5,
        "name": "root_hash?",
        "type_info": "Bytea"
      },
      {
        "ordinal": 6,
        "name": "commit_tx_hash?",
        "type_info": "Text"
      },
      {
        "ordinal": 7,
        "name": "committed_at?",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 8,
        "name": "commit_chain_id?",
        "type_info": "Int8"
      },
      {
        "ordinal": 9,
        "name": "prove_tx_hash?",
        "type_info": "Text"
      },
      {
        "ordinal": 10,
        "name": "proven_at?",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 11,
        "name": "prove_chain_id?",
        "type_info": "Int8"
      },
      {
        "ordinal": 12,
        "name": "execute_tx_hash?",
        "type_info": "Text"
      },
      {
        "ordinal": 13,
        "name": "executed_at?",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 14,
        "name": "execute_chain_id?",
        "type_info": "Int8"
      },
      {
        "ordinal": 15,
        "name": "l1_gas_price",
        "type_info": "Int8"
      },
      {
        "ordinal": 16,
        "name": "l2_fair_gas_price",
        "type_info": "Int8"
      },
      {
        "ordinal": 17,
        "name": "fair_pubdata_price",
        "type_info": "Int8"
      },
      {
        "ordinal": 18,
        "name": "bootloader_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 19,
        "name": "default_aa_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 20,
        "name": "protocol_version",
        "type_info": "Int4"
      },
      {
        "ordinal": 21,
        "name": "fee_account_address",
        "type_info": "Bytea"
      }
    ],
    "parameters": {
      "Left": [
        "Int8"
      ]
    },
    "nullable": [
      false,
      null,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      false,
      true,
      true,
      true,
      true,
      false
    ]
  },
  "hash": "1bd90dc7c8fa773bd863a04e6718212a8355798892b77cb47a2d4d3b3e0f630e"
}
