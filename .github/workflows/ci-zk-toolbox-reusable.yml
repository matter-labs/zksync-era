name: Workflow template for CI jobs for Core Components
on:
  workflow_call:

env:
  CLICOLOR: 1
  # We run multiple binaries in parallel, and by default they will try to utilize all the
  # available CPUs. In tests, there is not much CPU-intensive work (rayon), but a lot of
  # async work (tokio), so we prioritize tokio.
  TOKIO_WORKER_THREADS: 4
  RAYON_NUM_THREADS: 2

jobs:
  lint:
    name: lint
    uses: ./.github/workflows/ci-core-lint-reusable.yml

  tests:
    runs-on: [ matterlabs-ci-runner-ultra-performance ]
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          submodules: "recursive"
          fetch-depth: 0


      - name: Setup environment
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo IN_DOCKER=1 >> .env

      - name: Start services
        run: |
          ci_localnet_up
          ci_run sccache --start-server

      - name: Build zk_toolbox
        run: ci_run bash -c "./bin/zkt"

      - name: Create log directories
        run: |
          SERVER_LOGS_DIR=logs/server
          INTEGRATION_TESTS_LOGS_DIR=logs/integration_tests
          INTEGRATION_TESTS_EN_LOGS_DIR=logs/integration_tests/en
          SNAPSHOT_RECOVERY_LOGS_DIR=logs/integration_tests/en
          GENESIS_RECOVERY_LOGS_DIR=logs/integration_tests/en
          EXTERNAL_NODE_LOGS_DIR=logs/external_node
          REVERT_LOGS_DIR=logs/revert
          
          mkdir -p $SERVER_LOGS_DIR
          mkdir -p $INTEGRATION_TESTS_LOGS_DIR
          mkdir -p $INTEGRATION_TESTS_EN_LOGS_DIR
          mkdir -p $SNAPSHOT_RECOVERY_LOGS_DIR
          mkdir -p $GENESIS_RECOVERY_LOGS_DIR
          mkdir -p $EXTERNAL_NODE_LOGS_DIR
          mkdir -p $REVERT_LOGS_DIR
          
          echo "SERVER_LOGS_DIR=$SERVER_LOGS_DIR" >> $GITHUB_ENV
          echo "INTEGRATION_TESTS_LOGS_DIR=$INTEGRATION_TESTS_LOGS_DIR" >> $GITHUB_ENV
          echo "INTEGRATION_TESTS_EN_LOGS_DIR=$INTEGRATION_TESTS_EN_LOGS_DIR" >> $GITHUB_ENV
          echo "SNAPSHOT_RECOVERY_LOGS_DIR=$SNAPSHOT_RECOVERY_LOGS_DIR" >> $GITHUB_ENV
          echo "GENESIS_RECOVERY_LOGS_DIR=$GENESIS_RECOVERY_LOGS_DIR" >> $GITHUB_ENV
          echo "EXTERNAL_NODE_LOGS_DIR=$EXTERNAL_NODE_LOGS_DIR" >> $GITHUB_ENV
          echo "REVERT_LOGS_DIR=$REVERT_LOGS_DIR" >> $GITHUB_ENV

      - name: Initialize ecosystem
        run: |
          ci_run git config --global --add safe.directory /usr/src/zksync
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts/system-contracts
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts

          ci_run zk_inception ecosystem init --deploy-paymaster --deploy-erc20 \
          --deploy-ecosystem --l1-rpc-url=http://localhost:8545 \
          --server-db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --server-db-name=zksync_server_localhost_era \
          --prover-db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --prover-db-name=zksync_prover_localhost_era \
          --ignore-prerequisites --verbose \
          --observability=false

      - name: Read Custom Token address and set as environment variable
        run: |
          address=$(awk -F": " '/tokens:/ {found_tokens=1} found_tokens && /DAI:/ {found_dai=1} found_dai && /address:/ {print $2; exit}' ./configs/erc20.yaml)
          echo "address=$address"
          echo "address=$address" >> $GITHUB_ENV

      - name: Create and initialize Validium chain
        run: |
          ci_run zk_inception chain create \
          --chain-name validium \
          --chain-id sequential \
          --prover-mode no-proofs \
          --wallet-creation localhost \
          --l1-batch-commit-data-generator-mode validium \
          --base-token-address 0x0000000000000000000000000000000000000001 \
          --base-token-price-nominator 1 \
          --base-token-price-denominator 1 \
          --set-as-default false \
          --ignore-prerequisites

          ci_run zk_inception chain init \
          --deploy-paymaster \
          --l1-rpc-url=http://localhost:8545 \
          --server-db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --server-db-name=zksync_server_localhost_validium \
          --prover-db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --prover-db-name=zksync_prover_localhost_validium \
          --port-offset 2000 \
          --chain validium

      - name: Create and initialize chain with Custom Token
        run: |
          ci_run zk_inception chain create \
          --chain-name custom_token \
          --chain-id sequential \
          --prover-mode no-proofs \
          --wallet-creation localhost \
          --l1-batch-commit-data-generator-mode rollup \
          --base-token-address ${{ env.address }} \
          --base-token-price-nominator 3 \
          --base-token-price-denominator 2 \
          --set-as-default false \
          --ignore-prerequisites

          ci_run zk_inception chain init \
          --deploy-paymaster \
          --l1-rpc-url=http://localhost:8545 \
          --server-db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --server-db-name=zksync_server_localhost_custom_token \
          --prover-db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --prover-db-name=zksync_prover_localhost_custom_token \
          --port-offset 3000 \
          --chain custom_token
      
      - name: Create and initialize Consensus chain
        run: |
          ci_run zk_inception chain create \
          --chain-name consensus \
          --chain-id sequential \
          --prover-mode no-proofs \
          --wallet-creation localhost \
          --l1-batch-commit-data-generator-mode validium \
          --base-token-address ${{ env.address }} \
          --base-token-price-nominator 3 \
          --base-token-price-denominator 2 \
          --set-as-default false \
          --ignore-prerequisites

          ci_run zk_inception chain init \
          --deploy-paymaster \
          --l1-rpc-url=http://localhost:8545 \
          --server-db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --server-db-name=zksync_server_localhost_consensus \
          --prover-db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --prover-db-name=zksync_prover_localhost_consensus \
          --port-offset 4000 \
          --chain consensus

      - name: Build test dependencies
        run: |
          ci_run zk_supervisor test build

      - name: Run servers
        run: |
          ci_run zk_inception server --ignore-prerequisites --chain era &> ${{ env.SERVER_LOGS_DIR }}/rollup.log &
          ci_run zk_inception server --ignore-prerequisites --chain validium &> ${{ env.SERVER_LOGS_DIR }}/validium.log &
          ci_run zk_inception server --ignore-prerequisites --chain custom_token &> ${{ env.SERVER_LOGS_DIR }}/custom_token.log &
          ci_run zk_inception server --ignore-prerequisites --chain consensus \
          --components=api,tree,eth,state_keeper,housekeeper,commitment_generator,vm_runner_protective_reads,vm_runner_bwip,vm_playground,da_dispatcher,consensus \
          &> ${{ env.SERVER_LOGS_DIR }}/consensus.log &

          ci_run sleep 5

      - name: Run integration tests
        run: |
          ci_run zk_supervisor test integration --no-deps --ignore-prerequisites --chain era &> ${{ env.INTEGRATION_TESTS_LOGS_DIR }}/rollup.log &
          PID1=$!

          ci_run zk_supervisor test integration --no-deps --ignore-prerequisites --chain validium &> ${{ env.INTEGRATION_TESTS_LOGS_DIR }}/validium.log &
          PID2=$!

          ci_run zk_supervisor test integration --no-deps --ignore-prerequisites --chain custom_token &> ${{ env.INTEGRATION_TESTS_LOGS_DIR }}/custom_token.log &
          PID3=$!

          ci_run zk_supervisor test integration --no-deps --ignore-prerequisites --chain consensus &> ${{ env.INTEGRATION_TESTS_LOGS_DIR }}/consensus.log &
          PID4=$!

          wait $PID1
          wait $PID2
          wait $PID3
          wait $PID4

      - name: Init external nodes
        run: |
          ci_run zk_inception external-node configs --db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --db-name=zksync_en_localhost_era_rollup --l1-rpc-url=http://localhost:8545 --chain era
          ci_run zk_inception external-node init --ignore-prerequisites --chain era 
          
          ci_run zk_inception external-node configs --db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --db-name=zksync_en_localhost_era_validium1 --l1-rpc-url=http://localhost:8545 --chain validium
          ci_run zk_inception external-node init --ignore-prerequisites --chain validium

          ci_run zk_inception external-node configs --db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --db-name=zksync_en_localhost_era_custom_token --l1-rpc-url=http://localhost:8545 --chain custom_token
          ci_run zk_inception external-node init --ignore-prerequisites --chain custom_token

          ci_run zk_inception external-node configs --db-url=postgres://postgres:notsecurepassword@localhost:5432 \
          --db-name=zksync_en_localhost_era_consensus --l1-rpc-url=http://localhost:8545 --chain consensus
          ci_run zk_inception external-node init --ignore-prerequisites --chain consensus

      - name: Run recovery tests (from snapshot)
        run: |

          ci_run zk_supervisor test recovery --snapshot --no-deps --ignore-prerequisites --verbose --chain era &> ${{ env.SNAPSHOT_RECOVERY_LOGS_DIR }}/rollup.log &
          PID1=$!
          
          ci_run zk_supervisor test recovery --snapshot --no-deps --ignore-prerequisites --verbose --chain validium &> ${{ env.SNAPSHOT_RECOVERY_LOGS_DIR }}//validium.log &
          PID2=$!
          
          ci_run zk_supervisor test recovery --snapshot --no-deps --ignore-prerequisites --verbose --chain custom_token &> ${{ env.SNAPSHOT_RECOVERY_LOGS_DIR }}//custom_token.log &
          PID3=$!

          ci_run zk_supervisor test recovery --snapshot --no-deps --ignore-prerequisites --verbose --chain consensus &> ${{ env.SNAPSHOT_RECOVERY_LOGS_DIR }}//consensus.log &
          PID4=$!

          wait $PID1
          wait $PID2
          wait $PID3
          wait $PID4

      - name: Run recovery tests (from genesis)
        run: |
          ci_run zk_supervisor test recovery --no-deps --no-kill --ignore-prerequisites --verbose --chain era &> ${{ env.GENESIS_RECOVERY_LOGS_DIR }}/rollup.log &
          PID1=$!

          ci_run zk_supervisor test recovery --no-deps --no-kill --ignore-prerequisites --verbose --chain validium &> ${{ env.GENESIS_RECOVERY_LOGS_DIR }}/validium.log &
          PID2=$!

          ci_run zk_supervisor test recovery --no-deps --no-kill --ignore-prerequisites --verbose --chain custom_token &> ${{ env.GENESIS_RECOVERY_LOGS_DIR }}/custom_token.log &
          PID3=$!

          ci_run zk_supervisor test recovery --no-deps --no-kill --ignore-prerequisites --verbose --chain consensus &> ${{ env.GENESIS_RECOVERY_LOGS_DIR }}/consensus.log &
          PID4=$!

          wait $PID1
          wait $PID2
          wait $PID3
          wait $PID4

      - name: Run external node server
        run: |
          ci_run zk_inception external-node run --ignore-prerequisites --chain era &> ${{ env.EXTERNAL_NODE_LOGS_DIR }}/rollup.log &
          ci_run zk_inception external-node run --ignore-prerequisites --chain validium &> ${{ env.EXTERNAL_NODE_LOGS_DIR }}/validium.log &
          ci_run zk_inception external-node run --ignore-prerequisites --chain custom_token &> ${{ env.EXTERNAL_NODE_LOGS_DIR }}/custom_token.log &
          ci_run zk_inception external-node run --ignore-prerequisites --chain consensus --enable-consensus &> ${{ env.EXTERNAL_NODE_LOGS_DIR }}/consensus.log &
          ci_run sleep 5

      - name: Run integration tests en
        run: |
          ci_run zk_supervisor test integration --no-deps --ignore-prerequisites --external-node --chain era &> ${{ env.INTEGRATION_TESTS_EN_LOGS_DIR }}/rollup.log &
          PID1=$!

          ci_run zk_supervisor test integration --no-deps --ignore-prerequisites --external-node --chain validium &> ${{ env.INTEGRATION_TESTS_EN_LOGS_DIR }}/validium.log &
          PID2=$!

          ci_run zk_supervisor test integration --no-deps --ignore-prerequisites --external-node --chain custom_token &> ${{ env.INTEGRATION_TESTS_EN_LOGS_DIR }}/custom_token.log &
          PID3=$!

          ci_run zk_supervisor test integration --no-deps --ignore-prerequisites --external-node --chain consensus &> ${{ env.INTEGRATION_TESTS_EN_LOGS_DIR }}/consensus.log &
          PID4=$!

          wait $PID1
          wait $PID2
          wait $PID3
          wait $PID4

      - name: Run revert tests
        run: |
          ci_run killall -INT zksync_server || true
          ci_run killall -INT zksync_external_node || true
          
          ci_run zk_supervisor test revert --no-deps --external-node --no-kill --ignore-prerequisites --chain era &> ${{ env.REVERT_LOGS_DIR }}/rollup.log &
          PID1=$!

          ci_run zk_supervisor test revert --no-deps --external-node --no-kill --ignore-prerequisites --chain validium &> ${{ env.REVERT_LOGS_DIR }}/validium.log &
          PID2=$!

          ci_run zk_supervisor test revert --no-deps --external-node --no-kill --ignore-prerequisites --chain custom_token &> ${{ env.REVERT_LOGS_DIR }}/custom_token.log &
          PID3=$!

          ci_run zk_supervisor test revert --no-deps --external-node --no-kill --ignore-prerequisites --chain consensus &> ${{ env.REVERT_LOGS_DIR }}/consensus.log &
          PID4=$!
          
          wait $PID1
          wait $PID2
          wait $PID3
          wait $PID4


      # Upgrade tests should run last, because as soon as they
      # finish the bootloader will be different
      # TODO make upgrade tests safe to run multiple times
      - name: Run upgrade test
        run: |
          ci_run zk_supervisor test upgrade --no-deps --chain era


      - name: Upload logs
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: always()
        with:
          name: logs
          path: logs
