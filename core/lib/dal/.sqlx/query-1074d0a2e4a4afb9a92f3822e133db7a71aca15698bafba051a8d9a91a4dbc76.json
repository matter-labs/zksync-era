{
  "db_name": "PostgreSQL",
  "query": "\n            WITH\n                mb AS (\n                    SELECT\n                        l1_gas_price,\n                        l2_fair_gas_price,\n                        fair_pubdata_price\n                    FROM\n                        miniblocks\n                    WHERE\n                        l1_batch_number = $1\n                    LIMIT\n                        1\n                )\n            SELECT\n                l1_batches.number,\n                l1_batches.timestamp,\n                l1_batches.l1_tx_count,\n                l1_batches.l2_tx_count,\n                l1_batches.hash AS \"root_hash?\",\n                commit_tx.tx_hash AS \"commit_tx_hash?\",\n                commit_tx.confirmed_at AS \"committed_at?\",\n                prove_tx.tx_hash AS \"prove_tx_hash?\",\n                prove_tx.confirmed_at AS \"proven_at?\",\n                execute_tx.tx_hash AS \"execute_tx_hash?\",\n                execute_tx.confirmed_at AS \"executed_at?\",\n                mb.l1_gas_price,\n                mb.l2_fair_gas_price,\n                mb.fair_pubdata_price,\n                l1_batches.bootloader_code_hash,\n                l1_batches.default_aa_code_hash\n            FROM\n                l1_batches\n                INNER JOIN mb ON TRUE\n                LEFT JOIN eth_txs_history AS commit_tx ON (\n                    l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id\n                    AND commit_tx.confirmed_at IS NOT NULL\n                )\n                LEFT JOIN eth_txs_history AS prove_tx ON (\n                    l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id\n                    AND prove_tx.confirmed_at IS NOT NULL\n                )\n                LEFT JOIN eth_txs_history AS execute_tx ON (\n                    l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id\n                    AND execute_tx.confirmed_at IS NOT NULL\n                )\n            WHERE\n                l1_batches.number = $1\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "number",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "timestamp",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "l1_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 3,
        "name": "l2_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 4,
        "name": "root_hash?",
        "type_info": "Bytea"
      },
      {
        "ordinal": 5,
        "name": "commit_tx_hash?",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "committed_at?",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 7,
        "name": "prove_tx_hash?",
        "type_info": "Text"
      },
      {
        "ordinal": 8,
        "name": "proven_at?",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 9,
        "name": "execute_tx_hash?",
        "type_info": "Text"
      },
      {
        "ordinal": 10,
        "name": "executed_at?",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 11,
        "name": "l1_gas_price",
        "type_info": "Int8"
      },
      {
        "ordinal": 12,
        "name": "l2_fair_gas_price",
        "type_info": "Int8"
      },
      {
        "ordinal": 13,
        "name": "fair_pubdata_price",
        "type_info": "Int8"
      },
      {
        "ordinal": 14,
        "name": "bootloader_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 15,
        "name": "default_aa_code_hash",
        "type_info": "Bytea"
      }
    ],
    "parameters": {
      "Left": [
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      true,
      false,
      true,
      false,
      false,
      true,
      true,
      true
    ]
  },
  "hash": "1074d0a2e4a4afb9a92f3822e133db7a71aca15698bafba051a8d9a91a4dbc76"
}
