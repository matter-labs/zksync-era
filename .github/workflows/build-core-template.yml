name: Build Core images
on:
  workflow_call:
    secrets:
      DOCKERHUB_USER:
        description: "DOCKERHUB_USER"
        required: true
      DOCKERHUB_TOKEN:
        description: "DOCKERHUB_TOKEN"
        required: true
    inputs:
      image_tag:
        description: "Tag of a built image to deploy"
        type: string
        required: true
      image_tag_suffix:
        description: "Optional suffix to override tag name generation"
        type: string
        required: false
      action:
        description: "Action with docker image"
        type: string
        default: "push"
        required: false

jobs:
  build-images:
    name: Build and Push Docker Images
    env:
      image_tag: ${{ inputs.image_tag }}
      IMAGE_TAG_SUFFIX: ${{ inputs.image_tag_suffix }}
    runs-on: [matterlabs-ci-runner]
    strategy:
      matrix:
        component:
          - server-v2
          - external-node
          - contract-verifier
          - cross-external-nodes-checker
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        with:
          submodules: "recursive"

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo CI=1 >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo CI=1 >> .env
          echo IN_DOCKER=1 >> .env

      - name: start-services
        run: |
          echo "IMAGE_TAG_SUFFIX=${{ env.IMAGE_TAG_SUFFIX }}" >> .env
          docker-compose -f docker-compose-runner.yml up -d zk geth postgres
          ci_run sccache --start-server

      - name: init
        run: |
          ci_run git config --global --add safe.directory /usr/src/zksync
          ci_run git config --global --add safe.directory /usr/src/zksync/sdk/binaryen
          ci_run git config --global --add safe.directory /usr/src/zksync/etc/system-contracts
          ci_run git config --global --add safe.directory /usr/src/zksync/contracts
          ci_run zk
          ci_run zk clean --all
          ci_run zk run yarn
          ci_run cp etc/tokens/{test,localhost}.json
          ci_run zk compiler all
          ci_run zk contract build
          ci_run zk f yarn run l2-contracts build
          ci_run curl -LO https://storage.googleapis.com/matterlabs-setup-keys-us/setup-keys/setup_2\^26.key

      - name: login to Docker registries
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          ci_run docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          ci_run gcloud auth configure-docker us-docker.pkg.dev,asia-docker.pkg.dev,europe-docker.pkg.dev -q

      - name: update-images
        env:
          DOCKER_ACTION: ${{ inputs.action }}
          COMPONENT: ${{ matrix.component }}
        run: |
          ci_run rustup default nightly-2023-07-21
          ci_run zk docker $DOCKER_ACTION $COMPONENT -- --public
      - name: Show sccache stats
        if: always()
        run: |
          ci_run sccache --show-stats
          ci_run cat /tmp/sccache_log.txt
