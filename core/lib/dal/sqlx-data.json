{
  "db": "PostgreSQL",
  "00b88ec7fcf40bb18e0018b7c76f6e1df560ab1e8935564355236e90b6147d2f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE scheduler_witness_jobs_fri\n            SET\n                status = 'successful',\n                updated_at = NOW(),\n                time_taken = $1\n            WHERE\n                l1_batch_number = $2\n            "
  },
  "012bed5d34240ed28c331c8515c381d82925556a4801f678b8786235d525d784": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE l1_batches\n                    SET\n                        eth_commit_tx_id = $1,\n                        updated_at = NOW()\n                    WHERE\n                        number BETWEEN $2 AND $3\n                    "
  },
  "015350f8d729ef490553550a68f07703b2581dda4fe3c00be6c5422c78980c4b": {
    "describe": {
      "columns": [
        {
          "name": "max?",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                MAX(id) AS \"max?\"\n            FROM\n                protocol_versions\n            "
  },
  "01ac5343beb09ec5bd45b39d560e57a83f37da8999849377dfad60b44989be39": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "depth",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 5,
          "type_info": "Int2"
        },
        {
          "name": "aggregations_url",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 8,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "number_of_dependent_jobs",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "protocol_version",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "picked_by",
          "ordinal": 14,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE node_aggregation_witness_jobs_fri\n            SET\n                status = 'in_progress',\n                attempts = attempts + 1,\n                updated_at = NOW(),\n                processing_started_at = NOW(),\n                picked_by = $2\n            WHERE\n                id = (\n                    SELECT\n                        id\n                    FROM\n                        node_aggregation_witness_jobs_fri\n                    WHERE\n                        status = 'queued'\n                        AND protocol_version = ANY ($1)\n                    ORDER BY\n                        l1_batch_number ASC,\n                        depth ASC,\n                        id ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                node_aggregation_witness_jobs_fri.*\n            "
  },
  "01e4cde73867da612084c3f6fe882d56bbace9013f1d95ea0926eef1fb48039b": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "factory_deps_filepath",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "storage_logs_filepaths",
          "ordinal": 2,
          "type_info": "TextArray"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                l1_batch_number,\n                factory_deps_filepath,\n                storage_logs_filepaths\n            FROM\n                snapshots\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "01f72dfc1eee6360a8ef7809874a1b4ba7fe355ebc02ea49a054aa073ce324ba": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray"
        ]
      }
    },
    "query": "\n            UPDATE storage\n            SET\n                value = u.value\n            FROM\n                UNNEST($1::bytea[], $2::bytea[]) AS u (key, value)\n            WHERE\n                u.key = hashed_key\n            "
  },
  "02285b8d0bc76c8cfd259872ac24f3670813e5a5356ddcb7ac482a0201d045f7": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "index_in_block",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "block_number!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "error",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "transfer_to?",
          "ordinal": 7,
          "type_info": "Jsonb"
        },
        {
          "name": "execute_contract_address?",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "tx_format?",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "gas_limit",
          "ordinal": 11,
          "type_info": "Numeric"
        },
        {
          "name": "block_hash",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "contract_address?",
          "ordinal": 14,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        null,
        null,
        true,
        false,
        true,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                WITH\n                    sl AS (\n                        SELECT\n                            *\n                        FROM\n                            storage_logs\n                        WHERE\n                            storage_logs.address = $1\n                            AND storage_logs.tx_hash = $2\n                        ORDER BY\n                            storage_logs.miniblock_number DESC,\n                            storage_logs.operation_number DESC\n                        LIMIT\n                            1\n                    )\n                SELECT\n                    transactions.hash AS tx_hash,\n                    transactions.index_in_block AS index_in_block,\n                    transactions.l1_batch_tx_index AS l1_batch_tx_index,\n                    transactions.miniblock_number AS \"block_number!\",\n                    transactions.error AS error,\n                    transactions.effective_gas_price AS effective_gas_price,\n                    transactions.initiator_address AS initiator_address,\n                    transactions.data -> 'to' AS \"transfer_to?\",\n                    transactions.data -> 'contractAddress' AS \"execute_contract_address?\",\n                    transactions.tx_format AS \"tx_format?\",\n                    transactions.refunded_gas AS refunded_gas,\n                    transactions.gas_limit AS gas_limit,\n                    miniblocks.hash AS \"block_hash\",\n                    miniblocks.l1_batch_number AS \"l1_batch_number?\",\n                    sl.key AS \"contract_address?\"\n                FROM\n                    transactions\n                    JOIN miniblocks ON miniblocks.number = transactions.miniblock_number\n                    LEFT JOIN sl ON sl.value != $3\n                WHERE\n                    transactions.hash = $2\n                "
  },
  "026ab7dd7407f10074a2966b5eac2563a3e061bcc6505d8c295b1b2517f85f1b": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                number\n            FROM\n                l1_batches\n                LEFT JOIN eth_txs_history AS prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id)\n            WHERE\n                prove_tx.confirmed_at IS NOT NULL\n            ORDER BY\n                number DESC\n            LIMIT\n                1\n            "
  },
  "03c585c7e9f918e608757496088c7e3b6bdb2a08149d5f443310607d3c78988c": {
    "describe": {
      "columns": [
        {
          "name": "storage_refunds",
          "ordinal": 0,
          "type_info": "Int8Array"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                storage_refunds\n            FROM\n                l1_batches\n            WHERE\n                number = $1\n            "
  },
  "04fbbd198108d2614a3b29fa795994723ebe57b3ed209069bd3db906921ef1a3": {
    "describe": {
      "columns": [
        {
          "name": "min?",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "max?",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                MIN(miniblocks.number) AS \"min?\",\n                MAX(miniblocks.number) AS \"max?\"\n            FROM\n                miniblocks\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "05267e9774056bb0f984918ab861a2ee78eb59628d0429e89b27d185f83512be": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "call_trace",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                call_traces\n            WHERE\n                tx_hash IN (\n                    SELECT\n                        hash\n                    FROM\n                        transactions\n                    WHERE\n                        miniblock_number = $1\n                )\n            "
  },
  "0587fadb4f7a014caddf9e540cd2a1ece830de8777d945d48bd9c796fefb3253": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET\n                    status = $1,\n                    updated_at = NOW()\n                WHERE\n                    id = $2\n                "
  },
  "07310d96fc7e258154ad510684e33d196907ebd599e926d305e5ef9f26afa2fa": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Text",
          "Timestamp"
        ]
      }
    },
    "query": "INSERT INTO eth_txs_history (eth_tx_id, base_fee_per_gas, priority_fee_per_gas, tx_hash, signed_raw_tx, created_at, updated_at, confirmed_at) VALUES ($1, 0, 0, $2, '\\x00', now(), now(), $3) RETURNING id"
  },
  "08024b2ba970d2fdac2a71c9c7c73be42a289d034670ca4e644f5df1e4614ddf": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Int4",
          "Bytea",
          "Int4",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO\n                        prover_jobs (\n                            l1_batch_number,\n                            circuit_type,\n                            sequence_number,\n                            prover_input,\n                            aggregation_round,\n                            circuit_input_blob_url,\n                            protocol_version,\n                            status,\n                            created_at,\n                            updated_at\n                        )\n                    VALUES\n                        ($1, $2, $3, $4, $5, $6, $7, 'queued', NOW(), NOW())\n                    ON CONFLICT (l1_batch_number, aggregation_round, sequence_number) DO NOTHING\n                    "
  },
  "083991abb3f1c2183d1bd1fb2ad4710daa723e2d9a23317c347f6081465c3643": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          "Int8",
          "Time",
          "Text",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          }
        ]
      }
    },
    "query": "\n            UPDATE basic_witness_input_producer_jobs\n            SET\n                status = $1,\n                updated_at = NOW(),\n                time_taken = $3,\n                error = $4\n            WHERE\n                l1_batch_number = $2\n                AND status != $5\n            RETURNING\n                basic_witness_input_producer_jobs.attempts\n            "
  },
  "08e59ed8e2fd1a74e19d8bf0d131e4ee6682a89fb86f3b715a240805d44e6d87": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                proof_generation_details (l1_batch_number, status, proof_gen_data_blob_url, created_at, updated_at)\n            VALUES\n                ($1, 'ready_to_be_proven', $2, NOW(), NOW())\n            ON CONFLICT (l1_batch_number) DO NOTHING\n            "
  },
  "0914f0ad03d6a8c55d287f94917c6f03469d78bf4f45f5fd1eaf37171db2f04a": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                l1_batch_number\n            FROM\n                proof_generation_details\n            WHERE\n                status NOT IN ('generated', 'skipped')\n            ORDER BY\n                l1_batch_number ASC\n            LIMIT\n                1\n            "
  },
  "0a3c928a616b5ebc0b977bd773edcde721ca1c652ae2f8db41fb75cecdecb674": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT COUNT(*) FROM storage_logs WHERE miniblock_number = $1"
  },
  "0a3cb11f5bdcb8da31dbd4e3016fced141fb29dd8b6c32dd2dc3452dc294fe1f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                protocol_versions (\n                    id,\n                    timestamp,\n                    recursion_scheduler_level_vk_hash,\n                    recursion_node_level_vk_hash,\n                    recursion_leaf_level_vk_hash,\n                    recursion_circuits_set_vks_hash,\n                    bootloader_code_hash,\n                    default_account_code_hash,\n                    verifier_address,\n                    upgrade_tx_hash,\n                    created_at\n                )\n            VALUES\n                ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, NOW())\n            "
  },
  "0a53fc3c90a14038c9f3f32c3e2e5f7edcafa4fc6757264a96a46dbf7dd1f9cc": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Numeric",
          "Numeric",
          "Numeric",
          "Jsonb",
          "Int8",
          "Numeric",
          "Numeric",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Timestamp"
        ]
      }
    },
    "query": "\n                INSERT INTO\n                    transactions (\n                        hash,\n                        is_priority,\n                        initiator_address,\n                        gas_limit,\n                        max_fee_per_gas,\n                        gas_per_pubdata_limit,\n                        data,\n                        priority_op_id,\n                        full_fee,\n                        layer_2_tip_fee,\n                        contract_address,\n                        l1_block_number,\n                        value,\n                        paymaster,\n                        paymaster_input,\n                        tx_format,\n                        l1_tx_mint,\n                        l1_tx_refund_recipient,\n                        received_at,\n                        created_at,\n                        updated_at\n                    )\n                VALUES\n                    (\n                        $1,\n                        TRUE,\n                        $2,\n                        $3,\n                        $4,\n                        $5,\n                        $6,\n                        $7,\n                        $8,\n                        $9,\n                        $10,\n                        $11,\n                        $12,\n                        $13,\n                        $14,\n                        $15,\n                        $16,\n                        $17,\n                        $18,\n                        NOW(),\n                        NOW()\n                    )\n                ON CONFLICT (hash) DO NOTHING\n                "
  },
  "0aaefa9d5518ed1a2d8f735435e8048558243ff878b59586eb3a8b22794395d8": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "pubdata_input",
          "ordinal": 39,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                number,\n                l1_batches.timestamp,\n                is_finished,\n                l1_tx_count,\n                l2_tx_count,\n                fee_account_address,\n                bloom,\n                priority_ops_onchain_data,\n                hash,\n                parent_hash,\n                commitment,\n                compressed_write_logs,\n                compressed_contracts,\n                eth_prove_tx_id,\n                eth_commit_tx_id,\n                eth_execute_tx_id,\n                merkle_root_hash,\n                l2_to_l1_logs,\n                l2_to_l1_messages,\n                used_contract_hashes,\n                compressed_initial_writes,\n                compressed_repeated_writes,\n                l2_l1_compressed_messages,\n                l2_l1_merkle_root,\n                l1_gas_price,\n                l2_fair_gas_price,\n                rollup_last_leaf_index,\n                zkporter_is_available,\n                l1_batches.bootloader_code_hash,\n                l1_batches.default_aa_code_hash,\n                base_fee_per_gas,\n                aux_data_hash,\n                pass_through_data_hash,\n                meta_parameters_hash,\n                protocol_version,\n                compressed_state_diffs,\n                system_logs,\n                events_queue_commitment,\n                bootloader_initial_content_commitment,\n                pubdata_input\n            FROM\n                l1_batches\n                LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                JOIN protocol_versions ON protocol_versions.id = l1_batches.protocol_version\n            WHERE\n                eth_commit_tx_id IS NULL\n                AND number != 0\n                AND protocol_versions.bootloader_code_hash = $1\n                AND protocol_versions.default_account_code_hash = $2\n                AND commitment IS NOT NULL\n                AND (\n                    protocol_versions.id = $3\n                    OR protocol_versions.upgrade_tx_hash IS NULL\n                )\n            ORDER BY\n                number\n            LIMIT\n                $4\n            "
  },
  "0bdcf87f6910c7222b621f76f71bc6e326e15dca141050bc9d7dacae98a430e8": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                hash\n            FROM\n                l1_batches\n            WHERE\n                number = $1\n            "
  },
  "0c899c68886f76a232ffac0454cdfbf962636347864fc365fafa46c7a2da5f30": {
    "describe": {
      "columns": [
        {
          "name": "virtual_blocks",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                virtual_blocks\n            FROM\n                miniblocks\n            WHERE\n                number = $1\n            "
  },
  "0c95fbfb3a816bd49fd06e3a4f0a52daa202279bf612a9278f663deb78bc6e41": {
    "describe": {
      "columns": [
        {
          "name": "protocol_version",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                protocol_version\n            FROM\n                l1_batches\n            WHERE\n                number = $1\n            "
  },
  "0d13b8947b1bafa9e5bc6fdc70a986511265c541d81b1d21f0a751ae1399c626": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "instance_host",
          "ordinal": 1,
          "type_info": "Inet"
        },
        {
          "name": "instance_port",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "instance_status",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "specialized_prover_group_id",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "zone",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "processing_started_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE gpu_prover_queue_fri\n            SET\n                instance_status = 'reserved',\n                updated_at = NOW(),\n                processing_started_at = NOW()\n            WHERE\n                id IN (\n                    SELECT\n                        id\n                    FROM\n                        gpu_prover_queue_fri\n                    WHERE\n                        specialized_prover_group_id = $2\n                        AND zone = $3\n                        AND (\n                            instance_status = 'available'\n                            OR (\n                                instance_status = 'reserved'\n                                AND processing_started_at < NOW() - $1::INTERVAL\n                            )\n                        )\n                    ORDER BY\n                        updated_at ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                gpu_prover_queue_fri.*\n            "
  },
  "0e1317c908de3d9b9b87b51802cbe545198d7debecd65dc2165731c8a0c0f508": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    MIN(l1_batch_number) AS \"l1_batch_number!\",\n                    circuit_type\n                FROM\n                    prover_jobs\n                WHERE\n                    aggregation_round = 0\n                    AND (\n                        status = 'queued'\n                        OR status = 'in_progress'\n                        OR status = 'in_gpu_proof'\n                        OR status = 'failed'\n                    )\n                GROUP BY\n                    circuit_type\n                "
  },
  "10959c91f01ce0da196f4c6eaf0661a097308d9f81024fdfef24a14418202730": {
    "describe": {
      "columns": [
        {
          "name": "verification_info",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                verification_info\n            FROM\n                contracts_verification_info\n            WHERE\n                address = $1\n            "
  },
  "11af69fc254e54449b64c086667700a95e4c37a7a18531b3cdf120394cb055b9": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "\n            UPDATE proof_generation_details\n            SET\n                status = 'picked_by_prover',\n                updated_at = NOW(),\n                prover_taken_at = NOW()\n            WHERE\n                l1_batch_number = (\n                    SELECT\n                        l1_batch_number\n                    FROM\n                        proof_generation_details\n                    WHERE\n                        status = 'ready_to_be_proven'\n                        OR (\n                            status = 'picked_by_prover'\n                            AND prover_taken_at < NOW() - $1::INTERVAL\n                        )\n                    ORDER BY\n                        l1_batch_number ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                proof_generation_details.l1_batch_number\n            "
  },
  "12ab208f416e2875f89e558f0d4aff3a06b7a9c1866132d62e4449fa9436c7c4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE node_aggregation_witness_jobs_fri\n            SET\n                status = 'failed',\n                error = $1,\n                updated_at = NOW()\n            WHERE\n                id = $2\n            "
  },
  "12ab8ba692a42f528450f2adf8d263298abc0521734f807fbf45484158b167b2": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    l1_address\n                FROM\n                    tokens\n                WHERE\n                    well_known = FALSE\n                "
  },
  "136569d7eb4037fd77e0fac2246c68e8e15a831f1a45dc3b2240d5c6809d5ef2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "recursion_scheduler_level_vk_hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_node_level_vk_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_leaf_level_vk_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_circuits_set_vks_hash",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "verifier_address",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "created_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                protocol_versions\n            WHERE\n                id = $1\n            "
  },
  "15858168fea6808c6d59d0e6d8f28a20420763a3a22899ad0e5f4b953b615a9e": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                id\n            FROM\n                prover_fri_protocol_versions\n            WHERE\n                recursion_circuits_set_vks_hash = $1\n                AND recursion_leaf_level_vk_hash = $2\n                AND recursion_node_level_vk_hash = $3\n                AND recursion_scheduler_level_vk_hash = $4\n            "
  },
  "15893d68429ba09662ee27935653c17c7a7939195dd2d9aa42512b1479d2ed20": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "last_batch_miniblock?",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "virtual_blocks",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "consensus",
          "ordinal": 10,
          "type_info": "Jsonb"
        },
        {
          "name": "protocol_version!",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address?",
          "ordinal": 12,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        null,
        null,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                miniblocks.number,\n                COALESCE(\n                    miniblocks.l1_batch_number,\n                    (\n                        SELECT\n                            (MAX(number) + 1)\n                        FROM\n                            l1_batches\n                    )\n                ) AS \"l1_batch_number!\",\n                (\n                    SELECT\n                        MAX(m2.number)\n                    FROM\n                        miniblocks m2\n                    WHERE\n                        miniblocks.l1_batch_number = m2.l1_batch_number\n                ) AS \"last_batch_miniblock?\",\n                miniblocks.timestamp,\n                miniblocks.l1_gas_price,\n                miniblocks.l2_fair_gas_price,\n                miniblocks.bootloader_code_hash,\n                miniblocks.default_aa_code_hash,\n                miniblocks.virtual_blocks,\n                miniblocks.hash,\n                miniblocks.consensus,\n                miniblocks.protocol_version AS \"protocol_version!\",\n                l1_batches.fee_account_address AS \"fee_account_address?\"\n            FROM\n                miniblocks\n                LEFT JOIN l1_batches ON miniblocks.l1_batch_number = l1_batches.number\n            WHERE\n                miniblocks.number = $1\n            "
  },
  "1689c212d411ebd99a22210519ea2d505a1aabf52ff4136d2ed1b39c70dd1632": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                transactions\n            WHERE\n                miniblock_number IS NOT NULL\n                AND l1_batch_number IS NULL\n            ORDER BY\n                miniblock_number,\n                index_in_block\n            "
  },
  "16e62660fd14f6d3731e69fa696a36408510bb05c15285dfa7708bc0b044d0c5": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "pubdata_input",
          "ordinal": 39,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                number,\n                l1_batches.timestamp,\n                is_finished,\n                l1_tx_count,\n                l2_tx_count,\n                fee_account_address,\n                bloom,\n                priority_ops_onchain_data,\n                hash,\n                parent_hash,\n                commitment,\n                compressed_write_logs,\n                compressed_contracts,\n                eth_prove_tx_id,\n                eth_commit_tx_id,\n                eth_execute_tx_id,\n                merkle_root_hash,\n                l2_to_l1_logs,\n                l2_to_l1_messages,\n                used_contract_hashes,\n                compressed_initial_writes,\n                compressed_repeated_writes,\n                l2_l1_compressed_messages,\n                l2_l1_merkle_root,\n                l1_gas_price,\n                l2_fair_gas_price,\n                rollup_last_leaf_index,\n                zkporter_is_available,\n                l1_batches.bootloader_code_hash,\n                l1_batches.default_aa_code_hash,\n                base_fee_per_gas,\n                aux_data_hash,\n                pass_through_data_hash,\n                meta_parameters_hash,\n                protocol_version,\n                compressed_state_diffs,\n                system_logs,\n                events_queue_commitment,\n                bootloader_initial_content_commitment,\n                pubdata_input\n            FROM\n                l1_batches\n                LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                JOIN protocol_versions ON protocol_versions.id = l1_batches.protocol_version\n            WHERE\n                eth_commit_tx_id IS NULL\n                AND number != 0\n                AND protocol_versions.bootloader_code_hash = $1\n                AND protocol_versions.default_account_code_hash = $2\n                AND commitment IS NOT NULL\n                AND (\n                    protocol_versions.id = $3\n                    OR protocol_versions.upgrade_tx_hash IS NULL\n                )\n                AND events_queue_commitment IS NOT NULL\n                AND bootloader_initial_content_commitment IS NOT NULL\n            ORDER BY\n                number\n            LIMIT\n                $4\n            "
  },
  "1766c0a21ba5918dd08f4babd8dbfdf10fb1cb43781219586c169fb976204331": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                l1_batch_number\n            FROM\n                initial_writes\n            WHERE\n                hashed_key = $1\n            "
  },
  "1862d3a78e4e9068df1b8ce3bbe9f3f0b5d629fdb5c36ea1bfb93ed246be968e": {
    "describe": {
      "columns": [
        {
          "name": "is_priority",
          "ordinal": 0,
          "type_info": "Bool"
        },
        {
          "name": "initiator_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "gas_limit",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "received_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "miniblock_number",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "error",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 7,
          "type_info": "Numeric"
        },
        {
          "name": "refunded_gas",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "eth_commit_tx_hash?",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "eth_prove_tx_hash?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "eth_execute_tx_hash?",
          "ordinal": 11,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT\n                    transactions.is_priority,\n                    transactions.initiator_address,\n                    transactions.gas_limit,\n                    transactions.gas_per_pubdata_limit,\n                    transactions.received_at,\n                    transactions.miniblock_number,\n                    transactions.error,\n                    transactions.effective_gas_price,\n                    transactions.refunded_gas,\n                    commit_tx.tx_hash AS \"eth_commit_tx_hash?\",\n                    prove_tx.tx_hash AS \"eth_prove_tx_hash?\",\n                    execute_tx.tx_hash AS \"eth_execute_tx_hash?\"\n                FROM\n                    transactions\n                    LEFT JOIN miniblocks ON miniblocks.number = transactions.miniblock_number\n                    LEFT JOIN l1_batches ON l1_batches.number = miniblocks.l1_batch_number\n                    LEFT JOIN eth_txs_history AS commit_tx ON (\n                        l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id\n                        AND commit_tx.confirmed_at IS NOT NULL\n                    )\n                    LEFT JOIN eth_txs_history AS prove_tx ON (\n                        l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id\n                        AND prove_tx.confirmed_at IS NOT NULL\n                    )\n                    LEFT JOIN eth_txs_history AS execute_tx ON (\n                        l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id\n                        AND execute_tx.confirmed_at IS NOT NULL\n                    )\n                WHERE\n                    transactions.hash = $1\n                "
  },
  "18820f4ab0c3d2cc9187c5660f9f50e423eb6134659fe52bcc2b27ad16740c96": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "\n                DELETE FROM transactions\n                WHERE\n                    in_mempool = TRUE\n                    AND initiator_address = ANY ($1)\n                "
  },
  "19314d74e94b610e2da6d728ca37ea964610e131d45f720f7a7b2a130fe9ed89": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Jsonb",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE contract_verification_requests\n            SET\n                status = 'failed',\n                updated_at = NOW(),\n                error = $2,\n                compilation_errors = $3,\n                panic_message = $4\n            WHERE\n                id = $1\n            "
  },
  "19545806b8f772075096e69f8665d98a3d9f7df162ae22a98c3c7620fcd13bd2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "recursion_scheduler_level_vk_hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_node_level_vk_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_leaf_level_vk_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_circuits_set_vks_hash",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "verifier_address",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "created_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                protocol_versions\n            ORDER BY\n                id DESC\n            LIMIT\n                1\n            "
  },
  "19b89495be8aa735db039ccc8a262786c58e54f132588c48f07d9537cf21d3ed": {
    "describe": {
      "columns": [
        {
          "name": "sent_at_block",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT sent_at_block FROM eth_txs_history WHERE eth_tx_id = $1 AND sent_at_block IS NOT NULL ORDER BY created_at ASC LIMIT 1"
  },
  "1ad3bbd791f3ff0d31683bf59187b84c5fd52f0352f0f0e311d054cb9e45b07e": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT DISTINCT\n                ON (hashed_key) hashed_key\n            FROM\n                (\n                    SELECT\n                        *\n                    FROM\n                        storage_logs\n                    WHERE\n                        miniblock_number > $1\n                ) inn\n            "
  },
  "1b4ebbfc96b4fd66ecbe64a6be80a01a6c7cbe9297cbb55d42533fddc18719b6": {
    "describe": {
      "columns": [
        {
          "name": "op_id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    MAX(priority_op_id) AS \"op_id\"\n                FROM\n                    transactions\n                WHERE\n                    is_priority = TRUE\n                "
  },
  "1bc6597117db032b87df33040d61610ffa7f169d560e79e89b99eedf681c6773": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n                INSERT INTO\n                    scheduler_witness_jobs_fri (\n                        l1_batch_number,\n                        scheduler_partial_input_blob_url,\n                        protocol_version,\n                        status,\n                        created_at,\n                        updated_at\n                    )\n                VALUES\n                    ($1, $2, $3, 'waiting_for_proofs', NOW(), NOW())\n                ON CONFLICT (l1_batch_number) DO\n                UPDATE\n                SET\n                    updated_at = NOW()\n                "
  },
  "1c60010ded4e79886890a745a050fa6d65c05d8144bdfd143480834ead4bd8d5": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "contract_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "source_code",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "contract_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "zk_compiler_version",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "compiler_version",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "optimization_used",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "optimizer_mode",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "constructor_arguments",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "is_system",
          "ordinal": 9,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "\n            UPDATE contract_verification_requests\n            SET\n                status = 'in_progress',\n                attempts = attempts + 1,\n                updated_at = NOW(),\n                processing_started_at = NOW()\n            WHERE\n                id = (\n                    SELECT\n                        id\n                    FROM\n                        contract_verification_requests\n                    WHERE\n                        status = 'queued'\n                        OR (\n                            status = 'in_progress'\n                            AND processing_started_at < NOW() - $1::INTERVAL\n                        )\n                    ORDER BY\n                        created_at\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                id,\n                contract_address,\n                source_code,\n                contract_name,\n                zk_compiler_version,\n                compiler_version,\n                optimization_used,\n                optimizer_mode,\n                constructor_arguments,\n                is_system\n            "
  },
  "1c994d418ada78586de829fc2d34d26e48e968c79834858c98b7a7f9dfc81910": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            DELETE FROM l2_to_l1_logs\n            WHERE\n                miniblock_number > $1\n            "
  },
  "1d2cc4b485536af350089cf7950be3b85419fde77038dd3de6c55aa9c55d375c": {
    "describe": {
      "columns": [
        {
          "name": "value!",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l1_address!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "symbol!",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "name!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "usd_price?",
          "ordinal": 6,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                storage.value AS \"value!\",\n                tokens.l1_address AS \"l1_address!\",\n                tokens.l2_address AS \"l2_address!\",\n                tokens.symbol AS \"symbol!\",\n                tokens.name AS \"name!\",\n                tokens.decimals AS \"decimals!\",\n                tokens.usd_price AS \"usd_price?\"\n            FROM\n                storage\n                INNER JOIN tokens ON storage.address = tokens.l2_address\n                OR (\n                    storage.address = $2\n                    AND tokens.l2_address = $3\n                )\n            WHERE\n                storage.hashed_key = ANY ($1)\n                AND storage.value != $4\n            "
  },
  "1d6b698b241cb6c5efd070a98165f6760cfeac185330d1d9c5cdb5b383ed8ed4": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Text",
          "Text",
          "Text",
          "Text",
          "Bool",
          "Text",
          "Bytea",
          "Bool"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                contract_verification_requests (\n                    contract_address,\n                    source_code,\n                    contract_name,\n                    zk_compiler_version,\n                    compiler_version,\n                    optimization_used,\n                    optimizer_mode,\n                    constructor_arguments,\n                    is_system,\n                    status,\n                    created_at,\n                    updated_at\n                )\n            VALUES\n                ($1, $2, $3, $4, $5, $6, $7, $8, $9, 'queued', NOW(), NOW())\n            RETURNING\n                id\n            "
  },
  "1dcb3afb0c1947f92981f61d95c099c4591ce3f8d51f3df99db0165e086f96af": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                bytecode\n            FROM\n                factory_deps\n            WHERE\n                bytecode_hash = $1\n            "
  },
  "1e54aebf94d27244638f04d1d35a5a088ceebfef0228701fcbed8255b74b1050": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    *\n                FROM\n                    transactions\n                WHERE\n                    miniblock_number = $1\n                ORDER BY\n                    index_in_block\n                "
  },
  "1ea37ef1c3df72e5e9c50cfa1675fc7f60618209d0132e7937a1347b7e94b212": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                number\n            FROM\n                l1_batches\n            WHERE\n                eth_prove_tx_id IS NOT NULL\n                AND eth_execute_tx_id IS NULL\n            ORDER BY\n                number\n            LIMIT\n                1\n            "
  },
  "1ed2d7e5e98b15420a21650809d710ce910d0c9138d85cb55e16459c757dea03": {
    "describe": {
      "columns": [
        {
          "name": "protocol_version",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                protocol_version\n            FROM\n                l1_batches\n            ORDER BY\n                number DESC\n            LIMIT\n                1\n            "
  },
  "1f25016c41169aa4ab14db2faf7b2d0413d0f89c309de4b31254c309116ea60c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Varchar",
          "Varchar",
          "Int4"
        ]
      }
    },
    "query": "\n                UPDATE tokens\n                SET\n                    token_list_name = $2,\n                    token_list_symbol = $3,\n                    token_list_decimals = $4,\n                    well_known = TRUE,\n                    updated_at = NOW()\n                WHERE\n                    l1_address = $1\n                "
  },
  "1f46524410ce0f193dc6547499bde995ddddc621ee2149f08f905af2d8aadd03": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Int4Array",
          "ByteaArray",
          "ByteaArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "NumericArray",
          "JsonbArray",
          "ByteaArray",
          "JsonbArray",
          "Int8Array",
          "NumericArray",
          "ByteaArray",
          "ByteaArray",
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE transactions\n                    SET\n                        hash = data_table.hash,\n                        signature = data_table.signature,\n                        gas_limit = data_table.gas_limit,\n                        max_fee_per_gas = data_table.max_fee_per_gas,\n                        max_priority_fee_per_gas = data_table.max_priority_fee_per_gas,\n                        gas_per_pubdata_limit = data_table.gas_per_pubdata_limit,\n                        input = data_table.input,\n                        data = data_table.data,\n                        tx_format = data_table.tx_format,\n                        miniblock_number = $21,\n                        index_in_block = data_table.index_in_block,\n                        error = NULLIF(data_table.error, ''),\n                        effective_gas_price = data_table.effective_gas_price,\n                        execution_info = data_table.new_execution_info,\n                        refunded_gas = data_table.refunded_gas,\n                        value = data_table.value,\n                        contract_address = data_table.contract_address,\n                        paymaster = data_table.paymaster,\n                        paymaster_input = data_table.paymaster_input,\n                        in_mempool = FALSE,\n                        updated_at = NOW()\n                    FROM\n                        (\n                            SELECT\n                                data_table_temp.*\n                            FROM\n                                (\n                                    SELECT\n                                        UNNEST($1::bytea[]) AS initiator_address,\n                                        UNNEST($2::INT[]) AS nonce,\n                                        UNNEST($3::bytea[]) AS hash,\n                                        UNNEST($4::bytea[]) AS signature,\n                                        UNNEST($5::NUMERIC[]) AS gas_limit,\n                                        UNNEST($6::NUMERIC[]) AS max_fee_per_gas,\n                                        UNNEST($7::NUMERIC[]) AS max_priority_fee_per_gas,\n                                        UNNEST($8::NUMERIC[]) AS gas_per_pubdata_limit,\n                                        UNNEST($9::INT[]) AS tx_format,\n                                        UNNEST($10::INTEGER[]) AS index_in_block,\n                                        UNNEST($11::VARCHAR[]) AS error,\n                                        UNNEST($12::NUMERIC[]) AS effective_gas_price,\n                                        UNNEST($13::jsonb[]) AS new_execution_info,\n                                        UNNEST($14::bytea[]) AS input,\n                                        UNNEST($15::jsonb[]) AS data,\n                                        UNNEST($16::BIGINT[]) AS refunded_gas,\n                                        UNNEST($17::NUMERIC[]) AS value,\n                                        UNNEST($18::bytea[]) AS contract_address,\n                                        UNNEST($19::bytea[]) AS paymaster,\n                                        UNNEST($20::bytea[]) AS paymaster_input\n                                ) AS data_table_temp\n                                JOIN transactions ON transactions.initiator_address = data_table_temp.initiator_address\n                                AND transactions.nonce = data_table_temp.nonce\n                            ORDER BY\n                                transactions.hash\n                        ) AS data_table\n                    WHERE\n                        transactions.initiator_address = data_table.initiator_address\n                        AND transactions.nonce = data_table.nonce\n                    "
  },
  "1f75f2d88c1d2496e48b02f374e492cf2545944291dd0d42b937c0d0c7eefd47": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "root_hash?",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "commit_tx_hash?",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "committed_at?",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "prove_tx_hash?",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "proven_at?",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "execute_tx_hash?",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "executed_at?",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 13,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        true,
        false,
        true,
        false,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    l1_batches.number,\n                    l1_batches.timestamp,\n                    l1_batches.l1_tx_count,\n                    l1_batches.l2_tx_count,\n                    l1_batches.hash AS \"root_hash?\",\n                    commit_tx.tx_hash AS \"commit_tx_hash?\",\n                    commit_tx.confirmed_at AS \"committed_at?\",\n                    prove_tx.tx_hash AS \"prove_tx_hash?\",\n                    prove_tx.confirmed_at AS \"proven_at?\",\n                    execute_tx.tx_hash AS \"execute_tx_hash?\",\n                    execute_tx.confirmed_at AS \"executed_at?\",\n                    l1_batches.l1_gas_price,\n                    l1_batches.l2_fair_gas_price,\n                    l1_batches.bootloader_code_hash,\n                    l1_batches.default_aa_code_hash\n                FROM\n                    l1_batches\n                    LEFT JOIN eth_txs_history AS commit_tx ON (\n                        l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id\n                        AND commit_tx.confirmed_at IS NOT NULL\n                    )\n                    LEFT JOIN eth_txs_history AS prove_tx ON (\n                        l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id\n                        AND prove_tx.confirmed_at IS NOT NULL\n                    )\n                    LEFT JOIN eth_txs_history AS execute_tx ON (\n                        l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id\n                        AND execute_tx.confirmed_at IS NOT NULL\n                    )\n                WHERE\n                    l1_batches.number = $1\n                "
  },
  "2003dcf7bc807c7d345368538accd9b0128f82306e27e4c7258116082a54ab95": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "received_at",
          "ordinal": 1,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                transactions.hash,\n                transactions.received_at\n            FROM\n                transactions\n                LEFT JOIN miniblocks ON miniblocks.number = miniblock_number\n            WHERE\n                received_at > $1\n            ORDER BY\n                received_at ASC\n            LIMIT\n                $2\n            "
  },
  "2028ba507f3ccd474f0261e571eb19a3a7feec950cb3e503588cf55d954a493a": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                bytecode\n            FROM\n                factory_deps\n            WHERE\n                miniblock_number <= $1\n            "
  },
  "20f84f9ec21459d8c7ad53241758eeab159533211d2ddbef41e6ff0ba937d04a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE l1_batches\n            SET\n                skip_proof = TRUE\n            WHERE\n                number = $1\n            "
  },
  "23be43bf705d679ca751c89353716065fcad42c6b621efb3a135a16b477dcfd9": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                eth_txs\n            WHERE\n                confirmed_eth_tx_history_id IS NULL\n                AND id <= (\n                    SELECT\n                        COALESCE(MAX(eth_tx_id), 0)\n                    FROM\n                        eth_txs_history\n                    WHERE\n                        sent_at_block IS NOT NULL\n                )\n            ORDER BY\n                id\n            "
  },
  "245dc5bb82cc82df38e4440a7746ca08324bc86a72e4ea85c9c7962a6c8c9e30": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE l1_batches\n                    SET\n                        eth_prove_tx_id = $1,\n                        updated_at = NOW()\n                    WHERE\n                        number BETWEEN $2 AND $3\n                    "
  },
  "24722ee4ced7f03e60b1b5ecaaa5234d536b064951a67d826ac49b7a3a095a1a": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "index",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                hashed_key,\n                INDEX\n            FROM\n                initial_writes\n            WHERE\n                l1_batch_number = $1\n            ORDER BY\n                INDEX\n            "
  },
  "249cb862d44196cb6dc3945e907717b0dd3cec64b0b29f59b273f1c6952e01da": {
    "describe": {
      "columns": [
        {
          "name": "bytecode_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                bytecode_hash\n            FROM\n                factory_deps\n            WHERE\n                miniblock_number > $1\n            "
  },
  "25aad4298d2459ef5aea7c4ea82eda1da000848ed4abf309b68989da33e1ce5a": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "root_hash?",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "commit_tx_hash?",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "committed_at?",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "prove_tx_hash?",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "proven_at?",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "execute_tx_hash?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "executed_at?",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 15,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address?",
          "ordinal": 17,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        null,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        true,
        false,
        false,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    miniblocks.number,\n                    COALESCE(\n                        miniblocks.l1_batch_number,\n                        (\n                            SELECT\n                                (MAX(number) + 1)\n                            FROM\n                                l1_batches\n                        )\n                    ) AS \"l1_batch_number!\",\n                    miniblocks.timestamp,\n                    miniblocks.l1_tx_count,\n                    miniblocks.l2_tx_count,\n                    miniblocks.hash AS \"root_hash?\",\n                    commit_tx.tx_hash AS \"commit_tx_hash?\",\n                    commit_tx.confirmed_at AS \"committed_at?\",\n                    prove_tx.tx_hash AS \"prove_tx_hash?\",\n                    prove_tx.confirmed_at AS \"proven_at?\",\n                    execute_tx.tx_hash AS \"execute_tx_hash?\",\n                    execute_tx.confirmed_at AS \"executed_at?\",\n                    miniblocks.l1_gas_price,\n                    miniblocks.l2_fair_gas_price,\n                    miniblocks.bootloader_code_hash,\n                    miniblocks.default_aa_code_hash,\n                    miniblocks.protocol_version,\n                    l1_batches.fee_account_address AS \"fee_account_address?\"\n                FROM\n                    miniblocks\n                    LEFT JOIN l1_batches ON miniblocks.l1_batch_number = l1_batches.number\n                    LEFT JOIN eth_txs_history AS commit_tx ON (\n                        l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id\n                        AND commit_tx.confirmed_at IS NOT NULL\n                    )\n                    LEFT JOIN eth_txs_history AS prove_tx ON (\n                        l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id\n                        AND prove_tx.confirmed_at IS NOT NULL\n                    )\n                    LEFT JOIN eth_txs_history AS execute_tx ON (\n                        l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id\n                        AND execute_tx.confirmed_at IS NOT NULL\n                    )\n                WHERE\n                    miniblocks.number = $1\n                "
  },
  "26cb272c2a46a267c47681e0f1f07997b7e24682da56f84d812da2b9aeb14ca2": {
    "describe": {
      "columns": [
        {
          "name": "miniblock_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "index_in_block!",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "l1_batch_tx_index!",
          "ordinal": 3,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    miniblock_number AS \"miniblock_number!\",\n                    hash,\n                    index_in_block AS \"index_in_block!\",\n                    l1_batch_tx_index AS \"l1_batch_tx_index!\"\n                FROM\n                    transactions\n                WHERE\n                    l1_batch_number = $1\n                ORDER BY\n                    miniblock_number,\n                    index_in_block\n                "
  },
  "26e0b7eb1871d94ddc98254fece6381a9c4165e2727542eaeef3bbedd13a4f20": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE proof_generation_details\n            SET\n                status = $1,\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $2\n            "
  },
  "2737fea02599cdc163854b1395c42d4ef93ca238fd2fbc9155e6d012d0d1e113": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Bytea"
        ]
      }
    },
    "query": "\n                UPDATE transactions\n                SET\n                    error = $1,\n                    updated_at = NOW()\n                WHERE\n                    hash = $2\n                "
  },
  "2757b30c4641a346eb0226c706223efc18e51e6d4092188e081f4fafe92fe0ef": {
    "describe": {
      "columns": [
        {
          "name": "bootloader_code_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "id",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                bootloader_code_hash,\n                default_account_code_hash,\n                id\n            FROM\n                protocol_versions\n            WHERE\n                timestamp <= $1\n            ORDER BY\n                id DESC\n            LIMIT\n                1\n            "
  },
  "280cf015e40353e2833c0a70b77095596297be0d728a0aa2d9b180fb72de222b": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                attempts\n            FROM\n                basic_witness_input_producer_jobs\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "293258ecb299be5f5e81696d14883f115cd97586bd795ee31f58fc14e56d58cb": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            DELETE FROM events\n            WHERE\n                miniblock_number > $1\n            "
  },
  "2955e976281f9cbd98b7378c5ab52964b268b93c32fd280c49bf9f932884300d": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                timestamp\n            FROM\n                l1_batches\n            WHERE\n                eth_prove_tx_id IS NULL\n                AND number > 0\n            ORDER BY\n                number\n            LIMIT\n                1\n            "
  },
  "2a2469109033ba08591db3647b73595fe783b7b894748d07fed9735c58fb28fb": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                number\n            FROM\n                miniblocks\n            WHERE\n                consensus IS NOT NULL\n            ORDER BY\n                number DESC\n            LIMIT\n                1\n            "
  },
  "2b626262c8003817ee02978f77452554ccfb5b83f00efdc12bed0f60ef439785": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int2",
          "Int2",
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                id\n            FROM\n                prover_jobs_fri\n            WHERE\n                l1_batch_number = $1\n                AND circuit_id = $2\n                AND aggregation_round = $3\n                AND depth = $4\n                AND status = 'successful'\n            ORDER BY\n                sequence_number ASC;\n            "
  },
  "2c827c1c3cfa3552b90d4746c5df45d57f1f8b2558fdb374bf02e84d3c825a23": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                MAX(number) AS \"number\"\n            FROM\n                miniblocks\n            "
  },
  "2d0c2e9ec4187641baef8a33229bffc78d92adb3c1e3ca60b12163e38c67047e": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                COUNT(*) AS \"count!\"\n            FROM\n                contracts_verification_info\n            WHERE\n                address = $1\n            "
  },
  "2d1e0f2e043c193052c9cc20f9efeb5f094160627bc09db4bda2dda9a8c11c44": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Jsonb"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                contracts_verification_info (address, verification_info)\n            VALUES\n                ($1, $2)\n            ON CONFLICT (address) DO\n            UPDATE\n            SET\n                verification_info = $2\n            "
  },
  "2d31fcce581975a82d6156b52e35fb7a093b73727f75e0cb7db9cea480c95f5c": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs_fri\n                SET\n                    status = 'queued',\n                    updated_at = NOW(),\n                    processing_started_at = NOW()\n                WHERE\n                    id IN (\n                        SELECT\n                            id\n                        FROM\n                            prover_jobs_fri\n                        WHERE\n                            (\n                                status = 'in_progress'\n                                AND processing_started_at <= NOW() - $1::INTERVAL\n                                AND attempts < $2\n                            )\n                            OR (\n                                status = 'in_gpu_proof'\n                                AND processing_started_at <= NOW() - $1::INTERVAL\n                                AND attempts < $2\n                            )\n                            OR (\n                                status = 'failed'\n                                AND attempts < $2\n                            )\n                        FOR UPDATE\n                            SKIP LOCKED\n                    )\n                RETURNING\n                    id,\n                    status,\n                    attempts\n                "
  },
  "2d862097cfae49a1fb28ec0a05176085385c3a79d72f49669b4215a9454323c2": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                INDEX\n            FROM\n                initial_writes\n            WHERE\n                l1_batch_number <= $1\n            ORDER BY\n                l1_batch_number DESC,\n                INDEX DESC\n            LIMIT\n                1;\n            "
  },
  "2d87b294817859e42258136b1cb78f42a877039094c3d6354928a03dad29451a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4Array"
        ]
      }
    },
    "query": "\n            DELETE FROM storage_logs\n            WHERE\n                miniblock_number = $1\n                AND operation_number != ALL ($2)\n            "
  },
  "2dd7dbaeb2572404451e78a96f540e73a2778633bbf9d8e591ec912634639af9": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                transactions\n            WHERE\n                miniblock_number = $1\n            ORDER BY\n                index_in_block\n            "
  },
  "2ddba807ac8ec5260bf92c77073eb89c728357c0744f209090824695a5d35fa3": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE transactions\n                SET\n                    l1_batch_number = NULL,\n                    miniblock_number = NULL,\n                    error = NULL,\n                    index_in_block = NULL,\n                    execution_info = '{}'\n                WHERE\n                    miniblock_number > $1\n                RETURNING\n                    hash\n                "
  },
  "2e0ea9434195270cc65cdca1f674d6b3b1d15b818974e4e403f4ac418ed40c2c": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8",
          "Text",
          "Bytea"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                eth_txs_history (\n                    eth_tx_id,\n                    base_fee_per_gas,\n                    priority_fee_per_gas,\n                    tx_hash,\n                    signed_raw_tx,\n                    created_at,\n                    updated_at\n                )\n            VALUES\n                ($1, $2, $3, $4, $5, NOW(), NOW())\n            ON CONFLICT (tx_hash) DO NOTHING\n            RETURNING\n                id\n            "
  },
  "2e5b9ae1b81b0abfe7a962c93b3119a0a60dc9804175b2baf8b45939c74bd583": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "TextArray",
          "Text"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                compiler_versions (VERSION, compiler, created_at, updated_at)\n            SELECT\n                u.version,\n                $2,\n                NOW(),\n                NOW()\n            FROM\n                UNNEST($1::TEXT[]) AS u (VERSION)\n            ON CONFLICT (VERSION, compiler) DO NOTHING\n            "
  },
  "2eb25bfcfc1114de825dc4eeb0605d7d1c9e649663f6e9444c4425821d0a5b71": {
    "describe": {
      "columns": [
        {
          "name": "eth_commit_tx_id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                eth_commit_tx_id\n            FROM\n                l1_batches\n            WHERE\n                number = $1\n            "
  },
  "2eb617f3e34ac5b21f925053a45da2b4afc314a3b3e78b041b44c8a020a0ee12": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "\n                UPDATE transactions\n                SET\n                    in_mempool = FALSE\n                FROM\n                    UNNEST($1::bytea[]) AS s (address)\n                WHERE\n                    transactions.in_mempool = TRUE\n                    AND transactions.initiator_address = s.address\n                "
  },
  "314f7e619a34efa89255a58c89f85d4402ff6005446bbded68c8d3dbca510f37": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int8",
          "Bytea",
          "Int4",
          "Int4",
          "Numeric",
          "Int8",
          "Int8",
          "Int8",
          "Bytea",
          "Bytea",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                miniblocks (\n                    number,\n                    timestamp,\n                    hash,\n                    l1_tx_count,\n                    l2_tx_count,\n                    base_fee_per_gas,\n                    l1_gas_price,\n                    l2_fair_gas_price,\n                    gas_per_pubdata_limit,\n                    bootloader_code_hash,\n                    default_aa_code_hash,\n                    protocol_version,\n                    virtual_blocks,\n                    created_at,\n                    updated_at\n                )\n            VALUES\n                ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, NOW(), NOW())\n            "
  },
  "31f12a8c44124bb2ce31889ac5295f3823926f69cb1d54874878e6d6c301bfd8": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                COUNT(*) AS \"count!\"\n            FROM\n                l1_batches\n            "
  },
  "322d919ff1ef4675623a58af2b0e9ebdda648667d48d6b27ddf155f2fe01d77a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                UPDATE l1_batches\n                SET\n                    commitment = $2,\n                    aux_data_hash = $3,\n                    updated_at = NOW()\n                WHERE\n                    number = $1\n                "
  },
  "3263423b6097fac01eadd978b826b831321c10f91b87cea38dc8a7377da9385e": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    id,\n                    circuit_input_blob_url\n                FROM\n                    prover_jobs\n                WHERE\n                    status = 'successful'\n                    AND circuit_input_blob_url IS NOT NULL\n                    AND updated_at < NOW() - INTERVAL '30 days'\n                LIMIT\n                    $1;\n                "
  },
  "32792c6aee69cb8c8b928a209a3b04ba5868d1897553df85aac15b169ebb0732": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          }
        ]
      }
    },
    "query": "\n            INSERT INTO\n                basic_witness_input_producer_jobs (l1_batch_number, status, created_at, updated_at)\n            VALUES\n                ($1, $2, NOW(), NOW())\n            ON CONFLICT (l1_batch_number) DO NOTHING\n            "
  },
  "33d6be45b246523ad76f9ae512322ff6372f63ecadb504a329499b02e7d3550e": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 1,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs_fri\n                SET\n                    status = 'queued'\n                WHERE\n                    (l1_batch_number, circuit_id) IN (\n                        SELECT\n                            prover_jobs_fri.l1_batch_number,\n                            prover_jobs_fri.circuit_id\n                        FROM\n                            prover_jobs_fri\n                            JOIN leaf_aggregation_witness_jobs_fri lawj ON prover_jobs_fri.l1_batch_number = lawj.l1_batch_number\n                            AND prover_jobs_fri.circuit_id = lawj.circuit_id\n                        WHERE\n                            lawj.status = 'waiting_for_proofs'\n                            AND prover_jobs_fri.status = 'successful'\n                            AND prover_jobs_fri.aggregation_round = 0\n                        GROUP BY\n                            prover_jobs_fri.l1_batch_number,\n                            prover_jobs_fri.circuit_id,\n                            lawj.number_of_basic_circuits\n                        HAVING\n                            COUNT(*) = lawj.number_of_basic_circuits\n                    )\n                RETURNING\n                    l1_batch_number,\n                    circuit_id;\n                "
  },
  "3490fe0b778a03c73111bf8cbf426b0b3185a231bbf0b8b132a1a95bc157e827": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "index",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "\n            SELECT\n                hashed_key,\n                l1_batch_number,\n                INDEX\n            FROM\n                initial_writes\n            WHERE\n                hashed_key = ANY ($1::bytea[])\n            "
  },
  "3502a673e04b57bfde096303d7643092702c835069cc055e01f382bc56681401": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Bytea",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET\n                    status = 'successful',\n                    updated_at = NOW(),\n                    time_taken = $1,\n                    result = $2,\n                    proccesed_by = $3\n                WHERE\n                    id = $4\n                "
  },
  "35b87a3b7db0af87c6a95e9fe7ef9044ae85b579c7051301b40bd5f94df1f530": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs_fri\n                SET\n                    status = 'failed',\n                    error = $1,\n                    updated_at = NOW()\n                WHERE\n                    id = $2\n                "
  },
  "3671f23665664b8d6acf97e4f697e5afa28d855d87ea2f8c93e79c436749068a": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "pubdata_input",
          "ordinal": 39,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    number,\n                    timestamp,\n                    is_finished,\n                    l1_tx_count,\n                    l2_tx_count,\n                    fee_account_address,\n                    bloom,\n                    priority_ops_onchain_data,\n                    hash,\n                    parent_hash,\n                    commitment,\n                    compressed_write_logs,\n                    compressed_contracts,\n                    eth_prove_tx_id,\n                    eth_commit_tx_id,\n                    eth_execute_tx_id,\n                    merkle_root_hash,\n                    l2_to_l1_logs,\n                    l2_to_l1_messages,\n                    used_contract_hashes,\n                    compressed_initial_writes,\n                    compressed_repeated_writes,\n                    l2_l1_compressed_messages,\n                    l2_l1_merkle_root,\n                    l1_gas_price,\n                    l2_fair_gas_price,\n                    rollup_last_leaf_index,\n                    zkporter_is_available,\n                    bootloader_code_hash,\n                    default_aa_code_hash,\n                    base_fee_per_gas,\n                    aux_data_hash,\n                    pass_through_data_hash,\n                    meta_parameters_hash,\n                    protocol_version,\n                    compressed_state_diffs,\n                    system_logs,\n                    events_queue_commitment,\n                    bootloader_initial_content_commitment,\n                    pubdata_input\n                FROM\n                    l1_batches\n                    LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                WHERE\n                    number BETWEEN $1 AND $2\n                ORDER BY\n                    number\n                LIMIT\n                    $3\n                "
  },
  "367ca58514762ffc26fd906c4c441a21691357494c2f9919bfcbcbb0e42315c2": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                COUNT(*) AS \"count!\"\n            FROM\n                miniblocks\n            WHERE\n                number = $1\n                AND consensus IS NOT NULL\n            "
  },
  "373f6339a61c6ac74080f855fcc25dab33355eefdce69255bc7106675b0e5641": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                COUNT(*) AS \"count!\"\n            FROM\n                prover_protocol_versions\n            WHERE\n                id = $1\n            "
  },
  "38a8b00e320b16e99f6ea0e5954e2f7e49cd6600bd3d56cf41795c2c9e082e4c": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                MAX(number) AS \"number\"\n            FROM\n                l1_batches\n            "
  },
  "3b0af308b0ce95a13a4eed40834279601234a489f73d843f2f314252ed4cb8b0": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "\n                SELECT\n                    hashed_key,\n                    value AS \"value!\"\n                FROM\n                    storage\n                WHERE\n                    hashed_key = ANY ($1)\n                "
  },
  "3b3fbcffd2702047045c2f358e8ac77b63879ab97a32eed8392b48cc46116a28": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "\n                DELETE FROM call_traces\n                WHERE\n                    tx_hash = ANY ($1)\n                "
  },
  "3b4d5009ec22f54cc7d305aa11d96ec397767a063dc21aa3add974cb9b070361": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                factory_deps (bytecode_hash, bytecode, miniblock_number, created_at, updated_at)\n            SELECT\n                u.bytecode_hash,\n                u.bytecode,\n                $3,\n                NOW(),\n                NOW()\n            FROM\n                UNNEST($1::bytea[], $2::bytea[]) AS u (bytecode_hash, bytecode)\n            ON CONFLICT (bytecode_hash) DO NOTHING\n            "
  },
  "3c1d5f985be7e378211aa339c2c6387f2f3eda07a630503324bd6576dbdf8231": {
    "describe": {
      "columns": [
        {
          "name": "trace",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT\n                    trace\n                FROM\n                    transaction_traces\n                WHERE\n                    tx_hash = $1\n                "
  },
  "3c3abbf689fa64c6da7de69fd916769dbb04d3a61cf232892236c974660ffe64": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n            UPDATE scheduler_witness_jobs_fri\n            SET\n                status = 'queued',\n                updated_at = NOW(),\n                processing_started_at = NOW()\n            WHERE\n                (\n                    status = 'in_progress'\n                    AND processing_started_at <= NOW() - $1::INTERVAL\n                    AND attempts < $2\n                )\n                OR (\n                    status = 'failed'\n                    AND attempts < $2\n                )\n            RETURNING\n                l1_batch_number,\n                status,\n                attempts\n            "
  },
  "3e170eea3a5ea5c7389c15f76c6489745438eae73a07b577aa25bd08adf95354": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8",
          "Bytea"
        ]
      }
    },
    "query": "\n                DELETE FROM tokens\n                WHERE\n                    l2_address IN (\n                        SELECT\n                            SUBSTRING(key, 12, 20)\n                        FROM\n                            storage_logs\n                        WHERE\n                            storage_logs.address = $1\n                            AND miniblock_number > $2\n                            AND NOT EXISTS (\n                                SELECT\n                                    1\n                                FROM\n                                    storage_logs AS s\n                                WHERE\n                                    s.hashed_key = storage_logs.hashed_key\n                                    AND (s.miniblock_number, s.operation_number) >= (storage_logs.miniblock_number, storage_logs.operation_number)\n                                    AND s.value = $3\n                            )\n                    )\n                "
  },
  "3ec365c5c81f4678a905ae5bbd48b87ead36f593488437c6f67da629ca81e4fa": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE scheduler_witness_jobs_fri\n            SET\n                status = 'queued'\n            WHERE\n                l1_batch_number = $1\n                AND status != 'successful'\n                AND status != 'in_progress'\n            "
  },
  "40c82325e05572db9c3a4ca8cc347617ed18495ef147b3ecfacdd89f54957b6a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                prover_protocol_versions (\n                    id,\n                    timestamp,\n                    recursion_scheduler_level_vk_hash,\n                    recursion_node_level_vk_hash,\n                    recursion_leaf_level_vk_hash,\n                    recursion_circuits_set_vks_hash,\n                    verifier_address,\n                    created_at\n                )\n            VALUES\n                ($1, $2, $3, $4, $5, $6, $7, NOW())\n            "
  },
  "41c9f45d6eb727aafad0d8c18024cee5c602d275bb812022cc8fdabf0a60e151": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "priority_fee_per_gas",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "signed_raw_tx",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 6,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                eth_txs_history.id,\n                eth_txs_history.eth_tx_id,\n                eth_txs_history.tx_hash,\n                eth_txs_history.base_fee_per_gas,\n                eth_txs_history.priority_fee_per_gas,\n                eth_txs_history.signed_raw_tx,\n                eth_txs.nonce\n            FROM\n                eth_txs_history\n                JOIN eth_txs ON eth_txs.id = eth_txs_history.eth_tx_id\n            WHERE\n                eth_txs_history.sent_at_block IS NULL\n                AND eth_txs.confirmed_eth_tx_history_id IS NULL\n            ORDER BY\n                eth_txs_history.id DESC\n            "
  },
  "43c7e352d09f69de1a182196aea4de79b67833f17d252b5b0e8e00cd6e75b5c1": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                MIN(number) AS \"number\"\n            FROM\n                l1_batches\n            "
  },
  "46c4696fff5a4b8cc5cb46b05645da82065836fe17687ffad04126a6a8b2b27c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE leaf_aggregation_witness_jobs_fri\n            SET\n                status = 'successful',\n                updated_at = NOW(),\n                time_taken = $1\n            WHERE\n                id = $2\n            "
  },
  "47c2f23d9209d155f3f32fd21ef7931a02fe5ffaf2c4dc2f1e7a48c0e932c060": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_root_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "miniblock_number",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "miniblock_root_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "last_finished_chunk_id",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "total_chunk_count",
          "ordinal": 5,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                l1_batch_number,\n                l1_batch_root_hash,\n                miniblock_number,\n                miniblock_root_hash,\n                last_finished_chunk_id,\n                total_chunk_count\n            FROM\n                snapshot_recovery\n            "
  },
  "481d3cdb6c9a90843b240dba84377cb8f1340b483faedbbc2b71055aa5451cae": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                MAX(number) AS \"number\"\n            FROM\n                l1_batches\n            WHERE\n                is_finished = TRUE\n            "
  },
  "4cdc90ed409b37b3c1c57bbcca9f82918afa1b0ac410325e4d00cd1c4fdd1e8b": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 6,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "bloom",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 9,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 10,
          "type_info": "Jsonb"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 11,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 15,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 17,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "pubdata_input",
          "ordinal": 19,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                number,\n                l1_tx_count,\n                l2_tx_count,\n                timestamp,\n                is_finished,\n                fee_account_address,\n                l2_to_l1_logs,\n                l2_to_l1_messages,\n                bloom,\n                priority_ops_onchain_data,\n                used_contract_hashes,\n                base_fee_per_gas,\n                l1_gas_price,\n                l2_fair_gas_price,\n                bootloader_code_hash,\n                default_aa_code_hash,\n                protocol_version,\n                compressed_state_diffs,\n                system_logs,\n                pubdata_input\n            FROM\n                l1_batches\n            ORDER BY\n                number DESC\n            LIMIT\n                1\n            "
  },
  "4d263992ed6d5abbd7d3ca43af9d772d8801b0ae673b7173ae08a1fa6cbf67b2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "sequence_number",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "depth",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "is_node_final_proof",
          "ordinal": 6,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE prover_jobs_fri\n            SET\n                status = 'in_progress',\n                attempts = attempts + 1,\n                updated_at = NOW(),\n                processing_started_at = NOW(),\n                picked_by = $2\n            WHERE\n                id = (\n                    SELECT\n                        id\n                    FROM\n                        prover_jobs_fri\n                    WHERE\n                        status = 'queued'\n                        AND protocol_version = ANY ($1)\n                    ORDER BY\n                        aggregation_round DESC,\n                        l1_batch_number ASC,\n                        id ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                prover_jobs_fri.id,\n                prover_jobs_fri.l1_batch_number,\n                prover_jobs_fri.circuit_id,\n                prover_jobs_fri.aggregation_round,\n                prover_jobs_fri.sequence_number,\n                prover_jobs_fri.depth,\n                prover_jobs_fri.is_node_final_proof\n            "
  },
  "4d50dabc25d392e6b9d0dbe0e386ea7ef2c1178b1b0394a17442185b79f2d77d": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "SELECT eth_txs.id FROM eth_txs_history JOIN eth_txs ON eth_txs.confirmed_eth_tx_history_id = eth_txs_history.id WHERE eth_txs_history.tx_hash = $1"
  },
  "4d84bb4e180b7267bee5e3c1f83c6d47e8e1b4b5124c82c1f35d405204fcf783": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "priority_fee_per_gas",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "confirmed_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "signed_raw_tx",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "sent_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                eth_txs_history\n            WHERE\n                eth_tx_id = $1\n            ORDER BY\n                created_at DESC\n            "
  },
  "4d92a133a36afd682a84fbfd75aafca34d61347e0e2e29fb07ca3d1b8b1f309c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                prover_fri_protocol_versions (\n                    id,\n                    recursion_scheduler_level_vk_hash,\n                    recursion_node_level_vk_hash,\n                    recursion_leaf_level_vk_hash,\n                    recursion_circuits_set_vks_hash,\n                    created_at\n                )\n            VALUES\n                ($1, $2, $3, $4, $5, NOW())\n            ON CONFLICT (id) DO NOTHING\n            "
  },
  "4e2cb66131a524d1bd628424d0c0735d7f9b0b5820ae3a07467d2e76cd6280f9": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "factory_deps_filepath",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "storage_logs_filepaths",
          "ordinal": 2,
          "type_info": "TextArray"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                l1_batch_number,\n                factory_deps_filepath,\n                storage_logs_filepaths\n            FROM\n                snapshots\n            "
  },
  "4f9b84e4ee54902edb3738ec111268d1266a05f4d931dd874baceedf5444efa4": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "aggregation_round",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    MAX(l1_batch_number) AS \"l1_batch_number!\",\n                    aggregation_round\n                FROM\n                    prover_jobs\n                WHERE\n                    status = 'successful'\n                GROUP BY\n                    aggregation_round\n                "
  },
  "525123d4ec2b427f1c171f30d0937d8d542b4f14cf560972c005ab3cc13d1f63": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                hash\n            FROM\n                miniblocks\n            WHERE\n                number BETWEEN $1 AND $2\n            ORDER BY\n                number\n            "
  },
  "532a80b0873871896dd318beba5ec427a099492905a1feee512dc43f39d10047": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n            UPDATE eth_txs_history\n            SET\n                sent_at_block = $2,\n                sent_at = NOW()\n            WHERE\n                id = $1\n                AND sent_at_block IS NULL\n            "
  },
  "534822a226068cde83ad8c30b569a8f447824a5ab466bb6eea1710e8aeaa2c56": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE proof_compression_jobs_fri\n            SET\n                status = $1,\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $2\n            "
  },
  "53c04fd528752c0e0ef7ffa1f68a7ea81d8d10c76bbae540013667e13230e2ea": {
    "describe": {
      "columns": [
        {
          "name": "fee_account_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                fee_account_address\n            FROM\n                l1_batches\n            WHERE\n                number = $1\n            "
  },
  "53f78fdee39b113d2f55f6f951bd94f28b7b2b60d551d552a9b0bab1f1791e39": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                attempts\n            FROM\n                leaf_aggregation_witness_jobs_fri\n            WHERE\n                id = $1\n            "
  },
  "5503575d9377785894de6cf6139a8d4768c6a803a1a90889e5a1b8254c315231": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "INSERT INTO eth_txs (raw_tx, nonce, tx_type, contract_address, predicted_gas_cost, created_at, updated_at) VALUES ('\\x00', 0, $1, '', 0, now(), now()) RETURNING id"
  },
  "556f9b9e82d3a9399660dfa4bbf252f26335699a4e7f0347d7e894320245271d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Jsonb"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                events_queue (l1_batch_number, serialized_events_queue)\n            VALUES\n                ($1, $2)\n            "
  },
  "55b0b4c569c0aaf9741afc85400ecd50a04799ffd36be0e17c56f47fcdbc8f60": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            DELETE FROM l1_batches\n            WHERE\n                number > $1\n            "
  },
  "5659480e5d79dab3399e35539b240e7eb9f598999c28015a504605f88bf84b33": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                eth_txs\n            WHERE\n                id > (\n                    SELECT\n                        COALESCE(MAX(eth_tx_id), 0)\n                    FROM\n                        eth_txs_history\n                )\n            ORDER BY\n                id\n            LIMIT\n                $1\n            "
  },
  "5821f1446983260168cec366af26009503182c300877e74a8539f231050e6f85": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE witness_inputs_fri\n            SET\n                status = $1,\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $2\n            "
  },
  "58aed39245c72d231b268ce83105bb2036d21f60d4c6934f9145730ac35c04de": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                l1_batch_number\n            FROM\n                proof_generation_details\n            WHERE\n                status = 'ready_to_be_proven'\n            ORDER BY\n                l1_batch_number ASC\n            LIMIT\n                1\n            "
  },
  "59cb0dd78fadc121e2b1ebbc8a063f089c91aead2bc9abb284697e65840f1e8f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Numeric",
          "Timestamp"
        ]
      }
    },
    "query": "\n                UPDATE tokens\n                SET\n                    usd_price = $2,\n                    usd_price_updated_at = $3,\n                    updated_at = NOW()\n                WHERE\n                    l1_address = $1\n                "
  },
  "5aaed2a975042cc9b7b9d88e5fd5db07667280abef27cc73159d2fd9c95b209b": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "pubdata_input",
          "ordinal": 39,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT\n                        number,\n                        timestamp,\n                        is_finished,\n                        l1_tx_count,\n                        l2_tx_count,\n                        fee_account_address,\n                        bloom,\n                        priority_ops_onchain_data,\n                        hash,\n                        parent_hash,\n                        commitment,\n                        compressed_write_logs,\n                        compressed_contracts,\n                        eth_prove_tx_id,\n                        eth_commit_tx_id,\n                        eth_execute_tx_id,\n                        merkle_root_hash,\n                        l2_to_l1_logs,\n                        l2_to_l1_messages,\n                        used_contract_hashes,\n                        compressed_initial_writes,\n                        compressed_repeated_writes,\n                        l2_l1_compressed_messages,\n                        l2_l1_merkle_root,\n                        l1_gas_price,\n                        l2_fair_gas_price,\n                        rollup_last_leaf_index,\n                        zkporter_is_available,\n                        bootloader_code_hash,\n                        default_aa_code_hash,\n                        base_fee_per_gas,\n                        aux_data_hash,\n                        pass_through_data_hash,\n                        meta_parameters_hash,\n                        protocol_version,\n                        compressed_state_diffs,\n                        system_logs,\n                        events_queue_commitment,\n                        bootloader_initial_content_commitment,\n                        pubdata_input\n                    FROM\n                        l1_batches\n                        LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                    WHERE\n                        eth_prove_tx_id IS NOT NULL\n                        AND eth_execute_tx_id IS NULL\n                    ORDER BY\n                        number\n                    LIMIT\n                        $1\n                    "
  },
  "5c39f043c9b36693b0a845eb36549374a2d931e62615bc7e6ecd0af957b42a13": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "virtual_blocks",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                number,\n                timestamp,\n                hash,\n                l1_tx_count,\n                l2_tx_count,\n                base_fee_per_gas,\n                l1_gas_price,\n                l2_fair_gas_price,\n                bootloader_code_hash,\n                default_aa_code_hash,\n                protocol_version,\n                virtual_blocks\n            FROM\n                miniblocks\n            WHERE\n                number = $1\n            "
  },
  "5d493cbce749cc5b56d4069423597b16599abaf51df0f19effe1a536376cf6a6": {
    "describe": {
      "columns": [
        {
          "name": "bootloader_code_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                bootloader_code_hash,\n                default_account_code_hash\n            FROM\n                protocol_versions\n            WHERE\n                id = $1\n            "
  },
  "5e781f84ec41edd0941fa84de837effac442434c6e734d977e6682a7484abe7f": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n                UPDATE proof_compression_jobs_fri\n                SET\n                    status = 'queued',\n                    updated_at = NOW(),\n                    processing_started_at = NOW()\n                WHERE\n                    (\n                        status = 'in_progress'\n                        AND processing_started_at <= NOW() - $1::INTERVAL\n                        AND attempts < $2\n                    )\n                    OR (\n                        status = 'failed'\n                        AND attempts < $2\n                    )\n                RETURNING\n                    l1_batch_number,\n                    status,\n                    attempts\n                "
  },
  "5f6885b5457aaa78e10917ae5b8cd0bc0e8923a6bae64f22f09242766835ee0c": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "contract_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "source_code",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "contract_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "zk_compiler_version",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "compiler_version",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "optimization_used",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "optimizer_mode",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "constructor_arguments",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "is_system",
          "ordinal": 9,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                id,\n                contract_address,\n                source_code,\n                contract_name,\n                zk_compiler_version,\n                compiler_version,\n                optimization_used,\n                optimizer_mode,\n                constructor_arguments,\n                is_system\n            FROM\n                contract_verification_requests\n            WHERE\n                status = 'successful'\n            ORDER BY\n                id\n            "
  },
  "5f8fc05ae782846898295d210dd3d55ff2b1510868dfe80d14fffa3f5ff07b83": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE l1_batches\n            SET\n                predicted_commit_gas_cost = $2,\n                updated_at = NOW()\n            WHERE\n                number = $1\n            "
  },
  "61b2b858d4636809c21838635aa52aeb5f06c26f68d131dd242f6ed68816c513": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int2"
        ]
      }
    },
    "query": "\n            SELECT\n                l1_batch_number\n            FROM\n                prover_jobs_fri\n            WHERE\n                status <> 'skipped'\n                AND status <> 'successful'\n                AND aggregation_round = $1\n            ORDER BY\n                l1_batch_number ASC\n            LIMIT\n                1\n            "
  },
  "61bc330d6d1b5fddec78342c1b0f00e82b0b3ad9ae36bf4fe44d7e85b74c6f49": {
    "describe": {
      "columns": [
        {
          "name": "op_id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    MAX(priority_op_id) AS \"op_id\"\n                FROM\n                    transactions\n                WHERE\n                    is_priority = TRUE\n                    AND miniblock_number IS NOT NULL\n                "
  },
  "6692ff6c0fbb2fc94f5cd2837a43ce80f9b2b27758651ccfc09df61a4ae8a363": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                eth_txs\n            WHERE\n                id = $1\n            "
  },
  "66e012ce974c38d9fe84cfc7eb28927f9e976319a305e0928ff366d535a97104": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8",
          "Text",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                eth_txs (\n                    raw_tx,\n                    nonce,\n                    tx_type,\n                    contract_address,\n                    predicted_gas_cost,\n                    created_at,\n                    updated_at\n                )\n            VALUES\n                ($1, $2, $3, $4, $5, NOW(), NOW())\n            RETURNING\n                *\n            "
  },
  "684775aaed3d7f3f5580363e5180a04e7a1af1057995805cb6fd35d0b810e734": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Int4",
          "Int4",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE gpu_prover_queue\n                SET\n                    instance_status = $1,\n                    updated_at = NOW(),\n                    queue_free_slots = $4\n                WHERE\n                    instance_host = $2::TEXT::inet\n                    AND instance_port = $3\n                    AND region = $5\n                    AND zone = $6\n                "
  },
  "68936a53e5b80576f3f341523e6843eb48b5e26ee92cd8476f50251e8c32610d": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT\n                    COUNT(*) AS \"count!\"\n                FROM\n                    l1_batches\n                WHERE\n                    number = $1\n                    AND hash = $2\n                    AND merkle_root_hash = $3\n                    AND parent_hash = $4\n                    AND l2_l1_merkle_root = $5\n                "
  },
  "68a937c42e280690a7a63eeec6883d30eeb6e614ca75edf582b44378c0a698ed": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prover_input",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 9,
          "type_info": "Time"
        },
        {
          "name": "aggregation_round",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "result",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "sequence_number",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "attempts",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "proccesed_by",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 17,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    *\n                FROM\n                    prover_jobs\n                WHERE\n                    id = $1\n                "
  },
  "68c891ee9d71cffe709731f2804b734d5d255e36e48668b3bfc25a0f86ea52e7": {
    "describe": {
      "columns": [
        {
          "name": "is_replaced!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Int8",
          "Bytea",
          "Numeric",
          "Numeric",
          "Numeric",
          "Numeric",
          "Bytea",
          "Jsonb",
          "Int4",
          "Bytea",
          "Numeric",
          "Bytea",
          "Bytea",
          "Int8",
          "Int4",
          "Int4",
          "Timestamp"
        ]
      }
    },
    "query": "\n                INSERT INTO\n                    transactions (\n                        hash,\n                        is_priority,\n                        initiator_address,\n                        nonce,\n                        signature,\n                        gas_limit,\n                        max_fee_per_gas,\n                        max_priority_fee_per_gas,\n                        gas_per_pubdata_limit,\n                        input,\n                        data,\n                        tx_format,\n                        contract_address,\n                        value,\n                        paymaster,\n                        paymaster_input,\n                        execution_info,\n                        received_at,\n                        created_at,\n                        updated_at\n                    )\n                VALUES\n                    (\n                        $1,\n                        FALSE,\n                        $2,\n                        $3,\n                        $4,\n                        $5,\n                        $6,\n                        $7,\n                        $8,\n                        $9,\n                        $10,\n                        $11,\n                        $12,\n                        $13,\n                        $14,\n                        $15,\n                        JSONB_BUILD_OBJECT('gas_used', $16::BIGINT, 'storage_writes', $17::INT, 'contracts_used', $18::INT),\n                        $19,\n                        NOW(),\n                        NOW()\n                    )\n                ON CONFLICT (initiator_address, nonce) DO\n                UPDATE\n                SET\n                    hash = $1,\n                    signature = $4,\n                    gas_limit = $5,\n                    max_fee_per_gas = $6,\n                    max_priority_fee_per_gas = $7,\n                    gas_per_pubdata_limit = $8,\n                    input = $9,\n                    data = $10,\n                    tx_format = $11,\n                    contract_address = $12,\n                    value = $13,\n                    paymaster = $14,\n                    paymaster_input = $15,\n                    execution_info = JSONB_BUILD_OBJECT('gas_used', $16::BIGINT, 'storage_writes', $17::INT, 'contracts_used', $18::INT),\n                    in_mempool = FALSE,\n                    received_at = $19,\n                    created_at = NOW(),\n                    updated_at = NOW(),\n                    error = NULL\n                WHERE\n                    transactions.is_priority = FALSE\n                    AND transactions.miniblock_number IS NULL\n                RETURNING\n                    (\n                        SELECT\n                            hash\n                        FROM\n                            transactions\n                        WHERE\n                            transactions.initiator_address = $2\n                            AND transactions.nonce = $3\n                    ) IS NOT NULL AS \"is_replaced!\"\n                "
  },
  "6ae2ed34230beae0e86c584e293e7ee767e4c98706246eb113498c0f817f5f38": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Int2",
          "Text"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                gpu_prover_queue_fri (\n                    instance_host,\n                    instance_port,\n                    instance_status,\n                    specialized_prover_group_id,\n                    zone,\n                    created_at,\n                    updated_at\n                )\n            VALUES\n                (CAST($1::TEXT AS inet), $2, 'available', $3, $4, NOW(), NOW())\n            ON CONFLICT (instance_host, instance_port, zone) DO\n            UPDATE\n            SET\n                instance_status = 'available',\n                specialized_prover_group_id = $3,\n                zone = $4,\n                updated_at = NOW()\n            "
  },
  "6b327df84d2b3b31d02db35fd5d91a8d67abcdb743a619ed0d1b9c16206a3c20": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            DELETE FROM eth_txs\n            WHERE\n                id >= (\n                    SELECT\n                        MIN(id)\n                    FROM\n                        eth_txs\n                    WHERE\n                        has_failed = TRUE\n                )\n            "
  },
  "6bd3094be764e6378fe52b5bb533260b49ce42daaf9dbe8075daf0a8e0ad9914": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            DELETE FROM basic_witness_input_producer_jobs\n            "
  },
  "6c0d03b1fbe6f47546bc34c6b2eab01cb2c55bf86d2c8c99abb1b7ca21cf75c0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            UPDATE miniblocks\n            SET\n                protocol_version = $1\n            WHERE\n                l1_batch_number IS NULL\n            "
  },
  "6ccb3beec0624153ef2e7bff61ba896e34b757421fca9682aecb3a98b54695a6": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "virtual_blocks",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                number,\n                timestamp,\n                hash,\n                l1_tx_count,\n                l2_tx_count,\n                base_fee_per_gas,\n                l1_gas_price,\n                l2_fair_gas_price,\n                bootloader_code_hash,\n                default_aa_code_hash,\n                protocol_version,\n                virtual_blocks\n            FROM\n                miniblocks\n            ORDER BY\n                number DESC\n            LIMIT\n                1\n            "
  },
  "6f6f60e7139fc789ca420d8610985a918e90b4e7087a98356ab19e22783c88cd": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "instance_host",
          "ordinal": 1,
          "type_info": "Inet"
        },
        {
          "name": "instance_port",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "instance_status",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "queue_free_slots",
          "ordinal": 7,
          "type_info": "Int4"
        },
        {
          "name": "queue_capacity",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "specialized_prover_group_id",
          "ordinal": 9,
          "type_info": "Int2"
        },
        {
          "name": "region",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "zone",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "num_gpu",
          "ordinal": 12,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE gpu_prover_queue\n                SET\n                    instance_status = 'reserved',\n                    updated_at = NOW(),\n                    processing_started_at = NOW()\n                WHERE\n                    id IN (\n                        SELECT\n                            id\n                        FROM\n                            gpu_prover_queue\n                        WHERE\n                            specialized_prover_group_id = $2\n                            AND region = $3\n                            AND zone = $4\n                            AND (\n                                instance_status = 'available'\n                                OR (\n                                    instance_status = 'reserved'\n                                    AND processing_started_at < NOW() - $1::INTERVAL\n                                )\n                            )\n                        ORDER BY\n                            updated_at ASC\n                        LIMIT\n                            1\n                        FOR UPDATE\n                            SKIP LOCKED\n                    )\n                RETURNING\n                    gpu_prover_queue.*\n                "
  },
  "708b2b3e40887e6d8d2d7aa20448a58479487686d774e6b2b1391347bdafe06d": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                number,\n                hash\n            FROM\n                miniblocks\n            WHERE\n                number >= $1\n            ORDER BY\n                number ASC\n            LIMIT\n                $2\n            "
  },
  "72a4f50355324cce85ebaef9fa32826095e9290f0c1157094bd0c44e06012e42": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                transactions\n            WHERE\n                hash = $1\n            "
  },
  "72ff9df79e78129cb96d14ece0198129b44534062f524823666ed432d2fcd345": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            VACUUM storage_logs\n            "
  },
  "73c4bf1e35d49faaab9f7828e80f396f9d193615d70184d4327378a7fc8a5665": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          "Int8",
          "Time",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE basic_witness_input_producer_jobs\n            SET\n                status = $1,\n                updated_at = NOW(),\n                time_taken = $3,\n                input_blob_url = $4\n            WHERE\n                l1_batch_number = $2\n            "
  },
  "7560ba61643a8ec8eeefbe6034226313c255ce356a9a4e25c098484d3129c914": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            DELETE FROM eth_txs_history\n            WHERE\n                id = $1\n            "
  },
  "759b80414b5bcbfe03a0e1e15b37f92c4cfad9313b1461e12242d9becb59e0b0": {
    "describe": {
      "columns": [
        {
          "name": "max?",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                MAX(operation_number) AS \"max?\"\n            FROM\n                storage_logs\n            WHERE\n                miniblock_number = $1\n            "
  },
  "75a3cf6f502ebb1a0e92b672dc6ce56b53cc4ca0a8c6ee7cac1b9a5863000be3": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "pubdata_input",
          "ordinal": 39,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                number,\n                timestamp,\n                is_finished,\n                l1_tx_count,\n                l2_tx_count,\n                fee_account_address,\n                bloom,\n                priority_ops_onchain_data,\n                hash,\n                parent_hash,\n                commitment,\n                compressed_write_logs,\n                compressed_contracts,\n                eth_prove_tx_id,\n                eth_commit_tx_id,\n                eth_execute_tx_id,\n                merkle_root_hash,\n                l2_to_l1_logs,\n                l2_to_l1_messages,\n                used_contract_hashes,\n                compressed_initial_writes,\n                compressed_repeated_writes,\n                l2_l1_compressed_messages,\n                l2_l1_merkle_root,\n                l1_gas_price,\n                l2_fair_gas_price,\n                rollup_last_leaf_index,\n                zkporter_is_available,\n                bootloader_code_hash,\n                default_aa_code_hash,\n                base_fee_per_gas,\n                aux_data_hash,\n                pass_through_data_hash,\n                meta_parameters_hash,\n                protocol_version,\n                compressed_state_diffs,\n                system_logs,\n                events_queue_commitment,\n                bootloader_initial_content_commitment,\n                pubdata_input\n            FROM\n                l1_batches\n                LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n            WHERE\n                eth_commit_tx_id IS NOT NULL\n                AND eth_prove_tx_id IS NULL\n            ORDER BY\n                number\n            LIMIT\n                $1\n            "
  },
  "75f6eaa518e7840374c4e44b0788bf92c7f2c55386c8208e3a82b30456abd5b4": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "merkle_tree_paths_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "status",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "processing_started_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 8,
          "type_info": "Time"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 9,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "picked_by",
          "ordinal": 11,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE witness_inputs_fri\n            SET\n                status = 'in_progress',\n                attempts = attempts + 1,\n                updated_at = NOW(),\n                processing_started_at = NOW(),\n                picked_by = $3\n            WHERE\n                l1_batch_number = (\n                    SELECT\n                        l1_batch_number\n                    FROM\n                        witness_inputs_fri\n                    WHERE\n                        l1_batch_number <= $1\n                        AND status = 'queued'\n                        AND protocol_version = ANY ($2)\n                    ORDER BY\n                        l1_batch_number ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                witness_inputs_fri.*\n            "
  },
  "75fa24c29dc312cbfa89bf1f4a04a42b4ead6964edd17bfcacb4a828492bba60": {
    "describe": {
      "columns": [
        {
          "name": "state!",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                state AS \"state!\"\n            FROM\n                consensus_replica_state\n            WHERE\n                fake_key\n            "
  },
  "76cb9ad97b70d584b19af194576dcf2324f380932698386aa8f9751b1fa24a7b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray"
        ]
      }
    },
    "query": "\n                    INSERT INTO\n                        call_traces (tx_hash, call_trace)\n                    SELECT\n                        u.tx_hash,\n                        u.call_trace\n                    FROM\n                        UNNEST($1::bytea[], $2::bytea[]) AS u (tx_hash, call_trace)\n                    "
  },
  "77a43830ca31eac85a3c03d87696bf94a013e49bf50ce23f4de4968781df0796": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE l1_batches\n            SET\n                hash = $1\n            WHERE\n                number = $2\n            "
  },
  "77b35855fbb989f6314469b419726dc7bb98e0f7feaf14656307e20bd2bb0b6c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Jsonb"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                consensus_replica_state (fake_key, state)\n            VALUES\n                (TRUE, $1)\n            ON CONFLICT (fake_key) DO\n            UPDATE\n            SET\n                state = excluded.state\n            "
  },
  "78978c19282961c5b3dc06352b41caa4cca66d6ad74b2cd1a34ea5f7bc1e6909": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "call_trace",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT\n                    *\n                FROM\n                    call_traces\n                WHERE\n                    tx_hash = $1\n                "
  },
  "7a2145e2234a7896031bbc1ce82715e903f3b399886c2c73e838bd924fed6776": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8",
          "Int2",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n            UPDATE node_aggregation_witness_jobs_fri\n            SET\n                aggregations_url = $1,\n                number_of_dependent_jobs = $5,\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $2\n                AND circuit_id = $3\n                AND depth = $4\n            "
  },
  "7a8fffe8d4e3085e00c98f770d250d625f057acf1440b6550375ce5509a816a6": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "closed_form_inputs_blob_url",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 4,
          "type_info": "Int2"
        },
        {
          "name": "status",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "processing_started_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 10,
          "type_info": "Time"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 11,
          "type_info": "Bool"
        },
        {
          "name": "number_of_basic_circuits",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "protocol_version",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "picked_by",
          "ordinal": 14,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE leaf_aggregation_witness_jobs_fri\n            SET\n                status = 'in_progress',\n                attempts = attempts + 1,\n                updated_at = NOW(),\n                processing_started_at = NOW(),\n                picked_by = $2\n            WHERE\n                id = (\n                    SELECT\n                        id\n                    FROM\n                        leaf_aggregation_witness_jobs_fri\n                    WHERE\n                        status = 'queued'\n                        AND protocol_version = ANY ($1)\n                    ORDER BY\n                        l1_batch_number ASC,\n                        id ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                leaf_aggregation_witness_jobs_fri.*\n            "
  },
  "7fccc28bd829bce334f37197ee6b139e943f3ad2a41387b610606a42b7f03283": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Numeric",
          "Numeric",
          "Numeric",
          "Jsonb",
          "Int4",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Timestamp"
        ]
      }
    },
    "query": "\n                INSERT INTO\n                    transactions (\n                        hash,\n                        is_priority,\n                        initiator_address,\n                        gas_limit,\n                        max_fee_per_gas,\n                        gas_per_pubdata_limit,\n                        data,\n                        upgrade_id,\n                        contract_address,\n                        l1_block_number,\n                        value,\n                        paymaster,\n                        paymaster_input,\n                        tx_format,\n                        l1_tx_mint,\n                        l1_tx_refund_recipient,\n                        received_at,\n                        created_at,\n                        updated_at\n                    )\n                VALUES\n                    (\n                        $1,\n                        TRUE,\n                        $2,\n                        $3,\n                        $4,\n                        $5,\n                        $6,\n                        $7,\n                        $8,\n                        $9,\n                        $10,\n                        $11,\n                        $12,\n                        $13,\n                        $14,\n                        $15,\n                        $16,\n                        NOW(),\n                        NOW()\n                    )\n                ON CONFLICT (hash) DO NOTHING\n                "
  },
  "806b82a9effd885ba537a2a1c7d7227120a8279db1875d26ccae5ee0785f46a9": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                attempts\n            FROM\n                node_aggregation_witness_jobs_fri\n            WHERE\n                id = $1\n            "
  },
  "8182690d0326b820d23fba49d391578db18c29cdca85b8b6aad86fe2a9bf6bbe": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "depth",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs_fri\n                SET\n                    status = 'queued'\n                WHERE\n                    (l1_batch_number, circuit_id, depth) IN (\n                        SELECT\n                            prover_jobs_fri.l1_batch_number,\n                            prover_jobs_fri.circuit_id,\n                            prover_jobs_fri.depth\n                        FROM\n                            prover_jobs_fri\n                            JOIN node_aggregation_witness_jobs_fri nawj ON prover_jobs_fri.l1_batch_number = nawj.l1_batch_number\n                            AND prover_jobs_fri.circuit_id = nawj.circuit_id\n                            AND prover_jobs_fri.depth = nawj.depth\n                        WHERE\n                            nawj.status = 'waiting_for_proofs'\n                            AND prover_jobs_fri.status = 'successful'\n                            AND prover_jobs_fri.aggregation_round = 2\n                        GROUP BY\n                            prover_jobs_fri.l1_batch_number,\n                            prover_jobs_fri.circuit_id,\n                            prover_jobs_fri.depth,\n                            nawj.number_of_dependent_jobs\n                        HAVING\n                            COUNT(*) = nawj.number_of_dependent_jobs\n                    )\n                RETURNING\n                    l1_batch_number,\n                    circuit_id,\n                    depth;\n                "
  },
  "81869cb392e9fcbb71ceaa857af77b39429d56072f63b3530c576fb31d7a56f9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray",
          "ByteaArray",
          "ByteaArray",
          "ByteaArray"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                storage (hashed_key, address, key, value, tx_hash, created_at, updated_at)\n            SELECT\n                u.hashed_key,\n                u.address,\n                u.key,\n                u.value,\n                u.tx_hash,\n                NOW(),\n                NOW()\n            FROM\n                UNNEST($1::bytea[], $2::bytea[], $3::bytea[], $4::bytea[], $5::bytea[]) AS u (hashed_key, address, key, value, tx_hash)\n            ON CONFLICT (hashed_key) DO\n            UPDATE\n            SET\n                tx_hash = excluded.tx_hash,\n                value = excluded.value,\n                updated_at = NOW()\n            "
  },
  "83134807aee4b6154a1aee4f76dd989d5b4637a97f815b84ace70587acc95e7c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "TextArray",
          "Text"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                snapshots (\n                    l1_batch_number,\n                    storage_logs_filepaths,\n                    factory_deps_filepath,\n                    created_at,\n                    updated_at\n                )\n            VALUES\n                ($1, $2, $3, NOW(), NOW())\n            "
  },
  "831f7bec105541bd3ff9bcf6940d6b6b9d558224ad2d8ed079a68c7e339ded6b": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number?",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    MIN(l1_batch_number) AS \"l1_batch_number?\"\n                FROM\n                    (\n                        SELECT\n                            MIN(l1_batch_number) AS \"l1_batch_number\"\n                        FROM\n                            prover_jobs\n                        WHERE\n                            status = 'successful'\n                            OR aggregation_round < 3\n                        GROUP BY\n                            l1_batch_number\n                        HAVING\n                            MAX(aggregation_round) < 3\n                    ) AS inn\n                "
  },
  "83a931ceddf34e1c760649d613f534014b9ab9ca7725e14fb17aa050d9f35eb8": {
    "describe": {
      "columns": [
        {
          "name": "base_fee_per_gas",
          "ordinal": 0,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                base_fee_per_gas\n            FROM\n                miniblocks\n            WHERE\n                number <= $1\n            ORDER BY\n                number DESC\n            LIMIT\n                $2\n            "
  },
  "84c804db9d60a4c1ebbce5e3dcdf03c0aad3ac30d85176e0a4e35f72bbb21b12": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "system_logs",
          "ordinal": 35,
          "type_info": "ByteaArray"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 36,
          "type_info": "Bytea"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "pubdata_input",
          "ordinal": 39,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                number,\n                timestamp,\n                is_finished,\n                l1_tx_count,\n                l2_tx_count,\n                fee_account_address,\n                bloom,\n                priority_ops_onchain_data,\n                hash,\n                parent_hash,\n                commitment,\n                compressed_write_logs,\n                compressed_contracts,\n                eth_prove_tx_id,\n                eth_commit_tx_id,\n                eth_execute_tx_id,\n                merkle_root_hash,\n                l2_to_l1_logs,\n                l2_to_l1_messages,\n                used_contract_hashes,\n                compressed_initial_writes,\n                compressed_repeated_writes,\n                l2_l1_compressed_messages,\n                l2_l1_merkle_root,\n                l1_gas_price,\n                l2_fair_gas_price,\n                rollup_last_leaf_index,\n                zkporter_is_available,\n                bootloader_code_hash,\n                default_aa_code_hash,\n                base_fee_per_gas,\n                aux_data_hash,\n                pass_through_data_hash,\n                meta_parameters_hash,\n                protocol_version,\n                system_logs,\n                compressed_state_diffs,\n                events_queue_commitment,\n                bootloader_initial_content_commitment,\n                pubdata_input\n            FROM\n                l1_batches\n                LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n            WHERE\n                number = $1\n            "
  },
  "852aa5fe1c3b2dfe875cd4adf0d19a00c170cf7725d95dd6eb8b753fa5facec8": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Numeric",
          "Numeric",
          "Int4"
        ]
      }
    },
    "query": "\n                UPDATE transactions\n                SET\n                    in_mempool = TRUE\n                FROM\n                    (\n                        SELECT\n                            hash\n                        FROM\n                            (\n                                SELECT\n                                    hash\n                                FROM\n                                    transactions\n                                WHERE\n                                    miniblock_number IS NULL\n                                    AND in_mempool = FALSE\n                                    AND error IS NULL\n                                    AND (\n                                        is_priority = TRUE\n                                        OR (\n                                            max_fee_per_gas >= $2\n                                            AND gas_per_pubdata_limit >= $3\n                                        )\n                                    )\n                                    AND tx_format != $4\n                                ORDER BY\n                                    is_priority DESC,\n                                    priority_op_id,\n                                    received_at\n                                LIMIT\n                                    $1\n                            ) AS subquery1\n                        ORDER BY\n                            hash\n                    ) AS subquery2\n                WHERE\n                    transactions.hash = subquery2.hash\n                RETURNING\n                    transactions.*\n                "
  },
  "8625ca45ce76b8c8633d390e35e0c5f885240d99ea69140a4636b00469d08497": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                tx_hash\n            FROM\n                eth_txs_history\n            WHERE\n                eth_tx_id = $1\n                AND confirmed_at IS NOT NULL\n            "
  },
  "877d20634068170326ab5801b69c70aff49e60b7def3d93b9206e650c259168b": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                timestamp\n            FROM\n                l1_batches\n            WHERE\n                eth_execute_tx_id IS NULL\n                AND number > 0\n            ORDER BY\n                number\n            LIMIT\n                1\n            "
  },
  "878c9cdfd69ad8988d049041edd63595237a0c54f67b8c669dfbb4fca32757e4": {
    "describe": {
      "columns": [
        {
          "name": "l2_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    l2_address\n                FROM\n                    tokens\n                "
  },
  "88c629334e30bb9f5c81c858aa51af63b86e8da6d908d48998012231e1d66a60": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "virtual_blocks",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                timestamp,\n                virtual_blocks\n            FROM\n                miniblocks\n            WHERE\n                number BETWEEN $1 AND $2\n            ORDER BY\n                number\n            "
  },
  "8903ba5db3f87851c12da133573b4207b69cc48b4ba648e797211631be612b69": {
    "describe": {
      "columns": [
        {
          "name": "bytecode_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "bytecode",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                bytecode_hash,\n                bytecode\n            FROM\n                factory_deps\n                INNER JOIN miniblocks ON miniblocks.number = factory_deps.miniblock_number\n            WHERE\n                miniblocks.l1_batch_number = $1\n            "
  },
  "894665c2c467bd1aaeb331b112c567e2667c63a033baa6b427bd8a0898c08bf2": {
    "describe": {
      "columns": [
        {
          "name": "protocol_version",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                protocol_version\n            FROM\n                miniblocks\n            WHERE\n                number = $1\n            "
  },
  "8a773618c9df11217467222c9117d6868fbf88ee21d8868a7d133e7cebb3d20e": {
    "describe": {
      "columns": [
        {
          "name": "successful_limit!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "queued_limit!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "max_block!",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    (\n                        SELECT\n                            l1_batch_number\n                        FROM\n                            prover_jobs\n                        WHERE\n                            status NOT IN ('successful', 'skipped')\n                        ORDER BY\n                            l1_batch_number\n                        LIMIT\n                            1\n                    ) AS \"successful_limit!\",\n                    (\n                        SELECT\n                            l1_batch_number\n                        FROM\n                            prover_jobs\n                        WHERE\n                            status <> 'queued'\n                        ORDER BY\n                            l1_batch_number DESC\n                        LIMIT\n                            1\n                    ) AS \"queued_limit!\",\n                    (\n                        SELECT\n                            MAX(l1_batch_number) AS \"max!\"\n                        FROM\n                            prover_jobs\n                    ) AS \"max_block!\"\n                "
  },
  "8a7a57ca3d4d65da3e0877c003902c690c33686c889d318b1d64bdd7fa6374db": {
    "describe": {
      "columns": [
        {
          "name": "l1_block_number",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    l1_block_number\n                FROM\n                    transactions\n                WHERE\n                    priority_op_id IS NOT NULL\n                ORDER BY\n                    priority_op_id DESC\n                LIMIT\n                    1\n                "
  },
  "8b9e5d525c026de97c0a732b1adc8dc4bd57e32dfefe1017acba9a15fc14b895": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "index",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                storage_logs.hashed_key,\n                storage_logs.value,\n                initial_writes.index\n            FROM\n                storage_logs\n                INNER JOIN initial_writes ON storage_logs.hashed_key = initial_writes.hashed_key\n            WHERE\n                storage_logs.miniblock_number = $1\n                AND storage_logs.hashed_key >= $2::bytea\n                AND storage_logs.hashed_key <= $3::bytea\n            ORDER BY\n                storage_logs.hashed_key\n            "
  },
  "8f5e89ccadd4ea1da7bfe9793a1cbb724af0f0216433a70f19d784e3f2afbc9f": {
    "describe": {
      "columns": [
        {
          "name": "protocol_version",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                protocol_version\n            FROM\n                witness_inputs_fri\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "90f7657bae05c4bad6902c6bfb1b8ba0b771cb45573aca81db254f6bcfc17c77": {
    "describe": {
      "columns": [
        {
          "name": "nonce",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                nonce\n            FROM\n                eth_txs\n            ORDER BY\n                id DESC\n            LIMIT\n                1\n            "
  },
  "9334df89c9562d4b35611b8e5ffb17305343df99ebc55f240278b5c4e63f89f5": {
    "describe": {
      "columns": [
        {
          "name": "value",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                value\n            FROM\n                storage\n            WHERE\n                hashed_key = $1\n            "
  },
  "95ea0522a3eff6c0d2d0b1c58fd2767e112b95f4d103c27acd6f7ede108bd300": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n            UPDATE eth_txs\n            SET\n                gas_used = $1,\n                confirmed_eth_tx_history_id = $2\n            WHERE\n                id = $3\n            "
  },
  "966dddc881bfe6fd94b56f587424125a2633ddb6abaa129f2b12389140d83c3f": {
    "describe": {
      "columns": [
        {
          "name": "recursion_scheduler_level_vk_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_node_level_vk_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_leaf_level_vk_hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_circuits_set_vks_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                recursion_scheduler_level_vk_hash,\n                recursion_node_level_vk_hash,\n                recursion_leaf_level_vk_hash,\n                recursion_circuits_set_vks_hash\n            FROM\n                protocol_versions\n            WHERE\n                id = $1\n            "
  },
  "9955b9215096f781442153518c4f0a9676e26f422506545ccc90b7e8a36c8d47": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "data?",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address?",
          "ordinal": 2,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                factory_deps.bytecode,\n                transactions.data AS \"data?\",\n                transactions.contract_address AS \"contract_address?\"\n            FROM\n                (\n                    SELECT\n                        *\n                    FROM\n                        storage_logs\n                    WHERE\n                        storage_logs.hashed_key = $1\n                    ORDER BY\n                        miniblock_number DESC,\n                        operation_number DESC\n                    LIMIT\n                        1\n                ) storage_logs\n                JOIN factory_deps ON factory_deps.bytecode_hash = storage_logs.value\n                LEFT JOIN transactions ON transactions.hash = storage_logs.tx_hash\n            WHERE\n                storage_logs.value != $2\n            "
  },
  "99acb091650478fe0feb367b1d64561347b81f8931cc2addefa907c9aa9355e6": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "recursion_scheduler_level_vk_hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_node_level_vk_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_leaf_level_vk_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "recursion_circuits_set_vks_hash",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "default_account_code_hash",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "verifier_address",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "created_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                protocol_versions\n            WHERE\n                id < $1\n            ORDER BY\n                id DESC\n            LIMIT\n                1\n            "
  },
  "99d9ee2a0d0450acefa0d9b6c031e30606fddf6631c859ab03819ec476bcf005": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "\n            SELECT\n                hashed_key\n            FROM\n                initial_writes\n            WHERE\n                hashed_key = ANY ($1)\n            "
  },
  "99dd6f04e82585d81ac23bc4871578179e6269c6ff36877cedee264067ccdafc": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "Queued",
                  "ManuallySkipped",
                  "InProgress",
                  "Successful",
                  "Failed"
                ]
              },
              "name": "basic_witness_input_producer_job_status"
            }
          },
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n            UPDATE basic_witness_input_producer_jobs\n            SET\n                status = $1,\n                attempts = attempts + 1,\n                updated_at = NOW(),\n                processing_started_at = NOW()\n            WHERE\n                l1_batch_number = (\n                    SELECT\n                        l1_batch_number\n                    FROM\n                        basic_witness_input_producer_jobs\n                    WHERE\n                        status = $2\n                        OR (\n                            status = $1\n                            AND processing_started_at < NOW() - $4::INTERVAL\n                        )\n                        OR (\n                            status = $3\n                            AND attempts < $5\n                        )\n                    ORDER BY\n                        l1_batch_number ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                basic_witness_input_producer_jobs.l1_batch_number\n            "
  },
  "9b90f7a7ffee3cd8439f90a6f79693831e2ab6d6d3c1805df5aa51d76994ec19": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                witness_inputs_fri (\n                    l1_batch_number,\n                    merkle_tree_paths_blob_url,\n                    protocol_version,\n                    status,\n                    created_at,\n                    updated_at\n                )\n            VALUES\n                ($1, $2, $3, 'queued', NOW(), NOW())\n            ON CONFLICT (l1_batch_number) DO NOTHING\n            "
  },
  "9c0c3e5edce083804f49137eb3b01c0b73dfb30bdb9e11fcbf370d599344f20e": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "status!",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    COUNT(*) AS \"count!\",\n                    circuit_type AS \"circuit_type!\",\n                    status AS \"status!\"\n                FROM\n                    prover_jobs\n                WHERE\n                    status <> 'skipped'\n                    AND status <> 'successful'\n                GROUP BY\n                    circuit_type,\n                    status\n                "
  },
  "9c2a5f32c627d3a5c6f1e87b31ce3b0fd67aa1f5f7ea0de673a2fbe1f742db86": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                timestamp\n            FROM\n                miniblocks\n            WHERE\n                number = $1\n            "
  },
  "9cfcde703a48b110791d2ae1103c9317c01d6e35db3b07d0a31f436e7e3c7c40": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE contract_verification_requests\n            SET\n                status = 'successful',\n                updated_at = NOW()\n            WHERE\n                id = $1\n            "
  },
  "9ef2f43e6201cc00a0e1425a666a36532fee1450733849852dfd20e18ded1f03": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE scheduler_witness_jobs_fri\n            SET\n                status = 'failed',\n                error = $1,\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $2\n            "
  },
  "a0e2b2c034cc5f668f0b3d43b94d2e2326d7ace079b095def52723a45b65d3f3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE witness_inputs_fri\n            SET\n                status = 'failed',\n                error = $1,\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $2\n            "
  },
  "a2d02b71e3dcc29a2c0c20b44392cfbaf09164aecfa5eed8d7142518ad96abea": {
    "describe": {
      "columns": [
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                initial_bootloader_heap_content\n            FROM\n                l1_batches\n            WHERE\n                number = $1\n            "
  },
  "a4861c931e84d897c27f666de1c5ca679a0459a012899a373c67393d30d12601": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array"
        ]
      }
    },
    "query": "\n            UPDATE scheduler_dependency_tracker_fri\n            SET\n                status = 'queued'\n            WHERE\n                l1_batch_number = ANY ($1)\n            "
  },
  "a48c92f557e5e3a2674ce0dee9cd92f5a547150590b8c221c4065eab11175c7a": {
    "describe": {
      "columns": [
        {
          "name": "max?",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                MAX(INDEX) AS \"max?\"\n            FROM\n                initial_writes\n            "
  },
  "a4a4b0bfbe05eac100c42a717e8d7cbb0bc526ebe61a07f735d4ab587058b22c": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                hash\n            FROM\n                miniblocks\n            WHERE\n                number = $1\n            "
  },
  "a4fcd075b68467bb119e49e6b20a69138206dfeb41f3daff4a3eef1de0bed4e4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Int8Array",
          "Int8"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                initial_writes (hashed_key, INDEX, l1_batch_number, created_at, updated_at)\n            SELECT\n                u.hashed_key,\n                u.index,\n                $3,\n                NOW(),\n                NOW()\n            FROM\n                UNNEST($1::bytea[], $2::BIGINT[]) AS u (hashed_key, INDEX)\n            "
  },
  "a74d029f58801ec05d8d14a3b065d93e391600ab9da2e5fd4e8b139ab3d77583": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE proof_generation_details\n            SET\n                status = 'generated',\n                proof_blob_url = $1,\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $2\n            "
  },
  "a83f853b1d63365e88975a926816c6e7b4595f3e7c3dca1d1590de5437187733": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bool",
          "Bytea",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE l1_batches\n            SET\n                hash = $1,\n                merkle_root_hash = $2,\n                commitment = $3,\n                default_aa_code_hash = $4,\n                compressed_repeated_writes = $5,\n                compressed_initial_writes = $6,\n                l2_l1_compressed_messages = $7,\n                l2_l1_merkle_root = $8,\n                zkporter_is_available = $9,\n                bootloader_code_hash = $10,\n                rollup_last_leaf_index = $11,\n                aux_data_hash = $12,\n                pass_through_data_hash = $13,\n                meta_parameters_hash = $14,\n                compressed_state_diffs = $15,\n                updated_at = NOW()\n            WHERE\n                number = $16\n            "
  },
  "a84ee70bec8c03bd51e1c6bad44c9a64904026506914abae2946e5d353d6a604": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int2"
        ]
      }
    },
    "query": "\n            SELECT\n                id\n            FROM\n                prover_jobs_fri\n            WHERE\n                l1_batch_number = $1\n                AND status = 'successful'\n                AND aggregation_round = $2\n            "
  },
  "a91c23c4d33771122cec2589c6fe2757dbc13be6b30f5840744e5e0569adc66e": {
    "describe": {
      "columns": [
        {
          "name": "upgrade_tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                upgrade_tx_hash\n            FROM\n                protocol_versions\n            WHERE\n                id = $1\n            "
  },
  "aa8e569cf406cd0975a6ffaeeafa92f632186181ba8b93518e549e0643f58da8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Int4",
          "Int8",
          "Bool",
          "Bytea",
          "ByteaArray",
          "ByteaArray",
          "Bytea",
          "ByteaArray",
          "Int8",
          "Int8",
          "Int8",
          "Jsonb",
          "Jsonb",
          "Numeric",
          "Int8",
          "Int8",
          "Bytea",
          "Bytea",
          "Int4",
          "ByteaArray",
          "Int8Array",
          "Bytea"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                l1_batches (\n                    number,\n                    l1_tx_count,\n                    l2_tx_count,\n                    timestamp,\n                    is_finished,\n                    fee_account_address,\n                    l2_to_l1_logs,\n                    l2_to_l1_messages,\n                    bloom,\n                    priority_ops_onchain_data,\n                    predicted_commit_gas_cost,\n                    predicted_prove_gas_cost,\n                    predicted_execute_gas_cost,\n                    initial_bootloader_heap_content,\n                    used_contract_hashes,\n                    base_fee_per_gas,\n                    l1_gas_price,\n                    l2_fair_gas_price,\n                    bootloader_code_hash,\n                    default_aa_code_hash,\n                    protocol_version,\n                    system_logs,\n                    storage_refunds,\n                    pubdata_input,\n                    created_at,\n                    updated_at\n                )\n            VALUES\n                (\n                    $1,\n                    $2,\n                    $3,\n                    $4,\n                    $5,\n                    $6,\n                    $7,\n                    $8,\n                    $9,\n                    $10,\n                    $11,\n                    $12,\n                    $13,\n                    $14,\n                    $15,\n                    $16,\n                    $17,\n                    $18,\n                    $19,\n                    $20,\n                    $21,\n                    $22,\n                    $23,\n                    $24,\n                    NOW(),\n                    NOW()\n                )\n            "
  },
  "aa91697157517322b0dbb53dca99f41220c51f58a03c61d6b7789eab0504e320": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "depth",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs_fri\n                SET\n                    status = 'queued'\n                WHERE\n                    (l1_batch_number, circuit_id, depth) IN (\n                        SELECT\n                            prover_jobs_fri.l1_batch_number,\n                            prover_jobs_fri.circuit_id,\n                            prover_jobs_fri.depth\n                        FROM\n                            prover_jobs_fri\n                            JOIN node_aggregation_witness_jobs_fri nawj ON prover_jobs_fri.l1_batch_number = nawj.l1_batch_number\n                            AND prover_jobs_fri.circuit_id = nawj.circuit_id\n                            AND prover_jobs_fri.depth = nawj.depth\n                        WHERE\n                            nawj.status = 'waiting_for_proofs'\n                            AND prover_jobs_fri.status = 'successful'\n                            AND prover_jobs_fri.aggregation_round = 1\n                            AND prover_jobs_fri.depth = 0\n                        GROUP BY\n                            prover_jobs_fri.l1_batch_number,\n                            prover_jobs_fri.circuit_id,\n                            prover_jobs_fri.depth,\n                            nawj.number_of_dependent_jobs\n                        HAVING\n                            COUNT(*) = nawj.number_of_dependent_jobs\n                    )\n                RETURNING\n                    l1_batch_number,\n                    circuit_id,\n                    depth;\n                "
  },
  "aaf4fb97c95a5290fb1620cd868477dcf21955e0921ba648ba2e751dbfc3cb45": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id!",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round!",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "status!",
          "ordinal": 3,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    COUNT(*) AS \"count!\",\n                    circuit_id AS \"circuit_id!\",\n                    aggregation_round AS \"aggregation_round!\",\n                    status AS \"status!\"\n                FROM\n                    prover_jobs_fri\n                WHERE\n                    status <> 'skipped'\n                    AND status <> 'successful'\n                GROUP BY\n                    circuit_id,\n                    aggregation_round,\n                    status\n                "
  },
  "ac505ae6cfc744b07b52997db789bdc9efc6b89fc0444caf8271edd7dfe4a3bc": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                id\n            FROM\n                protocol_versions\n            "
  },
  "ac673a122962b57b0272df2d82a1788feea2fbb5682de09120dd109899510820": {
    "describe": {
      "columns": [
        {
          "name": "block_batch?",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "max_batch?",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                (\n                    SELECT\n                        l1_batch_number\n                    FROM\n                        miniblocks\n                    WHERE\n                        number = $1\n                ) AS \"block_batch?\",\n                (\n                    SELECT\n                        MAX(number) + 1\n                    FROM\n                        l1_batches\n                ) AS \"max_batch?\"\n            "
  },
  "ad53e912e68d81628089ae68aaa4154b988ce8ed67af02f4254717a1cdd3da7e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Int4",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE gpu_prover_queue\n                SET\n                    instance_status = 'available',\n                    updated_at = NOW(),\n                    queue_free_slots = $3\n                WHERE\n                    instance_host = $1::TEXT::inet\n                    AND instance_port = $2\n                    AND instance_status = 'full'\n                    AND region = $4\n                    AND zone = $5\n                "
  },
  "ada54322a28012b1b761f3631c4cd6ca26aa2fa565fcf208b6985f461c1868f2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE eth_txs_history\n            SET\n                updated_at = NOW(),\n                confirmed_at = NOW()\n            WHERE\n                tx_hash = $1\n            RETURNING\n                id,\n                eth_tx_id\n            "
  },
  "aeda34b1beadca72e3e600ea9ae63f436a4f16dbeb784d0d28be392ad96b1c49": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            UPDATE eth_txs\n            SET\n                has_failed = TRUE\n            WHERE\n                id = $1\n            "
  },
  "aefea1f3e87f28791cc547f193a895006e23ec73018f4b4e0a364a741f5c9781": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                l1_batch_number\n            FROM\n                miniblocks\n            WHERE\n                number = $1\n            "
  },
  "af72fabd90eb43fb315f46d7fe9f724216807ffd481cd6f7f19968e42e52b284": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE prover_jobs_fri\n            SET\n                status = 'sent_to_server',\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "afc24bd1407dba82cd3dc9e7ee71ac4ab2d73bda6022700aeb0a630a2563a4b4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE leaf_aggregation_witness_jobs_fri\n            SET\n                status = 'failed',\n                error = $1,\n                updated_at = NOW()\n            WHERE\n                id = $2\n            "
  },
  "b17c71983da060f08616e001b42f8dcbcb014b4f808c6232abd9a83354c995ac": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n            UPDATE node_aggregation_witness_jobs_fri\n            SET\n                status = 'queued',\n                updated_at = NOW(),\n                processing_started_at = NOW()\n            WHERE\n                (\n                    status = 'in_progress'\n                    AND processing_started_at <= NOW() - $1::INTERVAL\n                    AND attempts < $2\n                )\n                OR (\n                    status = 'failed'\n                    AND attempts < $2\n                )\n            RETURNING\n                id,\n                status,\n                attempts\n            "
  },
  "b23ddb16513d69331056b94d466663a9c5ea62ea7c99a77941eb8f05d4454125": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int2",
          "Text",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO\n                        leaf_aggregation_witness_jobs_fri (\n                            l1_batch_number,\n                            circuit_id,\n                            closed_form_inputs_blob_url,\n                            number_of_basic_circuits,\n                            protocol_version,\n                            status,\n                            created_at,\n                            updated_at\n                        )\n                    VALUES\n                        ($1, $2, $3, $4, $5, 'waiting_for_proofs', NOW(), NOW())\n                    ON CONFLICT (l1_batch_number, circuit_id) DO\n                    UPDATE\n                    SET\n                        updated_at = NOW()\n                    "
  },
  "b321c5ba22358cbb1fd9c627f1e7b56187686173327498ac75424593547c19c5": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                attempts\n            FROM\n                scheduler_witness_jobs_fri\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "b33e8da69281efe7750043e409d9871731c41cef01da3d6aaf2c53f7b17c47b2": {
    "describe": {
      "columns": [
        {
          "name": "value",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    value\n                FROM\n                    storage_logs\n                WHERE\n                    storage_logs.hashed_key = $1\n                    AND storage_logs.miniblock_number <= $2\n                ORDER BY\n                    storage_logs.miniblock_number DESC,\n                    storage_logs.operation_number DESC\n                LIMIT\n                    1\n                "
  },
  "b367ecb1ebee86ec598c4079591f8c12deeca6b8843fe3869cc2b02b30da5de6": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                attempts\n            FROM\n                proof_compression_jobs_fri\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "b3d71dbe14bcd94131b29b64dcb49b6370c211a7fc24ad03a5f0e327f9d18040": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                attempts\n            FROM\n                witness_inputs_fri\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "b4304b9afb9f838eee1fe95af5fd964d4bb39b9dcd18fb03bc11ce2fb32b7fb3": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "scheduler_partial_input_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "status",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 4,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "attempts",
          "ordinal": 8,
          "type_info": "Int2"
        },
        {
          "name": "protocol_version",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "picked_by",
          "ordinal": 10,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE scheduler_witness_jobs_fri\n            SET\n                status = 'in_progress',\n                attempts = attempts + 1,\n                updated_at = NOW(),\n                processing_started_at = NOW(),\n                picked_by = $2\n            WHERE\n                l1_batch_number = (\n                    SELECT\n                        l1_batch_number\n                    FROM\n                        scheduler_witness_jobs_fri\n                    WHERE\n                        status = 'queued'\n                        AND protocol_version = ANY ($1)\n                    ORDER BY\n                        l1_batch_number ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                scheduler_witness_jobs_fri.*\n            "
  },
  "b452354c888bfc19b5f4012582061b86b1abd915739533f9982fea9d8e21b9e9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            DELETE FROM factory_deps\n            WHERE\n                miniblock_number > $1\n            "
  },
  "b4794e6a0c2366d5d95ab373c310103263af3ff5cb6c9dc5df59d3cd2a5e56b4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Int4",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE gpu_prover_queue_fri\n            SET\n                instance_status = $1,\n                updated_at = NOW()\n            WHERE\n                instance_host = $2::TEXT::inet\n                AND instance_port = $3\n                AND zone = $4\n            "
  },
  "b49478150dbc8731c531ef3eddc0c2cfff08e6fef3c3824d20dfdf2d0f73e671": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                hash,\n                number,\n                timestamp\n            FROM\n                miniblocks\n            WHERE\n                number > $1\n            ORDER BY\n                number ASC\n            "
  },
  "b4a0444897b60c7061363a48b2b5386a2fd53492f3df05545edbfb0ec0f059d2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n                UPDATE eth_txs\n                SET\n                    confirmed_eth_tx_history_id = $1\n                WHERE\n                    id = $2\n                "
  },
  "b5fd77f515fe168908cc90e44d0697e36b3c2a997038c30553f7727cdfa17361": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "ByteaArray",
          "Int4Array",
          "VarcharArray",
          "JsonbArray",
          "Int8Array",
          "NumericArray"
        ]
      }
    },
    "query": "\n                    UPDATE transactions\n                    SET\n                        miniblock_number = $1,\n                        index_in_block = data_table.index_in_block,\n                        error = NULLIF(data_table.error, ''),\n                        in_mempool = FALSE,\n                        execution_info = execution_info || data_table.new_execution_info,\n                        refunded_gas = data_table.refunded_gas,\n                        effective_gas_price = data_table.effective_gas_price,\n                        updated_at = NOW()\n                    FROM\n                        (\n                            SELECT\n                                UNNEST($2::bytea[]) AS hash,\n                                UNNEST($3::INTEGER[]) AS index_in_block,\n                                UNNEST($4::VARCHAR[]) AS error,\n                                UNNEST($5::jsonb[]) AS new_execution_info,\n                                UNNEST($6::BIGINT[]) AS refunded_gas,\n                                UNNEST($7::NUMERIC[]) AS effective_gas_price\n                        ) AS data_table\n                    WHERE\n                        transactions.hash = data_table.hash\n                    "
  },
  "b678edd9f6ea97b8f086566811f651aa072f030c70a5e6de38843a1d9afdf329": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                INSERT INTO\n                    commitments (l1_batch_number, events_queue_commitment, bootloader_initial_content_commitment)\n                VALUES\n                    ($1, $2, $3)\n                ON CONFLICT (l1_batch_number) DO NOTHING\n                "
  },
  "b75e3d2fecbf5d85e93848b7a35180abbd76956e073432af8d8500327b74e488": {
    "describe": {
      "columns": [
        {
          "name": "version",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n            SELECT\n                VERSION\n            FROM\n                compiler_versions\n            WHERE\n                compiler = $1\n            ORDER BY\n                VERSION\n            "
  },
  "b7bf6999002dd89dc1224468ca79c9a85e3c24fca1bf87905f7fc68fe2ce3276": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE transactions\n                SET\n                    l1_batch_number = $3,\n                    l1_batch_tx_index = data_table.l1_batch_tx_index,\n                    updated_at = NOW()\n                FROM\n                    (\n                        SELECT\n                            UNNEST($1::INT[]) AS l1_batch_tx_index,\n                            UNNEST($2::bytea[]) AS hash\n                    ) AS data_table\n                WHERE\n                    transactions.hash = data_table.hash\n                "
  },
  "bb1904a01a3860b5440ae23763d6d5ee4341edadb8a86b459a07427b7e265e98": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 6,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "bloom",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 9,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 10,
          "type_info": "Jsonb"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 11,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 15,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 17,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "pubdata_input",
          "ordinal": 19,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                number,\n                l1_tx_count,\n                l2_tx_count,\n                timestamp,\n                is_finished,\n                fee_account_address,\n                l2_to_l1_logs,\n                l2_to_l1_messages,\n                bloom,\n                priority_ops_onchain_data,\n                used_contract_hashes,\n                base_fee_per_gas,\n                l1_gas_price,\n                l2_fair_gas_price,\n                bootloader_code_hash,\n                default_aa_code_hash,\n                protocol_version,\n                compressed_state_diffs,\n                system_logs,\n                pubdata_input\n            FROM\n                l1_batches\n            WHERE\n                number = $1\n            "
  },
  "bd51c9d93b103292f5acbdb266ba4b4e2af48907fa9321064ddb24ac02ab17cd": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                number\n            FROM\n                l1_batches\n                LEFT JOIN eth_txs_history AS commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id)\n            WHERE\n                commit_tx.confirmed_at IS NOT NULL\n            ORDER BY\n                number DESC\n            LIMIT\n                1\n            "
  },
  "bd74435dc6dba3f4173858682ee5661d1df4ec053797d75cfd32272be4f485e7": {
    "describe": {
      "columns": [
        {
          "name": "key!",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "address!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "miniblock_number!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number!",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "index",
          "ordinal": 5,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                storage_logs.key AS \"key!\",\n                storage_logs.value AS \"value!\",\n                storage_logs.address AS \"address!\",\n                storage_logs.miniblock_number AS \"miniblock_number!\",\n                initial_writes.l1_batch_number AS \"l1_batch_number!\",\n                initial_writes.index\n            FROM\n                (\n                    SELECT\n                        hashed_key,\n                        MAX(ARRAY[miniblock_number, operation_number]::INT[]) AS op\n                    FROM\n                        storage_logs\n                    WHERE\n                        miniblock_number <= $1\n                        AND hashed_key >= $2\n                        AND hashed_key < $3\n                    GROUP BY\n                        hashed_key\n                    ORDER BY\n                        hashed_key\n                ) AS keys\n                INNER JOIN storage_logs ON keys.hashed_key = storage_logs.hashed_key\n                AND storage_logs.miniblock_number = keys.op[1]\n                AND storage_logs.operation_number = keys.op[2]\n                INNER JOIN initial_writes ON keys.hashed_key = initial_writes.hashed_key;\n            "
  },
  "be16d820c124dba9f4a272f54f0b742349e78e6e4ce3e7c9a0dcf6447eedc6d8": {
    "describe": {
      "columns": [
        {
          "name": "miniblock_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "log_index_in_miniblock",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "log_index_in_tx",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "block_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "shard_id",
          "ordinal": 6,
          "type_info": "Int4"
        },
        {
          "name": "is_service",
          "ordinal": 7,
          "type_info": "Bool"
        },
        {
          "name": "tx_index_in_miniblock",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "tx_index_in_l1_batch",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "sender",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 12,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        null,
        null,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                miniblock_number,\n                log_index_in_miniblock,\n                log_index_in_tx,\n                tx_hash,\n                NULL::bytea AS \"block_hash\",\n                NULL::BIGINT AS \"l1_batch_number?\",\n                shard_id,\n                is_service,\n                tx_index_in_miniblock,\n                tx_index_in_l1_batch,\n                sender,\n                key,\n                value\n            FROM\n                l2_to_l1_logs\n            WHERE\n                tx_hash = $1\n            ORDER BY\n                log_index_in_tx ASC\n            "
  },
  "bfb80956a18eabf266f5b5a9d62912d57f8eb2a38bdb7884fc812a2897a3a660": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n            UPDATE witness_inputs_fri\n            SET\n                status = 'queued',\n                updated_at = NOW(),\n                processing_started_at = NOW()\n            WHERE\n                (\n                    status = 'in_progress'\n                    AND processing_started_at <= NOW() - $1::INTERVAL\n                    AND attempts < $2\n                )\n                OR (\n                    status = 'in_gpu_proof'\n                    AND processing_started_at <= NOW() - $1::INTERVAL\n                    AND attempts < $2\n                )\n                OR (\n                    status = 'failed'\n                    AND attempts < $2\n                )\n            RETURNING\n                l1_batch_number,\n                status,\n                attempts\n            "
  },
  "bfc84bcf0985446b337467dd1da709dbee508ad6d1cae43e477cf1bef8cb4aa9": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT DISTINCT\n                hashed_key\n            FROM\n                storage_logs\n            WHERE\n                miniblock_number BETWEEN $1 AND $2\n            "
  },
  "c038cecd8184e5e8d9f498116bff995b654adfe328cb825a44ad36b4bf9ec8f2": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "topic1",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic2",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "topic3",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "topic4",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "block_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "miniblock_number",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "tx_index_in_block",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_block",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_tx",
          "ordinal": 12,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                        SELECT\n                            address,\n                            topic1,\n                            topic2,\n                            topic3,\n                            topic4,\n                            value,\n                            NULL::bytea AS \"block_hash\",\n                            NULL::BIGINT AS \"l1_batch_number?\",\n                            miniblock_number,\n                            tx_hash,\n                            tx_index_in_block,\n                            event_index_in_block,\n                            event_index_in_tx\n                        FROM\n                            events\n                        WHERE\n                            tx_hash = $1\n                        ORDER BY\n                            miniblock_number ASC,\n                            event_index_in_block ASC\n                        "
  },
  "c03df29f4661fa47c1412bd82ba379f3b2e9ff1bc6e8e38f473fb4950c8e4b77": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                COUNT(*) AS \"count!\"\n            FROM\n                contract_verification_requests\n            WHERE\n                status = 'queued'\n            "
  },
  "c10cf20825de4d24300c7ec50d4a653852f7e43670076eb2ebcd49542a870539": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                INSERT INTO\n                    scheduler_dependency_tracker_fri (l1_batch_number, status, created_at, updated_at)\n                VALUES\n                    ($1, 'waiting_for_proofs', NOW(), NOW())\n                ON CONFLICT (l1_batch_number) DO\n                UPDATE\n                SET\n                    updated_at = NOW()\n                "
  },
  "c139df45a977290d1c2c7987fb9c1d66aeaeb6e2d36fddcf96775f01716a8a74": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            DELETE FROM storage_logs\n            WHERE\n                miniblock_number > $1\n            "
  },
  "c14837e92dbb02f2fde7109f524432d865852afe0c60e11a2c1800d30599aa61": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n            DELETE FROM compiler_versions\n            WHERE\n                compiler = $1\n            "
  },
  "c192377c08abab9306c5b0844368aa0f8525832cb4075e831c0d4b23c5675b99": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT\n                    bytecode\n                FROM\n                    (\n                        SELECT\n                            *\n                        FROM\n                            storage_logs\n                        WHERE\n                            storage_logs.hashed_key = $1\n                            AND storage_logs.miniblock_number <= $2\n                        ORDER BY\n                            storage_logs.miniblock_number DESC,\n                            storage_logs.operation_number DESC\n                        LIMIT\n                            1\n                    ) t\n                    JOIN factory_deps ON value = factory_deps.bytecode_hash\n                WHERE\n                    value != $3\n                "
  },
  "c23d5ff919ade5898c6a912780ae899e360650afccb34f5cc301b5cbac4a3d36": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE prover_jobs_fri\n            SET\n                status = $1,\n                updated_at = NOW()\n            WHERE\n                id = $2\n            "
  },
  "c36abacc705a2244d423599779e38d60d6e93bcb34fd20422e227714fccbf6b7": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 2,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                address,\n                key,\n                value\n            FROM\n                storage_logs\n            WHERE\n                miniblock_number BETWEEN (\n                    SELECT\n                        MIN(number)\n                    FROM\n                        miniblocks\n                    WHERE\n                        l1_batch_number = $1\n                ) AND (\n                    SELECT\n                        MAX(number)\n                    FROM\n                        miniblocks\n                    WHERE\n                        l1_batch_number = $1\n                )\n            ORDER BY\n                miniblock_number,\n                operation_number\n            "
  },
  "c3b76b8030d4b5266242619f091c5cffe6869add3e43c71390a9a921b8ff48c5": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                id\n            FROM\n                prover_protocol_versions\n            WHERE\n                recursion_circuits_set_vks_hash = $1\n                AND recursion_leaf_level_vk_hash = $2\n                AND recursion_node_level_vk_hash = $3\n                AND recursion_scheduler_level_vk_hash = $4\n            "
  },
  "c41312e01aa66897552e8be9acc8d43c31ec7441a7f6c5040e120810ebbb72f7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int2",
          "Text",
          "Int2",
          "Int4",
          "Int4",
          "Bool",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO\n                        prover_jobs_fri (\n                            l1_batch_number,\n                            circuit_id,\n                            circuit_blob_url,\n                            aggregation_round,\n                            sequence_number,\n                            depth,\n                            is_node_final_proof,\n                            protocol_version,\n                            status,\n                            created_at,\n                            updated_at\n                        )\n                    VALUES\n                        ($1, $2, $3, $4, $5, $6, $7, $8, 'queued', NOW(), NOW())\n                    ON CONFLICT (l1_batch_number, aggregation_round, circuit_id, depth, sequence_number) DO\n                    UPDATE\n                    SET\n                        updated_at = NOW()\n                    "
  },
  "c4ea7812861a283448095acbb1164420a25eef488de2b67e91ed39657667bd4a": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    l1_address,\n                    l2_address\n                FROM\n                    tokens\n                "
  },
  "c5656667e5610ffb33e7b977ac92b7c4d79cbd404e0267794ec203df0cbb169d": {
    "describe": {
      "columns": [
        {
          "name": "number!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                COALESCE(MAX(number), 0) AS \"number!\"\n            FROM\n                l1_batches\n            WHERE\n                eth_prove_tx_id IS NOT NULL\n            "
  },
  "c5d6e1d5d834409bd793c8ce1fb2c212918b31dabebf08a84efdfe1feee85765": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            UPDATE scheduler_dependency_tracker_fri\n            SET\n                status = 'queuing'\n            WHERE\n                l1_batch_number IN (\n                    SELECT\n                        l1_batch_number\n                    FROM\n                        scheduler_dependency_tracker_fri\n                    WHERE\n                        status != 'queued'\n                        AND circuit_1_final_prover_job_id IS NOT NULL\n                        AND circuit_2_final_prover_job_id IS NOT NULL\n                        AND circuit_3_final_prover_job_id IS NOT NULL\n                        AND circuit_4_final_prover_job_id IS NOT NULL\n                        AND circuit_5_final_prover_job_id IS NOT NULL\n                        AND circuit_6_final_prover_job_id IS NOT NULL\n                        AND circuit_7_final_prover_job_id IS NOT NULL\n                        AND circuit_8_final_prover_job_id IS NOT NULL\n                        AND circuit_9_final_prover_job_id IS NOT NULL\n                        AND circuit_10_final_prover_job_id IS NOT NULL\n                        AND circuit_11_final_prover_job_id IS NOT NULL\n                        AND circuit_12_final_prover_job_id IS NOT NULL\n                        AND circuit_13_final_prover_job_id IS NOT NULL\n                )\n            RETURNING\n                l1_batch_number;\n            "
  },
  "c689a86a40c882a0d990a17ecc32290b2a47043fc88d4a2232461434a3f4a57d": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status!",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    COUNT(*) AS \"count!\",\n                    status AS \"status!\"\n                FROM\n                    prover_jobs\n                GROUP BY\n                    status\n                "
  },
  "c6d523c6ae857022318350a2f210d7eaeeb4549ed59b58f8d984be2a22a80355": {
    "describe": {
      "columns": [
        {
          "name": "max",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Numeric"
        ]
      }
    },
    "query": "\n            SELECT\n                MAX(l1_batches.number)\n            FROM\n                l1_batches\n                JOIN eth_txs ON (l1_batches.eth_commit_tx_id = eth_txs.id)\n                JOIN eth_txs_history AS commit_tx ON (eth_txs.confirmed_eth_tx_history_id = commit_tx.id)\n            WHERE\n                commit_tx.confirmed_at IS NOT NULL\n                AND eth_prove_tx_id IS NOT NULL\n                AND eth_execute_tx_id IS NULL\n                AND EXTRACT(\n                    epoch\n                    FROM\n                        commit_tx.confirmed_at\n                ) < $1\n            "
  },
  "c706a49ff54f6b424e24d061fe7ac429aac3c030f7e226a1264243d8cdae038d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Time",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE proof_compression_jobs_fri\n            SET\n                status = $1,\n                updated_at = NOW(),\n                time_taken = $2,\n                l1_proof_blob_url = $3\n            WHERE\n                l1_batch_number = $4\n            "
  },
  "c809f42a221b18a767e9dd0286503d8bd356f2f9cc249cd8b90caa5a8b5918e3": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                COUNT(*) AS \"count!\"\n            FROM\n                (\n                    SELECT\n                        *\n                    FROM\n                        storage_logs\n                    WHERE\n                        storage_logs.hashed_key = $1\n                    ORDER BY\n                        storage_logs.miniblock_number DESC,\n                        storage_logs.operation_number DESC\n                    LIMIT\n                        1\n                ) sl\n            WHERE\n                sl.value != $2\n            "
  },
  "ca9d06141265b8524ee28c55569cb21a635037d89ce24dd3ad58ffaadb59594a": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                l1_batch_number\n            FROM\n                proof_compression_jobs_fri\n            WHERE\n                status <> 'successful'\n            ORDER BY\n                l1_batch_number ASC\n            LIMIT\n                1\n            "
  },
  "cb98d84fc34af1e4a4c2f427c5bb4afd384063ae394a847b26304dd18d490ab4": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                timestamp,\n                hash\n            FROM\n                l1_batches\n            WHERE\n                number = $1\n            "
  },
  "cd76f54e1b9b4c0cf3044d3b767714e290f88ea1f20092a0278718fecda63caf": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prover_input",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 9,
          "type_info": "Time"
        },
        {
          "name": "aggregation_round",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "result",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "sequence_number",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "attempts",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "proccesed_by",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 17,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "TextArray",
          "Int4Array"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET\n                    status = 'in_progress',\n                    attempts = attempts + 1,\n                    updated_at = NOW(),\n                    processing_started_at = NOW()\n                WHERE\n                    id = (\n                        SELECT\n                            id\n                        FROM\n                            prover_jobs\n                        WHERE\n                            circuit_type = ANY ($1)\n                            AND status = 'queued'\n                            AND protocol_version = ANY ($2)\n                        ORDER BY\n                            aggregation_round DESC,\n                            l1_batch_number ASC,\n                            id ASC\n                        LIMIT\n                            1\n                        FOR UPDATE\n                            SKIP LOCKED\n                    )\n                RETURNING\n                    prover_jobs.*\n                "
  },
  "cddf48514aa2aa249d0530d44c741368993009bb4bd90c2ad177ce56317aa04c": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 34,
          "type_info": "ByteaArray"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 36,
          "type_info": "Int4"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "pubdata_input",
          "ordinal": 39,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                number,\n                timestamp,\n                is_finished,\n                l1_tx_count,\n                l2_tx_count,\n                fee_account_address,\n                bloom,\n                priority_ops_onchain_data,\n                hash,\n                parent_hash,\n                commitment,\n                compressed_write_logs,\n                compressed_contracts,\n                eth_prove_tx_id,\n                eth_commit_tx_id,\n                eth_execute_tx_id,\n                merkle_root_hash,\n                l2_to_l1_logs,\n                l2_to_l1_messages,\n                used_contract_hashes,\n                compressed_initial_writes,\n                compressed_repeated_writes,\n                l2_l1_compressed_messages,\n                l2_l1_merkle_root,\n                l1_gas_price,\n                l2_fair_gas_price,\n                rollup_last_leaf_index,\n                zkporter_is_available,\n                bootloader_code_hash,\n                default_aa_code_hash,\n                base_fee_per_gas,\n                aux_data_hash,\n                pass_through_data_hash,\n                meta_parameters_hash,\n                system_logs,\n                compressed_state_diffs,\n                protocol_version,\n                events_queue_commitment,\n                bootloader_initial_content_commitment,\n                pubdata_input\n            FROM\n                (\n                    SELECT\n                        l1_batches.*,\n                        ROW_NUMBER() OVER (\n                            ORDER BY\n                                number ASC\n                        ) AS ROW_NUMBER\n                    FROM\n                        l1_batches\n                    WHERE\n                        eth_commit_tx_id IS NOT NULL\n                        AND l1_batches.skip_proof = TRUE\n                        AND l1_batches.number > $1\n                    ORDER BY\n                        number\n                    LIMIT\n                        $2\n                ) inn\n                LEFT JOIN commitments ON commitments.l1_batch_number = inn.number\n            WHERE\n                number - ROW_NUMBER = $1\n            "
  },
  "ce5779092feb8a3d3e2c5e395783e67f08f2ead5f55bfb6594e50346bf9cf2ef": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 1,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        null,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    MIN(l1_batch_number) AS \"l1_batch_number!\",\n                    circuit_id,\n                    aggregation_round\n                FROM\n                    prover_jobs_fri\n                WHERE\n                    status IN ('queued', 'in_gpu_proof', 'in_progress', 'failed')\n                GROUP BY\n                    circuit_id,\n                    aggregation_round\n                "
  },
  "cea9fe027a6a0ada827f23b48ac32432295b2f7ee40bf13522a6edbd236f1970": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key!",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "value?",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                u.hashed_key AS \"hashed_key!\",\n                (\n                    SELECT\n                        value\n                    FROM\n                        storage_logs\n                    WHERE\n                        hashed_key = u.hashed_key\n                        AND miniblock_number <= $2\n                    ORDER BY\n                        miniblock_number DESC,\n                        operation_number DESC\n                    LIMIT\n                        1\n                ) AS \"value?\"\n            FROM\n                UNNEST($1::bytea[]) AS u (hashed_key)\n            "
  },
  "d14b52df2cd9f9e484c60ba00383b438f14b68535111cf2cedd363fc646aac99": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                timestamp\n            FROM\n                l1_batches\n            WHERE\n                eth_commit_tx_id IS NULL\n                AND number > 0\n            ORDER BY\n                number\n            LIMIT\n                1\n            "
  },
  "d17221312e645b0287ff9238954512b528e7928087351a32c96b44d538dfb9ee": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prover_input",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 9,
          "type_info": "Time"
        },
        {
          "name": "aggregation_round",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "result",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "sequence_number",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "attempts",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "proccesed_by",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 16,
          "type_info": "Bool"
        },
        {
          "name": "protocol_version",
          "ordinal": 17,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int4Array"
        ]
      }
    },
    "query": "\n            UPDATE prover_jobs\n            SET\n                status = 'in_progress',\n                attempts = attempts + 1,\n                updated_at = NOW(),\n                processing_started_at = NOW()\n            WHERE\n                id = (\n                    SELECT\n                        id\n                    FROM\n                        prover_jobs\n                    WHERE\n                        status = 'queued'\n                        AND protocol_version = ANY ($1)\n                    ORDER BY\n                        aggregation_round DESC,\n                        l1_batch_number ASC,\n                        id ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                prover_jobs.*\n            "
  },
  "d1b261f4057e4113b96eb87c9e20015eeb3ef2643ceda3024504a471b24d1283": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 16,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 18,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 19,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 20,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 22,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 23,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 24,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 25,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 26,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 27,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 30,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 31,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 32,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 34,
          "type_info": "Int4"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "system_logs",
          "ordinal": 36,
          "type_info": "ByteaArray"
        },
        {
          "name": "events_queue_commitment",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "bootloader_initial_content_commitment",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "pubdata_input",
          "ordinal": 39,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                number,\n                timestamp,\n                is_finished,\n                l1_tx_count,\n                l2_tx_count,\n                fee_account_address,\n                bloom,\n                priority_ops_onchain_data,\n                hash,\n                parent_hash,\n                commitment,\n                compressed_write_logs,\n                compressed_contracts,\n                eth_prove_tx_id,\n                eth_commit_tx_id,\n                eth_execute_tx_id,\n                merkle_root_hash,\n                l2_to_l1_logs,\n                l2_to_l1_messages,\n                used_contract_hashes,\n                compressed_initial_writes,\n                compressed_repeated_writes,\n                l2_l1_compressed_messages,\n                l2_l1_merkle_root,\n                l1_gas_price,\n                l2_fair_gas_price,\n                rollup_last_leaf_index,\n                zkporter_is_available,\n                bootloader_code_hash,\n                default_aa_code_hash,\n                base_fee_per_gas,\n                aux_data_hash,\n                pass_through_data_hash,\n                meta_parameters_hash,\n                protocol_version,\n                compressed_state_diffs,\n                system_logs,\n                events_queue_commitment,\n                bootloader_initial_content_commitment,\n                pubdata_input\n            FROM\n                l1_batches\n                LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n            WHERE\n                number = 0\n                OR eth_commit_tx_id IS NOT NULL\n                AND commitment IS NOT NULL\n            ORDER BY\n                number DESC\n            LIMIT\n                1\n            "
  },
  "d3b09cbcddf6238b358d32d57678242aad3e9a47400f6d6837a35f4c54a216b9": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                number\n            FROM\n                l1_batches\n                LEFT JOIN eth_txs_history AS execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id)\n            WHERE\n                execute_tx.confirmed_at IS NOT NULL\n            ORDER BY\n                number DESC\n            LIMIT\n                1\n            "
  },
  "d70cfc158e31dd2d5c942d24f81fd17f833fb15b58b0110c7cc566946db98e76": {
    "describe": {
      "columns": [
        {
          "name": "block_hash?",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "address!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic1!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "topic2!",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "topic3!",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "topic4!",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "miniblock_number!",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "tx_hash!",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "tx_index_in_block!",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_block!",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_tx!",
          "ordinal": 12,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                WITH\n                    events_select AS (\n                        SELECT\n                            address,\n                            topic1,\n                            topic2,\n                            topic3,\n                            topic4,\n                            value,\n                            miniblock_number,\n                            tx_hash,\n                            tx_index_in_block,\n                            event_index_in_block,\n                            event_index_in_tx\n                        FROM\n                            events\n                        WHERE\n                            miniblock_number > $1\n                        ORDER BY\n                            miniblock_number ASC,\n                            event_index_in_block ASC\n                    )\n                SELECT\n                    miniblocks.hash AS \"block_hash?\",\n                    address AS \"address!\",\n                    topic1 AS \"topic1!\",\n                    topic2 AS \"topic2!\",\n                    topic3 AS \"topic3!\",\n                    topic4 AS \"topic4!\",\n                    value AS \"value!\",\n                    miniblock_number AS \"miniblock_number!\",\n                    miniblocks.l1_batch_number AS \"l1_batch_number?\",\n                    tx_hash AS \"tx_hash!\",\n                    tx_index_in_block AS \"tx_index_in_block!\",\n                    event_index_in_block AS \"event_index_in_block!\",\n                    event_index_in_tx AS \"event_index_in_tx!\"\n                FROM\n                    events_select\n                    INNER JOIN miniblocks ON events_select.miniblock_number = miniblocks.number\n                ORDER BY\n                    miniblock_number ASC,\n                    event_index_in_block ASC\n                "
  },
  "d712707e47e143c52330ea6e0513d2839f0f928c06b8020eecec38e895f99b42": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                address,\n                key\n            FROM\n                protective_reads\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "d7e8eabd7b43ff62838fbc847e4813d2b2d411bd5faf8306cd48db500532b711": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n            SELECT\n                l1_batch_number,\n                status\n            FROM\n                proof_compression_jobs_fri\n            WHERE\n                l1_batch_number = (\n                    SELECT\n                        MIN(l1_batch_number)\n                    FROM\n                        proof_compression_jobs_fri\n                    WHERE\n                        status = $1\n                        OR status = $2\n                )\n            "
  },
  "d7ed82f0d012f72374edb2ebcec33c83477d65a6f8cb2673f67b3148cd95b436": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                COUNT(*)\n            FROM\n                eth_txs\n            WHERE\n                has_failed = TRUE\n            "
  },
  "d8e0f98a67ffb53a1caa6820f8475da2787332deca5708d1d08730cdbfc73541": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 6,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "bloom",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 9,
          "type_info": "ByteaArray"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 10,
          "type_info": "Jsonb"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 11,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 15,
          "type_info": "Bytea"
        },
        {
          "name": "protocol_version",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "system_logs",
          "ordinal": 17,
          "type_info": "ByteaArray"
        },
        {
          "name": "compressed_state_diffs",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "pubdata_input",
          "ordinal": 19,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                number,\n                l1_tx_count,\n                l2_tx_count,\n                timestamp,\n                is_finished,\n                fee_account_address,\n                l2_to_l1_logs,\n                l2_to_l1_messages,\n                bloom,\n                priority_ops_onchain_data,\n                used_contract_hashes,\n                base_fee_per_gas,\n                l1_gas_price,\n                l2_fair_gas_price,\n                bootloader_code_hash,\n                default_aa_code_hash,\n                protocol_version,\n                system_logs,\n                compressed_state_diffs,\n                pubdata_input\n            FROM\n                l1_batches\n            WHERE\n                eth_commit_tx_id = $1\n                OR eth_prove_tx_id = $1\n                OR eth_execute_tx_id = $1\n            "
  },
  "d8e3ee346375e4b6a8b2c73a3827e88abd0f8164c2413dc83c91c29665ca645e": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2"
        ]
      }
    },
    "query": "\n            UPDATE leaf_aggregation_witness_jobs_fri\n            SET\n                status = 'queued',\n                updated_at = NOW(),\n                processing_started_at = NOW()\n            WHERE\n                (\n                    status = 'in_progress'\n                    AND processing_started_at <= NOW() - $1::INTERVAL\n                    AND attempts < $2\n                )\n                OR (\n                    status = 'failed'\n                    AND attempts < $2\n                )\n            RETURNING\n                id,\n                status,\n                attempts\n            "
  },
  "d90ed4c0f67c1826f9be90bb5566aba34bfab67494fee578613b03ef7255324d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Jsonb"
        ]
      }
    },
    "query": "\n            UPDATE miniblocks\n            SET\n                consensus = $2\n            WHERE\n                number = $1\n            "
  },
  "da51a5220c2b964303292592c34e8ee5e54b170de9da863bbdbc79e3f206640b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "\n            DELETE FROM storage\n            WHERE\n                hashed_key = ANY ($1)\n            "
  },
  "db3e74f0e83ffbf84a6d61e560f2060fbea775dc185f639139fbfd23e4d5f3c6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE node_aggregation_witness_jobs_fri\n            SET\n                status = 'successful',\n                updated_at = NOW(),\n                time_taken = $1\n            WHERE\n                id = $2\n            "
  },
  "dc16d0fac093a52480b66dfcb5976fb01e6629e8c982c265f2af1d5000090572": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COUNT(miniblocks.number) FROM miniblocks WHERE l1_batch_number IS NULL"
  },
  "dc481f59aae632ff6f5fa23f5c5c82627a936f7ea9f6c354eca4bea76fac6b10": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                MAX(number) AS \"number\"\n            FROM\n                l1_batches\n            WHERE\n                hash IS NOT NULL\n            "
  },
  "dc764e1636c4e958753c1fd54562e2ca92fdfdf01cfd0b11f5ce24f0458a5e48": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bool",
          "Bytea",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE l1_batches\n            SET\n                hash = $1,\n                merkle_root_hash = $2,\n                compressed_repeated_writes = $3,\n                compressed_initial_writes = $4,\n                l2_l1_compressed_messages = $5,\n                l2_l1_merkle_root = $6,\n                zkporter_is_available = $7,\n                parent_hash = $8,\n                rollup_last_leaf_index = $9,\n                pass_through_data_hash = $10,\n                meta_parameters_hash = $11,\n                compressed_state_diffs = $12,\n                updated_at = NOW()\n            WHERE\n                number = $13\n                AND hash IS NULL\n            "
  },
  "dd55e46dfa5ba3692d9620088a3550b8db817630d1a9341db4a1f453f12e64fb": {
    "describe": {
      "columns": [
        {
          "name": "status",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "compilation_errors",
          "ordinal": 2,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                status,\n                error,\n                compilation_errors\n            FROM\n                contract_verification_requests\n            WHERE\n                id = $1\n            "
  },
  "dea22358feed1418430505767d03aa4239d3a8be71b47178b4b8fb11fe898b31": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE l1_batches\n                    SET\n                        eth_execute_tx_id = $1,\n                        updated_at = NOW()\n                    WHERE\n                        number BETWEEN $2 AND $3\n                    "
  },
  "df00e33809768120e395d8f740770a4e629b2a1cde641e74e4e55bb100df809f": {
    "describe": {
      "columns": [
        {
          "name": "attempts",
          "ordinal": 0,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                attempts\n            FROM\n                prover_jobs_fri\n            WHERE\n                id = $1\n            "
  },
  "df3b08549a11729fb475341b8f38f8af02aa297d85a2695c5f448ed14b2d7386": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Int8",
          "Bytea",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                snapshot_recovery (\n                    l1_batch_number,\n                    l1_batch_root_hash,\n                    miniblock_number,\n                    miniblock_root_hash,\n                    last_finished_chunk_id,\n                    total_chunk_count,\n                    updated_at,\n                    created_at\n                )\n            VALUES\n                ($1, $2, $3, $4, $5, $6, NOW(), NOW())\n            ON CONFLICT (l1_batch_number) DO\n            UPDATE\n            SET\n                l1_batch_number = excluded.l1_batch_number,\n                l1_batch_root_hash = excluded.l1_batch_root_hash,\n                miniblock_number = excluded.miniblock_number,\n                miniblock_root_hash = excluded.miniblock_root_hash,\n                last_finished_chunk_id = excluded.last_finished_chunk_id,\n                total_chunk_count = excluded.total_chunk_count,\n                updated_at = excluded.updated_at\n            "
  },
  "e073cfdc7a00559994ce04eca15f35d55901fb1e6805f23413ea43e3637540a0": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "bytecode_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "\n            SELECT\n                bytecode,\n                bytecode_hash\n            FROM\n                factory_deps\n            WHERE\n                bytecode_hash = ANY ($1)\n            "
  },
  "e3479d12d9dc97001cf03dc42d9b957e92cd375ec33fe16f855f319ffc0b208e": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "circuit_1_final_prover_job_id",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "circuit_2_final_prover_job_id",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "circuit_3_final_prover_job_id",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "circuit_4_final_prover_job_id",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "circuit_5_final_prover_job_id",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "circuit_6_final_prover_job_id",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "circuit_7_final_prover_job_id",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "circuit_8_final_prover_job_id",
          "ordinal": 9,
          "type_info": "Int8"
        },
        {
          "name": "circuit_9_final_prover_job_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "circuit_10_final_prover_job_id",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "circuit_11_final_prover_job_id",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "circuit_12_final_prover_job_id",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "circuit_13_final_prover_job_id",
          "ordinal": 14,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 15,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                scheduler_dependency_tracker_fri\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "e5a90d17b2c25744df4585b53678c7ffd9a04eae27afbdf37a6ba8ff7ac85f3b": {
    "describe": {
      "columns": [
        {
          "name": "serialized_events_queue",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                serialized_events_queue\n            FROM\n                events_queue\n            WHERE\n                l1_batch_number = $1\n            "
  },
  "e63cc86a8d527dae2905b2af6a66bc6419ba51514519652e055c769b096015f6": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "\n                DELETE FROM transactions\n                WHERE\n                    miniblock_number IS NULL\n                    AND received_at < NOW() - $1::INTERVAL\n                    AND is_priority = FALSE\n                    AND error IS NULL\n                RETURNING\n                    hash\n                "
  },
  "e6a3efeffe1b3520cc9b1751e2c842c27546b3fd41f7d8a784ca58579856621b": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "attempts",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET\n                    status = 'failed',\n                    error = $1,\n                    updated_at = NOW()\n                WHERE\n                    id = $2\n                RETURNING\n                    l1_batch_number,\n                    attempts\n                "
  },
  "e71c39b93ceba5416ff3d988290cb35d4d07d47f33fe1a5b9e9fe1f0ae09b705": {
    "describe": {
      "columns": [
        {
          "name": "usd_price",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price_updated_at",
          "ordinal": 1,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT\n                    usd_price,\n                    usd_price_updated_at\n                FROM\n                    tokens\n                WHERE\n                    l2_address = $1\n                "
  },
  "e74a34a59e6afda689b0ec9e19071ababa66e4a443fbefbfffca72b7540b075b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                proof_compression_jobs_fri (l1_batch_number, status, created_at, updated_at)\n            VALUES\n                ($1, $2, NOW(), NOW())\n            ON CONFLICT (l1_batch_number) DO NOTHING\n            "
  },
  "e76217231b4d896118e9630de9485b19e1294b3aa6e084d2051bb532408672be": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE transactions\n                SET\n                    in_mempool = FALSE\n                WHERE\n                    in_mempool = TRUE\n                "
  },
  "e9adf5b5a1ab84c20a514a7775f91a9984685eaaaa0a8b223410d560a15a3034": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "sequence_number",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "depth",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "is_node_final_proof",
          "ordinal": 6,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int2Array",
          "Int2Array",
          "Int4Array",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE prover_jobs_fri\n            SET\n                status = 'in_progress',\n                attempts = attempts + 1,\n                processing_started_at = NOW(),\n                updated_at = NOW(),\n                picked_by = $4\n            WHERE\n                id = (\n                    SELECT\n                        pj.id\n                    FROM\n                        (\n                            SELECT\n                                *\n                            FROM\n                                UNNEST($1::SMALLINT[], $2::SMALLINT[])\n                        ) AS tuple (circuit_id, ROUND)\n                        JOIN LATERAL (\n                            SELECT\n                                *\n                            FROM\n                                prover_jobs_fri AS pj\n                            WHERE\n                                pj.status = 'queued'\n                                AND pj.protocol_version = ANY ($3)\n                                AND pj.circuit_id = tuple.circuit_id\n                                AND pj.aggregation_round = tuple.round\n                            ORDER BY\n                                pj.l1_batch_number ASC,\n                                pj.id ASC\n                            LIMIT\n                                1\n                        ) AS pj ON TRUE\n                    ORDER BY\n                        pj.l1_batch_number ASC,\n                        pj.aggregation_round DESC,\n                        pj.id ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                prover_jobs_fri.id,\n                prover_jobs_fri.l1_batch_number,\n                prover_jobs_fri.circuit_id,\n                prover_jobs_fri.aggregation_round,\n                prover_jobs_fri.sequence_number,\n                prover_jobs_fri.depth,\n                prover_jobs_fri.is_node_final_proof\n            "
  },
  "e9ca863d6e77edd39a9fc55700a6686e655206601854799139c22c017a214744": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int2",
          "Int4",
          "Text",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n            INSERT INTO\n                node_aggregation_witness_jobs_fri (\n                    l1_batch_number,\n                    circuit_id,\n                    depth,\n                    aggregations_url,\n                    number_of_dependent_jobs,\n                    protocol_version,\n                    status,\n                    created_at,\n                    updated_at\n                )\n            VALUES\n                ($1, $2, $3, $4, $5, $6, 'waiting_for_proofs', NOW(), NOW())\n            ON CONFLICT (l1_batch_number, circuit_id, depth) DO\n            UPDATE\n            SET\n                updated_at = NOW()\n            "
  },
  "ea904aa930d602d33b6fbc1bf1178a8a0ec739f4ddec8ffeb3a87253aeb18d30": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            DELETE FROM miniblocks\n            WHERE\n                number > $1\n            "
  },
  "ec04b89218111a5dc8d5ade506ac3465e2211ef3013386feb12d4cc04e0eade9": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_id",
          "ordinal": 2,
          "type_info": "Int2"
        },
        {
          "name": "aggregation_round",
          "ordinal": 3,
          "type_info": "Int2"
        },
        {
          "name": "sequence_number",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "depth",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "is_node_final_proof",
          "ordinal": 6,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Time",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE prover_jobs_fri\n            SET\n                status = 'successful',\n                updated_at = NOW(),\n                time_taken = $1,\n                proof_blob_url = $2\n            WHERE\n                id = $3\n            RETURNING\n                prover_jobs_fri.id,\n                prover_jobs_fri.l1_batch_number,\n                prover_jobs_fri.circuit_id,\n                prover_jobs_fri.aggregation_round,\n                prover_jobs_fri.sequence_number,\n                prover_jobs_fri.depth,\n                prover_jobs_fri.is_node_final_proof\n            "
  },
  "edc61e1285bf6d3837acc67af4f15aaade450980719933089824eb8c494d64a4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE witness_inputs_fri\n            SET\n                status = 'successful',\n                updated_at = NOW(),\n                time_taken = $1\n            WHERE\n                l1_batch_number = $2\n            "
  },
  "ee17d2b3edfe705d14811e3938d4312b2b780563a9fde48bae5e51650475670f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "priority_fee_per_gas",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "confirmed_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "signed_raw_tx",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "sent_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                eth_txs_history\n            WHERE\n                eth_tx_id = $1\n            ORDER BY\n                created_at DESC\n            LIMIT\n                1\n            "
  },
  "ef331469f78c6ff68a254a15b55d056cc9bae25bc070c5de8424f88fab20e5ea": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                l1_batch_number,\n                l1_batch_tx_index\n            FROM\n                transactions\n            WHERE\n                hash = $1\n            "
  },
  "ef687be83e496d6647e4dfef9eabae63443c51deb818dd0affd1a0949b161737": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                INSERT INTO\n                    proof_compression_jobs_fri (l1_batch_number, fri_proof_blob_url, status, created_at, updated_at)\n                VALUES\n                    ($1, $2, $3, NOW(), NOW())\n                ON CONFLICT (l1_batch_number) DO NOTHING\n                "
  },
  "efe2a4ce4ba09e40ac7401f19ac5a42a0d521ffa33594c7861d786741d303f30": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Int4",
          "Int2",
          "Text",
          "Text",
          "Int2"
        ]
      }
    },
    "query": "\n                    INSERT INTO\n                        gpu_prover_queue (\n                            instance_host,\n                            instance_port,\n                            queue_capacity,\n                            queue_free_slots,\n                            instance_status,\n                            specialized_prover_group_id,\n                            region,\n                            zone,\n                            num_gpu,\n                            created_at,\n                            updated_at\n                        )\n                    VALUES\n                        (CAST($1::TEXT AS inet), $2, $3, $3, 'available', $4, $5, $6, $7, NOW(), NOW())\n                    ON CONFLICT (instance_host, instance_port, region, zone) DO\n                    UPDATE\n                    SET\n                        instance_status = 'available',\n                        queue_capacity = $3,\n                        queue_free_slots = $3,\n                        specialized_prover_group_id = $4,\n                        region = $5,\n                        zone = $6,\n                        num_gpu = $7,\n                        updated_at = NOW()\n                    "
  },
  "f012d0922265269746396dac8f25ff66f2c3b2b83d45360818a8782e56aa3d66": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key?",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "value?",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "index",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "ByteaArray",
          "ByteaArray"
        ]
      }
    },
    "query": "\n            WITH\n                sl AS (\n                    SELECT\n                        (\n                            SELECT\n                                ARRAY[hashed_key, value] AS kv\n                            FROM\n                                storage_logs\n                            WHERE\n                                storage_logs.miniblock_number = $1\n                                AND storage_logs.hashed_key >= u.start_key\n                                AND storage_logs.hashed_key <= u.end_key\n                            ORDER BY\n                                storage_logs.hashed_key\n                            LIMIT\n                                1\n                        )\n                    FROM\n                        UNNEST($2::bytea[], $3::bytea[]) AS u (start_key, end_key)\n                )\n            SELECT\n                sl.kv[1] AS \"hashed_key?\",\n                sl.kv[2] AS \"value?\",\n                initial_writes.index\n            FROM\n                sl\n                LEFT OUTER JOIN initial_writes ON initial_writes.hashed_key = sl.kv[1]\n            "
  },
  "f1478830e5f95cbcd0da01d3457cbb9cb8da439c7ab28fa865f53908621dc4c5": {
    "describe": {
      "columns": [
        {
          "name": "region",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "zone",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "total_gpus",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    region,\n                    zone,\n                    SUM(num_gpu) AS total_gpus\n                FROM\n                    gpu_prover_queue\n                GROUP BY\n                    region,\n                    zone\n                "
  },
  "f1a90090c192d68367e799188356efe8d41759bbdcdd6d39db93208f2664f03a": {
    "describe": {
      "columns": [
        {
          "name": "index",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n            SELECT\n                INDEX\n            FROM\n                initial_writes\n            WHERE\n                hashed_key = $1\n            "
  },
  "f22c5d136fe68bbfcee60beb304cfdc050b85e6d773b13f9699f15c335d42593": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Numeric"
        ]
      }
    },
    "query": "\n                SELECT\n                    l1_address\n                FROM\n                    tokens\n                WHERE\n                    market_volume > $1\n                "
  },
  "f303c53843a58fac4fcdedbfe2b2b33ad609b7df8e55a0cf214ea1ec6421e57a": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET\n                    status = 'queued',\n                    updated_at = NOW(),\n                    processing_started_at = NOW()\n                WHERE\n                    (\n                        status = 'in_progress'\n                        AND processing_started_at <= NOW() - $1::INTERVAL\n                        AND attempts < $2\n                    )\n                    OR (\n                        status = 'in_gpu_proof'\n                        AND processing_started_at <= NOW() - $1::INTERVAL\n                        AND attempts < $2\n                    )\n                    OR (\n                        status = 'failed'\n                        AND attempts < $2\n                    )\n                RETURNING\n                    id,\n                    status,\n                    attempts\n                "
  },
  "f39372e37160df4897f62a800694867ed765dcb9dc60754df9df8700d4244bfb": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "name",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "symbol",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "decimals",
          "ordinal": 4,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    l1_address,\n                    l2_address,\n                    NAME,\n                    symbol,\n                    decimals\n                FROM\n                    tokens\n                WHERE\n                    well_known = TRUE\n                ORDER BY\n                    symbol\n                "
  },
  "f4362a61ab05af3d71a3232d2f017db60405a887f9f7fa0ca60aa7fc879ce630": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE proof_compression_jobs_fri\n            SET\n                status = $1,\n                error = $2,\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $3\n            "
  },
  "f63586d59264eab7388ad1de823227ecaa45d76d1ba260074898fe57c059a15a": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "upgrade_id",
          "ordinal": 35,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                *\n            FROM\n                transactions\n            WHERE\n                l1_batch_number = $1\n            ORDER BY\n                miniblock_number,\n                index_in_block\n            "
  },
  "f717ca5d0890759496739a678955e6f8b7f88a0894a7f9e27fc26f93997d37c7": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE proof_compression_jobs_fri\n            SET\n                status = $1,\n                attempts = attempts + 1,\n                updated_at = NOW(),\n                processing_started_at = NOW(),\n                picked_by = $3\n            WHERE\n                l1_batch_number = (\n                    SELECT\n                        l1_batch_number\n                    FROM\n                        proof_compression_jobs_fri\n                    WHERE\n                        status = $2\n                    ORDER BY\n                        l1_batch_number ASC\n                    LIMIT\n                        1\n                    FOR UPDATE\n                        SKIP LOCKED\n                )\n            RETURNING\n                proof_compression_jobs_fri.l1_batch_number\n            "
  },
  "f91790ae5cc4b087bf942ba52dd63a1e89945f8d5e0f4da42ecf6313c4f5967e": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                MIN(number) AS \"number\"\n            FROM\n                l1_batches\n            WHERE\n                hash IS NOT NULL\n            "
  },
  "f922c0718c9dda2f285f09cbabad425bac8ed3d2780c60c9b63afbcea131f9a0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Jsonb"
        ]
      }
    },
    "query": "\n                INSERT INTO\n                    transaction_traces (tx_hash, trace, created_at, updated_at)\n                VALUES\n                    ($1, $2, NOW(), NOW())\n                "
  },
  "fcc108fd59203644ff86ded0505c7dfb7aad7261e5fc402d845aedc3b91a4e99": {
    "describe": {
      "columns": [
        {
          "name": "nonce!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                nonce AS \"nonce!\"\n            FROM\n                transactions\n            WHERE\n                initiator_address = $1\n                AND nonce >= $2\n                AND is_priority = FALSE\n                AND (\n                    miniblock_number IS NOT NULL\n                    OR error IS NULL\n                )\n            ORDER BY\n                nonce\n            "
  },
  "fcddeb96dcd1611dedb2091c1be304e8a35fd65bf37e976b7106f57c57e70b9b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Text"
        ]
      }
    },
    "query": "\n            UPDATE gpu_prover_queue_fri\n            SET\n                instance_status = 'available',\n                updated_at = NOW()\n            WHERE\n                instance_host = $1::TEXT::inet\n                AND instance_port = $2\n                AND instance_status = 'full'\n                AND zone = $3\n            "
  },
  "fde16cd2d3de03f4b61625fa453a58f82acd817932415f04bcbd05442ad80c2b": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    bytecode\n                FROM\n                    factory_deps\n                WHERE\n                    bytecode_hash = $1\n                    AND miniblock_number <= $2\n                "
  },
  "fdffa5841554286a924b217b5885d9ec9b3f628c3a4cf5e10580ea6e5e3a2429": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            UPDATE miniblocks\n            SET\n                l1_batch_number = $1\n            WHERE\n                l1_batch_number IS NULL\n            "
  },
  "fe501f86f4bf6c5b8ccc2e039a4eb09b538a67d1c39fda052c4f4ddb23ce0084": {
    "describe": {
      "columns": [
        {
          "name": "l2_to_l1_logs",
          "ordinal": 0,
          "type_info": "ByteaArray"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n                l2_to_l1_logs\n            FROM\n                l1_batches\n            WHERE\n                number = $1\n            "
  }
}