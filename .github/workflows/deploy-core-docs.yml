name: Deploy core docs

on:
  push:
    branches:
      - "main"
    tags:
      - "core-v*.*.*"
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-core-docs.yml'
  pull_request:
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-core-docs.yml'
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch, tag or commit to deploy the core docs. If empty, use the ref that triggered the workflow."
        required: false
        default: ""
      version:
        type: string
        description: "Version of the documentation to deploy"
        required: false
        default: "latest"

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  deploy-core-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      DOCS_DIR: 'docs'
      PROJECT: 'core'
      ENABLE_TESTS: false
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ inputs.ref || '' }}

      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/')
        id: extract-version
        shell: 'bash -ex {0}'
        run: |
          TAG="${{ github.ref_name }}"
          VERSION="${TAG#*-}"
          echo "version=${VERSION}" >> "${GITHUB_OUTPUT}"

      - name: Deploy core docs
        uses: matter-labs/deploy-mdbooks@77856145362bf23834f2e54a44a928790c4bee7c # v1
        with:
          version: ${{ inputs.version || steps.extract-version.outputs.version || github.ref_name }}
          docs-dir: ${{ env.DOCS_DIR }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-tests: ${{ env.ENABLE_TESTS }}
          project: ${{ env.PROJECT }}
          deploy: ${{ github.event_name != 'pull_request' }}
